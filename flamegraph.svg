<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="27554"><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.01%)</title><rect x="0.0073%" y="597" width="0.0109%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.2573%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="0.0036%" y="613" width="0.0218%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="6"/><text x="0.2536%" y="623.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.0254%" y="613" width="0.0181%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="5"/><text x="0.2754%" y="623.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.0254%" y="597" width="0.0181%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="5"/><text x="0.2754%" y="607.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (5 samples, 0.02%)</title><rect x="0.0508%" y="597" width="0.0181%" height="15" fill="rgb(208,68,35)" fg:x="14" fg:w="5"/><text x="0.3008%" y="607.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (5 samples, 0.02%)</title><rect x="0.0508%" y="581" width="0.0181%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="5"/><text x="0.3008%" y="591.50"></text></g><g><title>cargo::core::resolver::resolve (5 samples, 0.02%)</title><rect x="0.0508%" y="565" width="0.0181%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="5"/><text x="0.3008%" y="575.50"></text></g><g><title>cargo::core::resolver::activate (5 samples, 0.02%)</title><rect x="0.0508%" y="549" width="0.0181%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="5"/><text x="0.3008%" y="559.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps (5 samples, 0.02%)</title><rect x="0.0508%" y="533" width="0.0181%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="5"/><text x="0.3008%" y="543.50"></text></g><g><title>core::iter::adapters::try_process::&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, (cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;, &lt;core::result::Result&lt;alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, anyhow::Error&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), anyhow::Error&gt;&gt;&gt;::from_iter&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;&gt;::{closure#0}, alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;&gt; (5 samples, 0.02%)</title><rect x="0.0508%" y="517" width="0.0181%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="5"/><text x="0.3008%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::iter::adapters::GenericShunt&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;&gt;&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="0.0508%" y="501" width="0.0181%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="5"/><text x="0.3008%" y="511.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0} (5 samples, 0.02%)</title><rect x="0.0508%" y="485" width="0.0181%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="5"/><text x="0.3008%" y="495.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::query (5 samples, 0.02%)</title><rect x="0.0508%" y="469" width="0.0181%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="5"/><text x="0.3008%" y="479.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (5 samples, 0.02%)</title><rect x="0.0508%" y="453" width="0.0181%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="5"/><text x="0.3008%" y="463.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (5 samples, 0.02%)</title><rect x="0.0508%" y="437" width="0.0181%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="5"/><text x="0.3008%" y="447.50"></text></g><g><title>&lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online (5 samples, 0.02%)</title><rect x="0.0508%" y="421" width="0.0181%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="5"/><text x="0.3008%" y="431.50"></text></g><g><title>&lt;cargo::sources::registry::index::RegistryIndex&gt;::load_summaries (5 samples, 0.02%)</title><rect x="0.0508%" y="405" width="0.0181%" height="15" fill="rgb(225,20,46)" fg:x="14" fg:w="5"/><text x="0.3008%" y="415.50"></text></g><g><title>&lt;cargo::sources::registry::remote::RemoteRegistry as cargo::sources::registry::RegistryData&gt;::load (5 samples, 0.02%)</title><rect x="0.0508%" y="389" width="0.0181%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="5"/><text x="0.3008%" y="399.50"></text></g><g><title>&lt;git2::tree::Tree&gt;::get_path (5 samples, 0.02%)</title><rect x="0.0508%" y="373" width="0.0181%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="5"/><text x="0.3008%" y="383.50"></text></g><g><title>git_tree_entry_bypath (5 samples, 0.02%)</title><rect x="0.0508%" y="357" width="0.0181%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="5"/><text x="0.3008%" y="367.50"></text></g><g><title>git_object_lookup_prefix (5 samples, 0.02%)</title><rect x="0.0508%" y="341" width="0.0181%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="5"/><text x="0.3008%" y="351.50"></text></g><g><title>git_odb_read (5 samples, 0.02%)</title><rect x="0.0508%" y="325" width="0.0181%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="5"/><text x="0.3008%" y="335.50"></text></g><g><title>odb_read_1 (5 samples, 0.02%)</title><rect x="0.0508%" y="309" width="0.0181%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="5"/><text x="0.3008%" y="319.50"></text></g><g><title>pack_backend__read (5 samples, 0.02%)</title><rect x="0.0508%" y="293" width="0.0181%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="5"/><text x="0.3008%" y="303.50"></text></g><g><title>git_packfile_unpack (5 samples, 0.02%)</title><rect x="0.0508%" y="277" width="0.0181%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="5"/><text x="0.3008%" y="287.50"></text></g><g><title>packfile_unpack_compressed (5 samples, 0.02%)</title><rect x="0.0508%" y="261" width="0.0181%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="5"/><text x="0.3008%" y="271.50"></text></g><g><title>git_zstream_get_output_chunk (5 samples, 0.02%)</title><rect x="0.0508%" y="245" width="0.0181%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="5"/><text x="0.3008%" y="255.50"></text></g><g><title>inflate (5 samples, 0.02%)</title><rect x="0.0508%" y="229" width="0.0181%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="5"/><text x="0.3008%" y="239.50"></text></g><g><title>inflate_fast (5 samples, 0.02%)</title><rect x="0.0508%" y="213" width="0.0181%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="5"/><text x="0.3008%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="0.0436%" y="613" width="0.0399%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="11"/><text x="0.2936%" y="623.50"></text></g><g><title>rustup_init::main (3 samples, 0.01%)</title><rect x="0.0726%" y="597" width="0.0109%" height="15" fill="rgb(209,103,24)" fg:x="20" fg:w="3"/><text x="0.3226%" y="607.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (3 samples, 0.01%)</title><rect x="0.0726%" y="581" width="0.0109%" height="15" fill="rgb(229,88,8)" fg:x="20" fg:w="3"/><text x="0.3226%" y="591.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.01%)</title><rect x="0.0835%" y="549" width="0.0109%" height="15" fill="rgb(213,181,19)" fg:x="23" fg:w="3"/><text x="0.3335%" y="559.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.01%)</title><rect x="0.0835%" y="533" width="0.0109%" height="15" fill="rgb(254,191,54)" fg:x="23" fg:w="3"/><text x="0.3335%" y="543.50"></text></g><g><title>std::panicking::try (3 samples, 0.01%)</title><rect x="0.0835%" y="517" width="0.0109%" height="15" fill="rgb(241,83,37)" fg:x="23" fg:w="3"/><text x="0.3335%" y="527.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.01%)</title><rect x="0.0835%" y="501" width="0.0109%" height="15" fill="rgb(233,36,39)" fg:x="23" fg:w="3"/><text x="0.3335%" y="511.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (3 samples, 0.01%)</title><rect x="0.0835%" y="485" width="0.0109%" height="15" fill="rgb(226,3,54)" fg:x="23" fg:w="3"/><text x="0.3335%" y="495.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.01%)</title><rect x="0.0835%" y="469" width="0.0109%" height="15" fill="rgb(245,192,40)" fg:x="23" fg:w="3"/><text x="0.3335%" y="479.50"></text></g><g><title>std::panicking::try (3 samples, 0.01%)</title><rect x="0.0835%" y="453" width="0.0109%" height="15" fill="rgb(238,167,29)" fg:x="23" fg:w="3"/><text x="0.3335%" y="463.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.01%)</title><rect x="0.0835%" y="437" width="0.0109%" height="15" fill="rgb(232,182,51)" fg:x="23" fg:w="3"/><text x="0.3335%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.01%)</title><rect x="0.0835%" y="421" width="0.0109%" height="15" fill="rgb(231,60,39)" fg:x="23" fg:w="3"/><text x="0.3335%" y="431.50"></text></g><g><title>std::rt::lang_start::&lt;()&gt;::{closure#0} (3 samples, 0.01%)</title><rect x="0.0835%" y="405" width="0.0109%" height="15" fill="rgb(208,69,12)" fg:x="23" fg:w="3"/><text x="0.3335%" y="415.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;fn(), ()&gt; (3 samples, 0.01%)</title><rect x="0.0835%" y="389" width="0.0109%" height="15" fill="rgb(235,93,37)" fg:x="23" fg:w="3"/><text x="0.3335%" y="399.50"></text></g><g><title>cargo::main (3 samples, 0.01%)</title><rect x="0.0835%" y="373" width="0.0109%" height="15" fill="rgb(213,116,39)" fg:x="23" fg:w="3"/><text x="0.3335%" y="383.50"></text></g><g><title>cargo::cli::main (3 samples, 0.01%)</title><rect x="0.0835%" y="357" width="0.0109%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="3"/><text x="0.3335%" y="367.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_manifest (4 samples, 0.01%)</title><rect x="0.1016%" y="501" width="0.0145%" height="15" fill="rgb(206,96,30)" fg:x="28" fg:w="4"/><text x="0.3516%" y="511.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (4 samples, 0.01%)</title><rect x="0.1016%" y="485" width="0.0145%" height="15" fill="rgb(218,138,4)" fg:x="28" fg:w="4"/><text x="0.3516%" y="495.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (4 samples, 0.01%)</title><rect x="0.1016%" y="469" width="0.0145%" height="15" fill="rgb(250,191,14)" fg:x="28" fg:w="4"/><text x="0.3516%" y="479.50"></text></g><g><title>toml::de::from_str (3 samples, 0.01%)</title><rect x="0.1052%" y="453" width="0.0109%" height="15" fill="rgb(239,60,40)" fg:x="29" fg:w="3"/><text x="0.3552%" y="463.50"></text></g><g><title>toml::de::Deserializer::tables (7 samples, 0.03%)</title><rect x="0.1198%" y="437" width="0.0254%" height="15" fill="rgb(206,27,48)" fg:x="33" fg:w="7"/><text x="0.3698%" y="447.50"></text></g><g><title>cargo (42 samples, 0.15%)</title><rect x="0.0000%" y="629" width="0.1524%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="42"/><text x="0.2500%" y="639.50"></text></g><g><title>_start (19 samples, 0.07%)</title><rect x="0.0835%" y="613" width="0.0690%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="19"/><text x="0.3335%" y="623.50"></text></g><g><title>__libc_start_main (19 samples, 0.07%)</title><rect x="0.0835%" y="597" width="0.0690%" height="15" fill="rgb(247,123,22)" fg:x="23" fg:w="19"/><text x="0.3335%" y="607.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="0.0835%" y="581" width="0.0690%" height="15" fill="rgb(231,138,38)" fg:x="23" fg:w="19"/><text x="0.3335%" y="591.50"></text></g><g><title>main (19 samples, 0.07%)</title><rect x="0.0835%" y="565" width="0.0690%" height="15" fill="rgb(231,145,46)" fg:x="23" fg:w="19"/><text x="0.3335%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 0.06%)</title><rect x="0.0944%" y="549" width="0.0581%" height="15" fill="rgb(251,118,11)" fg:x="26" fg:w="16"/><text x="0.3444%" y="559.50"></text></g><g><title>rustup_init::main (16 samples, 0.06%)</title><rect x="0.0944%" y="533" width="0.0581%" height="15" fill="rgb(217,147,25)" fg:x="26" fg:w="16"/><text x="0.3444%" y="543.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (15 samples, 0.05%)</title><rect x="0.0980%" y="517" width="0.0544%" height="15" fill="rgb(247,81,37)" fg:x="27" fg:w="15"/><text x="0.3480%" y="527.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::list_components (10 samples, 0.04%)</title><rect x="0.1161%" y="501" width="0.0363%" height="15" fill="rgb(209,12,38)" fg:x="32" fg:w="10"/><text x="0.3661%" y="511.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (10 samples, 0.04%)</title><rect x="0.1161%" y="485" width="0.0363%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="10"/><text x="0.3661%" y="495.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (10 samples, 0.04%)</title><rect x="0.1161%" y="469" width="0.0363%" height="15" fill="rgb(248,47,43)" fg:x="32" fg:w="10"/><text x="0.3661%" y="479.50"></text></g><g><title>toml::de::from_str (9 samples, 0.03%)</title><rect x="0.1198%" y="453" width="0.0327%" height="15" fill="rgb(221,10,30)" fg:x="33" fg:w="9"/><text x="0.3698%" y="463.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="0.1960%" y="581" width="0.0109%" height="15" fill="rgb(210,229,1)" fg:x="54" fg:w="3"/><text x="0.4460%" y="591.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="0.2069%" y="581" width="0.0798%" height="15" fill="rgb(222,148,37)" fg:x="57" fg:w="22"/><text x="0.4569%" y="591.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="0.2432%" y="565" width="0.0436%" height="15" fill="rgb(234,67,33)" fg:x="67" fg:w="12"/><text x="0.4932%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="0.2504%" y="549" width="0.0363%" height="15" fill="rgb(247,98,35)" fg:x="69" fg:w="10"/><text x="0.5004%" y="559.50"></text></g><g><title>__ctype_init (16 samples, 0.06%)</title><rect x="0.2867%" y="581" width="0.0581%" height="15" fill="rgb(247,138,52)" fg:x="79" fg:w="16"/><text x="0.5367%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="0.3339%" y="565" width="0.0109%" height="15" fill="rgb(213,79,30)" fg:x="92" fg:w="3"/><text x="0.5839%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="0.3847%" y="341" width="0.0218%" height="15" fill="rgb(246,177,23)" fg:x="106" fg:w="6"/><text x="0.6347%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.01%)</title><rect x="0.3956%" y="325" width="0.0109%" height="15" fill="rgb(230,62,27)" fg:x="109" fg:w="3"/><text x="0.6456%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.01%)</title><rect x="0.3956%" y="309" width="0.0109%" height="15" fill="rgb(216,154,8)" fg:x="109" fg:w="3"/><text x="0.6456%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.01%)</title><rect x="0.3956%" y="293" width="0.0109%" height="15" fill="rgb(244,35,45)" fg:x="109" fg:w="3"/><text x="0.6456%" y="303.50"></text></g><g><title>unkr::core::loop_decrypt (7 samples, 0.03%)</title><rect x="0.4210%" y="341" width="0.0254%" height="15" fill="rgb(251,115,12)" fg:x="116" fg:w="7"/><text x="0.6710%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (3 samples, 0.01%)</title><rect x="0.4355%" y="325" width="0.0109%" height="15" fill="rgb(240,54,50)" fg:x="120" fg:w="3"/><text x="0.6855%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.4355%" y="309" width="0.0109%" height="15" fill="rgb(233,84,52)" fg:x="120" fg:w="3"/><text x="0.6855%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (3 samples, 0.01%)</title><rect x="0.4355%" y="293" width="0.0109%" height="15" fill="rgb(207,117,47)" fg:x="120" fg:w="3"/><text x="0.6855%" y="303.50"></text></g><g><title>unkr::core::process_new_str (8 samples, 0.03%)</title><rect x="0.4464%" y="341" width="0.0290%" height="15" fill="rgb(249,43,39)" fg:x="123" fg:w="8"/><text x="0.6964%" y="351.50"></text></g><g><title>unkr::candidates::find_and_print_candidates (6 samples, 0.02%)</title><rect x="0.4537%" y="325" width="0.0218%" height="15" fill="rgb(209,38,44)" fg:x="125" fg:w="6"/><text x="0.7037%" y="335.50"></text></g><g><title>unkr::candidates::find_candidates (3 samples, 0.01%)</title><rect x="0.4645%" y="309" width="0.0109%" height="15" fill="rgb(236,212,23)" fg:x="128" fg:w="3"/><text x="0.7145%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (3 samples, 0.01%)</title><rect x="0.4645%" y="293" width="0.0109%" height="15" fill="rgb(242,79,21)" fg:x="128" fg:w="3"/><text x="0.7145%" y="303.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3 samples, 0.01%)</title><rect x="0.4645%" y="277" width="0.0109%" height="15" fill="rgb(211,96,35)" fg:x="128" fg:w="3"/><text x="0.7145%" y="287.50"></text></g><g><title>alloc::str::join_generic_copy (3 samples, 0.01%)</title><rect x="0.4645%" y="261" width="0.0109%" height="15" fill="rgb(253,215,40)" fg:x="128" fg:w="3"/><text x="0.7145%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="0.4972%" y="309" width="0.0109%" height="15" fill="rgb(211,81,21)" fg:x="137" fg:w="3"/><text x="0.7472%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="0.5081%" y="293" width="0.0109%" height="15" fill="rgb(208,190,38)" fg:x="140" fg:w="3"/><text x="0.7581%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="0.5081%" y="277" width="0.0109%" height="15" fill="rgb(235,213,38)" fg:x="140" fg:w="3"/><text x="0.7581%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="0.5081%" y="261" width="0.0109%" height="15" fill="rgb(237,122,38)" fg:x="140" fg:w="3"/><text x="0.7581%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="0.5081%" y="245" width="0.0109%" height="15" fill="rgb(244,218,35)" fg:x="140" fg:w="3"/><text x="0.7581%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="0.5081%" y="229" width="0.0109%" height="15" fill="rgb(240,68,47)" fg:x="140" fg:w="3"/><text x="0.7581%" y="239.50"></text></g><g><title>alloc::string::String::insert (8 samples, 0.03%)</title><rect x="0.4936%" y="325" width="0.0290%" height="15" fill="rgb(210,16,53)" fg:x="136" fg:w="8"/><text x="0.7436%" y="335.50"></text></g><g><title>alloc::string::String::insert_bytes (4 samples, 0.01%)</title><rect x="0.5081%" y="309" width="0.0145%" height="15" fill="rgb(235,124,12)" fg:x="140" fg:w="4"/><text x="0.7581%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.5480%" y="165" width="0.0218%" height="15" fill="rgb(224,169,11)" fg:x="151" fg:w="6"/><text x="0.7980%" y="175.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.04%)</title><rect x="0.5371%" y="213" width="0.0363%" height="15" fill="rgb(250,166,2)" fg:x="148" fg:w="10"/><text x="0.7871%" y="223.50"></text></g><g><title>realloc (10 samples, 0.04%)</title><rect x="0.5371%" y="197" width="0.0363%" height="15" fill="rgb(242,216,29)" fg:x="148" fg:w="10"/><text x="0.7871%" y="207.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="0.5371%" y="181" width="0.0363%" height="15" fill="rgb(230,116,27)" fg:x="148" fg:w="10"/><text x="0.7871%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.05%)</title><rect x="0.5335%" y="293" width="0.0472%" height="15" fill="rgb(228,99,48)" fg:x="147" fg:w="13"/><text x="0.7835%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.05%)</title><rect x="0.5335%" y="277" width="0.0472%" height="15" fill="rgb(253,11,6)" fg:x="147" fg:w="13"/><text x="0.7835%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.05%)</title><rect x="0.5335%" y="261" width="0.0472%" height="15" fill="rgb(247,143,39)" fg:x="147" fg:w="13"/><text x="0.7835%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.04%)</title><rect x="0.5371%" y="245" width="0.0436%" height="15" fill="rgb(236,97,10)" fg:x="148" fg:w="12"/><text x="0.7871%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.04%)</title><rect x="0.5371%" y="229" width="0.0436%" height="15" fill="rgb(233,208,19)" fg:x="148" fg:w="12"/><text x="0.7871%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.06%)</title><rect x="0.5335%" y="309" width="0.0581%" height="15" fill="rgb(216,164,2)" fg:x="147" fg:w="16"/><text x="0.7835%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.01%)</title><rect x="0.5807%" y="293" width="0.0109%" height="15" fill="rgb(220,129,5)" fg:x="160" fg:w="3"/><text x="0.8307%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.01%)</title><rect x="0.5807%" y="277" width="0.0109%" height="15" fill="rgb(242,17,10)" fg:x="160" fg:w="3"/><text x="0.8307%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.02%)</title><rect x="0.5988%" y="149" width="0.0181%" height="15" fill="rgb(242,107,0)" fg:x="165" fg:w="5"/><text x="0.8488%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;char&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="0.5988%" y="133" width="0.0181%" height="15" fill="rgb(251,28,31)" fg:x="165" fg:w="5"/><text x="0.8488%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;char&gt;&gt;::extend (5 samples, 0.02%)</title><rect x="0.5988%" y="117" width="0.0181%" height="15" fill="rgb(233,223,10)" fg:x="165" fg:w="5"/><text x="0.8488%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (4 samples, 0.01%)</title><rect x="0.6025%" y="101" width="0.0145%" height="15" fill="rgb(215,21,27)" fg:x="166" fg:w="4"/><text x="0.8525%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.01%)</title><rect x="0.6025%" y="85" width="0.0145%" height="15" fill="rgb(232,23,21)" fg:x="166" fg:w="4"/><text x="0.8525%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="0.6025%" y="69" width="0.0145%" height="15" fill="rgb(244,5,23)" fg:x="166" fg:w="4"/><text x="0.8525%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="0.6025%" y="53" width="0.0145%" height="15" fill="rgb(226,81,46)" fg:x="166" fg:w="4"/><text x="0.8525%" y="63.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.01%)</title><rect x="0.6025%" y="37" width="0.0145%" height="15" fill="rgb(247,70,30)" fg:x="166" fg:w="4"/><text x="0.8525%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.04%)</title><rect x="0.5952%" y="309" width="0.0436%" height="15" fill="rgb(212,68,19)" fg:x="164" fg:w="12"/><text x="0.8452%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.04%)</title><rect x="0.5952%" y="293" width="0.0436%" height="15" fill="rgb(240,187,13)" fg:x="164" fg:w="12"/><text x="0.8452%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.04%)</title><rect x="0.5952%" y="277" width="0.0436%" height="15" fill="rgb(223,113,26)" fg:x="164" fg:w="12"/><text x="0.8452%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.04%)</title><rect x="0.5952%" y="261" width="0.0436%" height="15" fill="rgb(206,192,2)" fg:x="164" fg:w="12"/><text x="0.8452%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.04%)</title><rect x="0.5952%" y="245" width="0.0436%" height="15" fill="rgb(241,108,4)" fg:x="164" fg:w="12"/><text x="0.8452%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.04%)</title><rect x="0.5952%" y="229" width="0.0436%" height="15" fill="rgb(247,173,49)" fg:x="164" fg:w="12"/><text x="0.8452%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.04%)</title><rect x="0.5952%" y="213" width="0.0436%" height="15" fill="rgb(224,114,35)" fg:x="164" fg:w="12"/><text x="0.8452%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.04%)</title><rect x="0.5952%" y="197" width="0.0436%" height="15" fill="rgb(245,159,27)" fg:x="164" fg:w="12"/><text x="0.8452%" y="207.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.04%)</title><rect x="0.5952%" y="181" width="0.0436%" height="15" fill="rgb(245,172,44)" fg:x="164" fg:w="12"/><text x="0.8452%" y="191.50"></text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (12 samples, 0.04%)</title><rect x="0.5952%" y="165" width="0.0436%" height="15" fill="rgb(236,23,11)" fg:x="164" fg:w="12"/><text x="0.8452%" y="175.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end (4 samples, 0.01%)</title><rect x="0.6242%" y="149" width="0.0145%" height="15" fill="rgb(205,117,38)" fg:x="172" fg:w="4"/><text x="0.8742%" y="159.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (4 samples, 0.01%)</title><rect x="0.6242%" y="133" width="0.0145%" height="15" fill="rgb(237,72,25)" fg:x="172" fg:w="4"/><text x="0.8742%" y="143.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (4 samples, 0.01%)</title><rect x="0.6242%" y="117" width="0.0145%" height="15" fill="rgb(244,70,9)" fg:x="172" fg:w="4"/><text x="0.8742%" y="127.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (4 samples, 0.01%)</title><rect x="0.6242%" y="101" width="0.0145%" height="15" fill="rgb(217,125,39)" fg:x="172" fg:w="4"/><text x="0.8742%" y="111.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (4 samples, 0.01%)</title><rect x="0.6242%" y="85" width="0.0145%" height="15" fill="rgb(235,36,10)" fg:x="172" fg:w="4"/><text x="0.8742%" y="95.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.01%)</title><rect x="0.6279%" y="69" width="0.0109%" height="15" fill="rgb(251,123,47)" fg:x="173" fg:w="3"/><text x="0.8779%" y="79.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="0.6387%" y="293" width="0.0109%" height="15" fill="rgb(221,13,13)" fg:x="176" fg:w="3"/><text x="0.8887%" y="303.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.01%)</title><rect x="0.6387%" y="277" width="0.0109%" height="15" fill="rgb(238,131,9)" fg:x="176" fg:w="3"/><text x="0.8887%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.01%)</title><rect x="0.6569%" y="277" width="0.0109%" height="15" fill="rgb(211,50,8)" fg:x="181" fg:w="3"/><text x="0.9069%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.01%)</title><rect x="0.6750%" y="261" width="0.0109%" height="15" fill="rgb(245,182,24)" fg:x="186" fg:w="3"/><text x="0.9250%" y="271.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3 samples, 0.01%)</title><rect x="0.6750%" y="245" width="0.0109%" height="15" fill="rgb(242,14,37)" fg:x="186" fg:w="3"/><text x="0.9250%" y="255.50"></text></g><g><title>core::char::from_u32_unchecked (3 samples, 0.01%)</title><rect x="0.6750%" y="229" width="0.0109%" height="15" fill="rgb(246,228,12)" fg:x="186" fg:w="3"/><text x="0.9250%" y="239.50"></text></g><g><title>core::char::convert::from_u32_unchecked (3 samples, 0.01%)</title><rect x="0.6750%" y="213" width="0.0109%" height="15" fill="rgb(213,55,15)" fg:x="186" fg:w="3"/><text x="0.9250%" y="223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="0.7621%" y="245" width="0.0145%" height="15" fill="rgb(209,9,3)" fg:x="210" fg:w="4"/><text x="1.0121%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (7 samples, 0.03%)</title><rect x="0.7839%" y="229" width="0.0254%" height="15" fill="rgb(230,59,30)" fg:x="216" fg:w="7"/><text x="1.0339%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="0.7984%" y="213" width="0.0109%" height="15" fill="rgb(209,121,21)" fg:x="220" fg:w="3"/><text x="1.0484%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="0.8238%" y="213" width="0.0218%" height="15" fill="rgb(220,109,13)" fg:x="227" fg:w="6"/><text x="1.0738%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.05%)</title><rect x="0.8093%" y="229" width="0.0472%" height="15" fill="rgb(232,18,1)" fg:x="223" fg:w="13"/><text x="1.0593%" y="239.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.01%)</title><rect x="0.8456%" y="213" width="0.0109%" height="15" fill="rgb(215,41,42)" fg:x="233" fg:w="3"/><text x="1.0956%" y="223.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.20%)</title><rect x="0.6678%" y="277" width="0.1960%" height="15" fill="rgb(224,123,36)" fg:x="184" fg:w="54"/><text x="0.9178%" y="287.50"></text></g><g><title>core::str::validations::next_code_point (49 samples, 0.18%)</title><rect x="0.6859%" y="261" width="0.1778%" height="15" fill="rgb(240,125,3)" fg:x="189" fg:w="49"/><text x="0.9359%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.09%)</title><rect x="0.7767%" y="245" width="0.0871%" height="15" fill="rgb(205,98,50)" fg:x="214" fg:w="24"/><text x="1.0267%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.04%)</title><rect x="0.8638%" y="277" width="0.0436%" height="15" fill="rgb(205,185,37)" fg:x="238" fg:w="12"/><text x="1.1138%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.04%)</title><rect x="0.8638%" y="261" width="0.0436%" height="15" fill="rgb(238,207,15)" fg:x="238" fg:w="12"/><text x="1.1138%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (88 samples, 0.32%)</title><rect x="0.6387%" y="309" width="0.3194%" height="15" fill="rgb(213,199,42)" fg:x="176" fg:w="88"/><text x="0.8887%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (85 samples, 0.31%)</title><rect x="0.6496%" y="293" width="0.3085%" height="15" fill="rgb(235,201,11)" fg:x="179" fg:w="85"/><text x="0.8996%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (14 samples, 0.05%)</title><rect x="0.9073%" y="277" width="0.0508%" height="15" fill="rgb(207,46,11)" fg:x="250" fg:w="14"/><text x="1.1573%" y="287.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (171 samples, 0.62%)</title><rect x="0.3484%" y="437" width="0.6206%" height="15" fill="rgb(241,35,35)" fg:x="96" fg:w="171"/><text x="0.5984%" y="447.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (171 samples, 0.62%)</title><rect x="0.3484%" y="421" width="0.6206%" height="15" fill="rgb(243,32,47)" fg:x="96" fg:w="171"/><text x="0.5984%" y="431.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (171 samples, 0.62%)</title><rect x="0.3484%" y="405" width="0.6206%" height="15" fill="rgb(247,202,23)" fg:x="96" fg:w="171"/><text x="0.5984%" y="415.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (171 samples, 0.62%)</title><rect x="0.3484%" y="389" width="0.6206%" height="15" fill="rgb(219,102,11)" fg:x="96" fg:w="171"/><text x="0.5984%" y="399.50"></text></g><g><title>unkr::core::threaded_function (171 samples, 0.62%)</title><rect x="0.3484%" y="373" width="0.6206%" height="15" fill="rgb(243,110,44)" fg:x="96" fg:w="171"/><text x="0.5984%" y="383.50"></text></g><g><title>unkr::core::loop_decrypt (166 samples, 0.60%)</title><rect x="0.3666%" y="357" width="0.6025%" height="15" fill="rgb(222,74,54)" fg:x="101" fg:w="166"/><text x="0.6166%" y="367.50"></text></g><g><title>unkr::transpose::decrypt (134 samples, 0.49%)</title><rect x="0.4827%" y="341" width="0.4863%" height="15" fill="rgb(216,99,12)" fg:x="133" fg:w="134"/><text x="0.7327%" y="351.50"></text></g><g><title>unkr::transpose::internal_encrypt (121 samples, 0.44%)</title><rect x="0.5299%" y="325" width="0.4391%" height="15" fill="rgb(226,22,26)" fg:x="146" fg:w="121"/><text x="0.7799%" y="335.50"></text></g><g><title>std::panic::catch_unwind (172 samples, 0.62%)</title><rect x="0.3484%" y="501" width="0.6242%" height="15" fill="rgb(217,163,10)" fg:x="96" fg:w="172"/><text x="0.5984%" y="511.50"></text></g><g><title>std::panicking::try (172 samples, 0.62%)</title><rect x="0.3484%" y="485" width="0.6242%" height="15" fill="rgb(213,25,53)" fg:x="96" fg:w="172"/><text x="0.5984%" y="495.50"></text></g><g><title>__rust_try (172 samples, 0.62%)</title><rect x="0.3484%" y="469" width="0.6242%" height="15" fill="rgb(252,105,26)" fg:x="96" fg:w="172"/><text x="0.5984%" y="479.50"></text></g><g><title>std::panicking::try::do_call (172 samples, 0.62%)</title><rect x="0.3484%" y="453" width="0.6242%" height="15" fill="rgb(220,39,43)" fg:x="96" fg:w="172"/><text x="0.5984%" y="463.50"></text></g><g><title>malloc (13 samples, 0.05%)</title><rect x="0.9726%" y="469" width="0.0472%" height="15" fill="rgb(229,68,48)" fg:x="268" fg:w="13"/><text x="1.2226%" y="479.50"></text></g><g><title>[libc.so.6] (13 samples, 0.05%)</title><rect x="0.9726%" y="453" width="0.0472%" height="15" fill="rgb(252,8,32)" fg:x="268" fg:w="13"/><text x="1.2226%" y="463.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="0.9763%" y="437" width="0.0436%" height="15" fill="rgb(223,20,43)" fg:x="269" fg:w="12"/><text x="1.2263%" y="447.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="0.9944%" y="421" width="0.0254%" height="15" fill="rgb(229,81,49)" fg:x="274" fg:w="7"/><text x="1.2444%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (188 samples, 0.68%)</title><rect x="0.3448%" y="565" width="0.6823%" height="15" fill="rgb(236,28,36)" fg:x="95" fg:w="188"/><text x="0.5948%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (188 samples, 0.68%)</title><rect x="0.3448%" y="549" width="0.6823%" height="15" fill="rgb(249,185,26)" fg:x="95" fg:w="188"/><text x="0.5948%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (188 samples, 0.68%)</title><rect x="0.3448%" y="533" width="0.6823%" height="15" fill="rgb(249,174,33)" fg:x="95" fg:w="188"/><text x="0.5948%" y="543.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (188 samples, 0.68%)</title><rect x="0.3448%" y="517" width="0.6823%" height="15" fill="rgb(233,201,37)" fg:x="95" fg:w="188"/><text x="0.5948%" y="527.50"></text></g><g><title>std::sys::unix::thread::guard::current (15 samples, 0.05%)</title><rect x="0.9726%" y="501" width="0.0544%" height="15" fill="rgb(221,78,26)" fg:x="268" fg:w="15"/><text x="1.2226%" y="511.50"></text></g><g><title>pthread_getattr_np (15 samples, 0.05%)</title><rect x="0.9726%" y="485" width="0.0544%" height="15" fill="rgb(250,127,30)" fg:x="268" fg:w="15"/><text x="1.2226%" y="495.50"></text></g><g><title>[libc.so.6] (244 samples, 0.89%)</title><rect x="0.1597%" y="613" width="0.8855%" height="15" fill="rgb(230,49,44)" fg:x="44" fg:w="244"/><text x="0.4097%" y="623.50"></text></g><g><title>[libc.so.6] (244 samples, 0.89%)</title><rect x="0.1597%" y="597" width="0.8855%" height="15" fill="rgb(229,67,23)" fg:x="44" fg:w="244"/><text x="0.4097%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (193 samples, 0.70%)</title><rect x="0.3448%" y="581" width="0.7004%" height="15" fill="rgb(249,83,47)" fg:x="95" fg:w="193"/><text x="0.5948%" y="591.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 0.02%)</title><rect x="1.0271%" y="565" width="0.0181%" height="15" fill="rgb(215,43,3)" fg:x="283" fg:w="5"/><text x="1.2771%" y="575.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 0.02%)</title><rect x="1.0271%" y="549" width="0.0181%" height="15" fill="rgb(238,154,13)" fg:x="283" fg:w="5"/><text x="1.2771%" y="559.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 0.01%)</title><rect x="1.0307%" y="533" width="0.0145%" height="15" fill="rgb(219,56,2)" fg:x="284" fg:w="4"/><text x="1.2807%" y="543.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 0.01%)</title><rect x="1.0307%" y="517" width="0.0145%" height="15" fill="rgb(233,0,4)" fg:x="284" fg:w="4"/><text x="1.2807%" y="527.50"></text></g><g><title>std::sys::unix::os::page_size (3 samples, 0.01%)</title><rect x="1.0343%" y="501" width="0.0109%" height="15" fill="rgb(235,30,7)" fg:x="285" fg:w="3"/><text x="1.2843%" y="511.50"></text></g><g><title>__sysconf (3 samples, 0.01%)</title><rect x="1.0343%" y="485" width="0.0109%" height="15" fill="rgb(250,79,13)" fg:x="285" fg:w="3"/><text x="1.2843%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="1.0960%" y="597" width="0.0145%" height="15" fill="rgb(211,146,34)" fg:x="302" fg:w="4"/><text x="1.3460%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4 samples, 0.01%)</title><rect x="1.0960%" y="581" width="0.0145%" height="15" fill="rgb(228,22,38)" fg:x="302" fg:w="4"/><text x="1.3460%" y="591.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.01%)</title><rect x="1.0960%" y="565" width="0.0145%" height="15" fill="rgb(235,168,5)" fg:x="302" fg:w="4"/><text x="1.3460%" y="575.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (4 samples, 0.01%)</title><rect x="1.0960%" y="549" width="0.0145%" height="15" fill="rgb(221,155,16)" fg:x="302" fg:w="4"/><text x="1.3460%" y="559.50"></text></g><g><title>unkr::core::threaded_function (4 samples, 0.01%)</title><rect x="1.0960%" y="533" width="0.0145%" height="15" fill="rgb(215,215,53)" fg:x="302" fg:w="4"/><text x="1.3460%" y="543.50"></text></g><g><title>unkr::core::loop_decrypt (4 samples, 0.01%)</title><rect x="1.0960%" y="517" width="0.0145%" height="15" fill="rgb(223,4,10)" fg:x="302" fg:w="4"/><text x="1.3460%" y="527.50"></text></g><g><title>unkr::core::loop_decrypt (4 samples, 0.01%)</title><rect x="1.0960%" y="501" width="0.0145%" height="15" fill="rgb(234,103,6)" fg:x="302" fg:w="4"/><text x="1.3460%" y="511.50"></text></g><g><title>unkr::transpose::decrypt (3 samples, 0.01%)</title><rect x="1.0997%" y="485" width="0.0109%" height="15" fill="rgb(227,97,0)" fg:x="303" fg:w="3"/><text x="1.3497%" y="495.50"></text></g><g><title>unkr::transpose::internal_encrypt (3 samples, 0.01%)</title><rect x="1.0997%" y="469" width="0.0109%" height="15" fill="rgb(234,150,53)" fg:x="303" fg:w="3"/><text x="1.3497%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.01%)</title><rect x="1.0997%" y="453" width="0.0109%" height="15" fill="rgb(228,201,54)" fg:x="303" fg:w="3"/><text x="1.3497%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="1.0997%" y="437" width="0.0109%" height="15" fill="rgb(222,22,37)" fg:x="303" fg:w="3"/><text x="1.3497%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="1.0997%" y="421" width="0.0109%" height="15" fill="rgb(237,53,32)" fg:x="303" fg:w="3"/><text x="1.3497%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="1.0997%" y="405" width="0.0109%" height="15" fill="rgb(233,25,53)" fg:x="303" fg:w="3"/><text x="1.3497%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="1.0997%" y="389" width="0.0109%" height="15" fill="rgb(210,40,34)" fg:x="303" fg:w="3"/><text x="1.3497%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="1.0997%" y="373" width="0.0109%" height="15" fill="rgb(241,220,44)" fg:x="303" fg:w="3"/><text x="1.3497%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="1.0997%" y="357" width="0.0109%" height="15" fill="rgb(235,28,35)" fg:x="303" fg:w="3"/><text x="1.3497%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="1.0997%" y="341" width="0.0109%" height="15" fill="rgb(210,56,17)" fg:x="303" fg:w="3"/><text x="1.3497%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.01%)</title><rect x="1.0997%" y="325" width="0.0109%" height="15" fill="rgb(224,130,29)" fg:x="303" fg:w="3"/><text x="1.3497%" y="335.50"></text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (3 samples, 0.01%)</title><rect x="1.0997%" y="309" width="0.0109%" height="15" fill="rgb(235,212,8)" fg:x="303" fg:w="3"/><text x="1.3497%" y="319.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="1.1105%" y="597" width="0.0327%" height="15" fill="rgb(223,33,50)" fg:x="306" fg:w="9"/><text x="1.3605%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.03%)</title><rect x="1.1105%" y="581" width="0.0327%" height="15" fill="rgb(219,149,13)" fg:x="306" fg:w="9"/><text x="1.3605%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="1.1105%" y="565" width="0.0327%" height="15" fill="rgb(250,156,29)" fg:x="306" fg:w="9"/><text x="1.3605%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="1.1105%" y="549" width="0.0327%" height="15" fill="rgb(216,193,19)" fg:x="306" fg:w="9"/><text x="1.3605%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (9 samples, 0.03%)</title><rect x="1.1105%" y="533" width="0.0327%" height="15" fill="rgb(216,135,14)" fg:x="306" fg:w="9"/><text x="1.3605%" y="543.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (9 samples, 0.03%)</title><rect x="1.1105%" y="517" width="0.0327%" height="15" fill="rgb(241,47,5)" fg:x="306" fg:w="9"/><text x="1.3605%" y="527.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="1.1105%" y="501" width="0.0327%" height="15" fill="rgb(233,42,35)" fg:x="306" fg:w="9"/><text x="1.3605%" y="511.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="1.1105%" y="485" width="0.0327%" height="15" fill="rgb(231,13,6)" fg:x="306" fg:w="9"/><text x="1.3605%" y="495.50"></text></g><g><title>__rust_try (9 samples, 0.03%)</title><rect x="1.1105%" y="469" width="0.0327%" height="15" fill="rgb(207,181,40)" fg:x="306" fg:w="9"/><text x="1.3605%" y="479.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="1.1105%" y="453" width="0.0327%" height="15" fill="rgb(254,173,49)" fg:x="306" fg:w="9"/><text x="1.3605%" y="463.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="1.1105%" y="437" width="0.0327%" height="15" fill="rgb(221,1,38)" fg:x="306" fg:w="9"/><text x="1.3605%" y="447.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (9 samples, 0.03%)</title><rect x="1.1105%" y="421" width="0.0327%" height="15" fill="rgb(206,124,46)" fg:x="306" fg:w="9"/><text x="1.3605%" y="431.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.03%)</title><rect x="1.1105%" y="405" width="0.0327%" height="15" fill="rgb(249,21,11)" fg:x="306" fg:w="9"/><text x="1.3605%" y="415.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (9 samples, 0.03%)</title><rect x="1.1105%" y="389" width="0.0327%" height="15" fill="rgb(222,201,40)" fg:x="306" fg:w="9"/><text x="1.3605%" y="399.50"></text></g><g><title>unkr::core::threaded_function (9 samples, 0.03%)</title><rect x="1.1105%" y="373" width="0.0327%" height="15" fill="rgb(235,61,29)" fg:x="306" fg:w="9"/><text x="1.3605%" y="383.50"></text></g><g><title>unkr::core::loop_decrypt (9 samples, 0.03%)</title><rect x="1.1105%" y="357" width="0.0327%" height="15" fill="rgb(219,207,3)" fg:x="306" fg:w="9"/><text x="1.3605%" y="367.50"></text></g><g><title>unkr::core::loop_decrypt (9 samples, 0.03%)</title><rect x="1.1105%" y="341" width="0.0327%" height="15" fill="rgb(222,56,46)" fg:x="306" fg:w="9"/><text x="1.3605%" y="351.50"></text></g><g><title>unkr::transpose::decrypt (3 samples, 0.01%)</title><rect x="1.1323%" y="325" width="0.0109%" height="15" fill="rgb(239,76,54)" fg:x="312" fg:w="3"/><text x="1.3823%" y="335.50"></text></g><g><title>__rust_try (32 samples, 0.12%)</title><rect x="1.1432%" y="597" width="0.1161%" height="15" fill="rgb(231,124,27)" fg:x="315" fg:w="32"/><text x="1.3932%" y="607.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.12%)</title><rect x="1.1432%" y="581" width="0.1161%" height="15" fill="rgb(249,195,6)" fg:x="315" fg:w="32"/><text x="1.3932%" y="591.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.12%)</title><rect x="1.1432%" y="565" width="0.1161%" height="15" fill="rgb(237,174,47)" fg:x="315" fg:w="32"/><text x="1.3932%" y="575.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (32 samples, 0.12%)</title><rect x="1.1432%" y="549" width="0.1161%" height="15" fill="rgb(206,201,31)" fg:x="315" fg:w="32"/><text x="1.3932%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (32 samples, 0.12%)</title><rect x="1.1432%" y="533" width="0.1161%" height="15" fill="rgb(231,57,52)" fg:x="315" fg:w="32"/><text x="1.3932%" y="543.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (32 samples, 0.12%)</title><rect x="1.1432%" y="517" width="0.1161%" height="15" fill="rgb(248,177,22)" fg:x="315" fg:w="32"/><text x="1.3932%" y="527.50"></text></g><g><title>unkr::core::threaded_function (32 samples, 0.12%)</title><rect x="1.1432%" y="501" width="0.1161%" height="15" fill="rgb(215,211,37)" fg:x="315" fg:w="32"/><text x="1.3932%" y="511.50"></text></g><g><title>unkr::core::loop_decrypt (32 samples, 0.12%)</title><rect x="1.1432%" y="485" width="0.1161%" height="15" fill="rgb(241,128,51)" fg:x="315" fg:w="32"/><text x="1.3932%" y="495.50"></text></g><g><title>unkr::core::loop_decrypt (32 samples, 0.12%)</title><rect x="1.1432%" y="469" width="0.1161%" height="15" fill="rgb(227,165,31)" fg:x="315" fg:w="32"/><text x="1.3932%" y="479.50"></text></g><g><title>unkr::transpose::decrypt (31 samples, 0.11%)</title><rect x="1.1468%" y="453" width="0.1125%" height="15" fill="rgb(228,167,24)" fg:x="316" fg:w="31"/><text x="1.3968%" y="463.50"></text></g><g><title>unkr::transpose::internal_encrypt (31 samples, 0.11%)</title><rect x="1.1468%" y="437" width="0.1125%" height="15" fill="rgb(228,143,12)" fg:x="316" fg:w="31"/><text x="1.3968%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (30 samples, 0.11%)</title><rect x="1.1505%" y="421" width="0.1089%" height="15" fill="rgb(249,149,8)" fg:x="317" fg:w="30"/><text x="1.4005%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (30 samples, 0.11%)</title><rect x="1.1505%" y="405" width="0.1089%" height="15" fill="rgb(243,35,44)" fg:x="317" fg:w="30"/><text x="1.4005%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.11%)</title><rect x="1.1505%" y="389" width="0.1089%" height="15" fill="rgb(246,89,9)" fg:x="317" fg:w="30"/><text x="1.4005%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (30 samples, 0.11%)</title><rect x="1.1505%" y="373" width="0.1089%" height="15" fill="rgb(233,213,13)" fg:x="317" fg:w="30"/><text x="1.4005%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.11%)</title><rect x="1.1505%" y="357" width="0.1089%" height="15" fill="rgb(233,141,41)" fg:x="317" fg:w="30"/><text x="1.4005%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (30 samples, 0.11%)</title><rect x="1.1505%" y="341" width="0.1089%" height="15" fill="rgb(239,167,4)" fg:x="317" fg:w="30"/><text x="1.4005%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (30 samples, 0.11%)</title><rect x="1.1505%" y="325" width="0.1089%" height="15" fill="rgb(209,217,16)" fg:x="317" fg:w="30"/><text x="1.4005%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (25 samples, 0.09%)</title><rect x="1.1686%" y="309" width="0.0907%" height="15" fill="rgb(219,88,35)" fg:x="322" fg:w="25"/><text x="1.4186%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="1.2702%" y="389" width="0.0109%" height="15" fill="rgb(220,193,23)" fg:x="350" fg:w="3"/><text x="1.5202%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="1.2702%" y="373" width="0.0109%" height="15" fill="rgb(230,90,52)" fg:x="350" fg:w="3"/><text x="1.5202%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="1.2847%" y="341" width="0.0109%" height="15" fill="rgb(252,106,19)" fg:x="354" fg:w="3"/><text x="1.5347%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="1.2847%" y="325" width="0.0109%" height="15" fill="rgb(206,74,20)" fg:x="354" fg:w="3"/><text x="1.5347%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="1.2811%" y="389" width="0.0181%" height="15" fill="rgb(230,138,44)" fg:x="353" fg:w="5"/><text x="1.5311%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.02%)</title><rect x="1.2811%" y="373" width="0.0181%" height="15" fill="rgb(235,182,43)" fg:x="353" fg:w="5"/><text x="1.5311%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.01%)</title><rect x="1.2847%" y="357" width="0.0145%" height="15" fill="rgb(242,16,51)" fg:x="354" fg:w="4"/><text x="1.5347%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="1.3428%" y="357" width="0.0145%" height="15" fill="rgb(248,9,4)" fg:x="370" fg:w="4"/><text x="1.5928%" y="367.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="1.3573%" y="357" width="0.0436%" height="15" fill="rgb(210,31,22)" fg:x="374" fg:w="12"/><text x="1.6073%" y="367.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.01%)</title><rect x="1.3900%" y="341" width="0.0109%" height="15" fill="rgb(239,54,39)" fg:x="383" fg:w="3"/><text x="1.6400%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.01%)</title><rect x="1.4009%" y="357" width="0.0109%" height="15" fill="rgb(230,99,41)" fg:x="386" fg:w="3"/><text x="1.6509%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (37 samples, 0.13%)</title><rect x="1.3029%" y="389" width="0.1343%" height="15" fill="rgb(253,106,12)" fg:x="359" fg:w="37"/><text x="1.5529%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (37 samples, 0.13%)</title><rect x="1.3029%" y="373" width="0.1343%" height="15" fill="rgb(213,46,41)" fg:x="359" fg:w="37"/><text x="1.5529%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (7 samples, 0.03%)</title><rect x="1.4118%" y="357" width="0.0254%" height="15" fill="rgb(215,133,35)" fg:x="389" fg:w="7"/><text x="1.6618%" y="367.50"></text></g><g><title>std::panic::catch_unwind (49 samples, 0.18%)</title><rect x="1.2630%" y="597" width="0.1778%" height="15" fill="rgb(213,28,5)" fg:x="348" fg:w="49"/><text x="1.5130%" y="607.50"></text></g><g><title>std::panicking::try (49 samples, 0.18%)</title><rect x="1.2630%" y="581" width="0.1778%" height="15" fill="rgb(215,77,49)" fg:x="348" fg:w="49"/><text x="1.5130%" y="591.50"></text></g><g><title>__rust_try (49 samples, 0.18%)</title><rect x="1.2630%" y="565" width="0.1778%" height="15" fill="rgb(248,100,22)" fg:x="348" fg:w="49"/><text x="1.5130%" y="575.50"></text></g><g><title>std::panicking::try::do_call (49 samples, 0.18%)</title><rect x="1.2630%" y="549" width="0.1778%" height="15" fill="rgb(208,67,9)" fg:x="348" fg:w="49"/><text x="1.5130%" y="559.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49 samples, 0.18%)</title><rect x="1.2630%" y="533" width="0.1778%" height="15" fill="rgb(219,133,21)" fg:x="348" fg:w="49"/><text x="1.5130%" y="543.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (49 samples, 0.18%)</title><rect x="1.2630%" y="517" width="0.1778%" height="15" fill="rgb(246,46,29)" fg:x="348" fg:w="49"/><text x="1.5130%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (49 samples, 0.18%)</title><rect x="1.2630%" y="501" width="0.1778%" height="15" fill="rgb(246,185,52)" fg:x="348" fg:w="49"/><text x="1.5130%" y="511.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (49 samples, 0.18%)</title><rect x="1.2630%" y="485" width="0.1778%" height="15" fill="rgb(252,136,11)" fg:x="348" fg:w="49"/><text x="1.5130%" y="495.50"></text></g><g><title>unkr::core::threaded_function (49 samples, 0.18%)</title><rect x="1.2630%" y="469" width="0.1778%" height="15" fill="rgb(219,138,53)" fg:x="348" fg:w="49"/><text x="1.5130%" y="479.50"></text></g><g><title>unkr::core::loop_decrypt (49 samples, 0.18%)</title><rect x="1.2630%" y="453" width="0.1778%" height="15" fill="rgb(211,51,23)" fg:x="348" fg:w="49"/><text x="1.5130%" y="463.50"></text></g><g><title>unkr::core::loop_decrypt (49 samples, 0.18%)</title><rect x="1.2630%" y="437" width="0.1778%" height="15" fill="rgb(247,221,28)" fg:x="348" fg:w="49"/><text x="1.5130%" y="447.50"></text></g><g><title>unkr::transpose::decrypt (47 samples, 0.17%)</title><rect x="1.2702%" y="421" width="0.1706%" height="15" fill="rgb(251,222,45)" fg:x="350" fg:w="47"/><text x="1.5202%" y="431.50"></text></g><g><title>unkr::transpose::internal_encrypt (47 samples, 0.17%)</title><rect x="1.2702%" y="405" width="0.1706%" height="15" fill="rgb(217,162,53)" fg:x="350" fg:w="47"/><text x="1.5202%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="1.4408%" y="373" width="0.0109%" height="15" fill="rgb(229,93,14)" fg:x="397" fg:w="3"/><text x="1.6908%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="1.4408%" y="357" width="0.0109%" height="15" fill="rgb(209,67,49)" fg:x="397" fg:w="3"/><text x="1.6908%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1.4408%" y="341" width="0.0109%" height="15" fill="rgb(213,87,29)" fg:x="397" fg:w="3"/><text x="1.6908%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="1.4408%" y="437" width="0.0145%" height="15" fill="rgb(205,151,52)" fg:x="397" fg:w="4"/><text x="1.6908%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="1.4408%" y="421" width="0.0145%" height="15" fill="rgb(253,215,39)" fg:x="397" fg:w="4"/><text x="1.6908%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="1.4408%" y="405" width="0.0145%" height="15" fill="rgb(221,220,41)" fg:x="397" fg:w="4"/><text x="1.6908%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="1.4408%" y="389" width="0.0145%" height="15" fill="rgb(218,133,21)" fg:x="397" fg:w="4"/><text x="1.6908%" y="399.50"></text></g><g><title>unkr::core::process_new_str (5 samples, 0.02%)</title><rect x="1.4408%" y="469" width="0.0181%" height="15" fill="rgb(221,193,43)" fg:x="397" fg:w="5"/><text x="1.6908%" y="479.50"></text></g><g><title>unkr::candidates::find_and_print_candidates (5 samples, 0.02%)</title><rect x="1.4408%" y="453" width="0.0181%" height="15" fill="rgb(240,128,52)" fg:x="397" fg:w="5"/><text x="1.6908%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="1.4590%" y="437" width="0.0181%" height="15" fill="rgb(253,114,12)" fg:x="402" fg:w="5"/><text x="1.7090%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="1.4590%" y="421" width="0.0181%" height="15" fill="rgb(215,223,47)" fg:x="402" fg:w="5"/><text x="1.7090%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="1.4590%" y="405" width="0.0181%" height="15" fill="rgb(248,225,23)" fg:x="402" fg:w="5"/><text x="1.7090%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="1.4807%" y="293" width="0.0181%" height="15" fill="rgb(250,108,0)" fg:x="408" fg:w="5"/><text x="1.7307%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="1.4771%" y="309" width="0.0254%" height="15" fill="rgb(228,208,7)" fg:x="407" fg:w="7"/><text x="1.7271%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.01%)</title><rect x="1.5170%" y="277" width="0.0109%" height="15" fill="rgb(244,45,10)" fg:x="418" fg:w="3"/><text x="1.7670%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="1.5170%" y="261" width="0.0109%" height="15" fill="rgb(207,125,25)" fg:x="418" fg:w="3"/><text x="1.7670%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.06%)</title><rect x="1.4771%" y="373" width="0.0617%" height="15" fill="rgb(210,195,18)" fg:x="407" fg:w="17"/><text x="1.7271%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.06%)</title><rect x="1.4771%" y="357" width="0.0617%" height="15" fill="rgb(249,80,12)" fg:x="407" fg:w="17"/><text x="1.7271%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.06%)</title><rect x="1.4771%" y="341" width="0.0617%" height="15" fill="rgb(221,65,9)" fg:x="407" fg:w="17"/><text x="1.7271%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.06%)</title><rect x="1.4771%" y="325" width="0.0617%" height="15" fill="rgb(235,49,36)" fg:x="407" fg:w="17"/><text x="1.7271%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.04%)</title><rect x="1.5025%" y="309" width="0.0363%" height="15" fill="rgb(225,32,20)" fg:x="414" fg:w="10"/><text x="1.7525%" y="319.50"></text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (8 samples, 0.03%)</title><rect x="1.5098%" y="293" width="0.0290%" height="15" fill="rgb(215,141,46)" fg:x="416" fg:w="8"/><text x="1.7598%" y="303.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.10%)</title><rect x="1.4408%" y="597" width="0.1016%" height="15" fill="rgb(250,160,47)" fg:x="397" fg:w="28"/><text x="1.6908%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.10%)</title><rect x="1.4408%" y="581" width="0.1016%" height="15" fill="rgb(216,222,40)" fg:x="397" fg:w="28"/><text x="1.6908%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (28 samples, 0.10%)</title><rect x="1.4408%" y="565" width="0.1016%" height="15" fill="rgb(234,217,39)" fg:x="397" fg:w="28"/><text x="1.6908%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 0.10%)</title><rect x="1.4408%" y="549" width="0.1016%" height="15" fill="rgb(207,178,40)" fg:x="397" fg:w="28"/><text x="1.6908%" y="559.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (28 samples, 0.10%)</title><rect x="1.4408%" y="533" width="0.1016%" height="15" fill="rgb(221,136,13)" fg:x="397" fg:w="28"/><text x="1.6908%" y="543.50"></text></g><g><title>unkr::core::threaded_function (28 samples, 0.10%)</title><rect x="1.4408%" y="517" width="0.1016%" height="15" fill="rgb(249,199,10)" fg:x="397" fg:w="28"/><text x="1.6908%" y="527.50"></text></g><g><title>unkr::core::loop_decrypt (28 samples, 0.10%)</title><rect x="1.4408%" y="501" width="0.1016%" height="15" fill="rgb(249,222,13)" fg:x="397" fg:w="28"/><text x="1.6908%" y="511.50"></text></g><g><title>unkr::core::loop_decrypt (28 samples, 0.10%)</title><rect x="1.4408%" y="485" width="0.1016%" height="15" fill="rgb(244,185,38)" fg:x="397" fg:w="28"/><text x="1.6908%" y="495.50"></text></g><g><title>unkr::transpose::decrypt (23 samples, 0.08%)</title><rect x="1.4590%" y="469" width="0.0835%" height="15" fill="rgb(236,202,9)" fg:x="402" fg:w="23"/><text x="1.7090%" y="479.50"></text></g><g><title>unkr::transpose::internal_encrypt (23 samples, 0.08%)</title><rect x="1.4590%" y="453" width="0.0835%" height="15" fill="rgb(250,229,37)" fg:x="402" fg:w="23"/><text x="1.7090%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.07%)</title><rect x="1.4771%" y="437" width="0.0653%" height="15" fill="rgb(206,174,23)" fg:x="407" fg:w="18"/><text x="1.7271%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.07%)</title><rect x="1.4771%" y="421" width="0.0653%" height="15" fill="rgb(211,33,43)" fg:x="407" fg:w="18"/><text x="1.7271%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.07%)</title><rect x="1.4771%" y="405" width="0.0653%" height="15" fill="rgb(245,58,50)" fg:x="407" fg:w="18"/><text x="1.7271%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18 samples, 0.07%)</title><rect x="1.4771%" y="389" width="0.0653%" height="15" fill="rgb(244,68,36)" fg:x="407" fg:w="18"/><text x="1.7271%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="1.5461%" y="373" width="0.0109%" height="15" fill="rgb(232,229,15)" fg:x="426" fg:w="3"/><text x="1.7961%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="1.5461%" y="357" width="0.0109%" height="15" fill="rgb(254,30,23)" fg:x="426" fg:w="3"/><text x="1.7961%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="1.5461%" y="341" width="0.0109%" height="15" fill="rgb(235,160,14)" fg:x="426" fg:w="3"/><text x="1.7961%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="1.5569%" y="373" width="0.0109%" height="15" fill="rgb(212,155,44)" fg:x="429" fg:w="3"/><text x="1.8069%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="1.5569%" y="357" width="0.0109%" height="15" fill="rgb(226,2,50)" fg:x="429" fg:w="3"/><text x="1.8069%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1.5569%" y="341" width="0.0109%" height="15" fill="rgb(234,177,6)" fg:x="429" fg:w="3"/><text x="1.8069%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="1.5461%" y="437" width="0.0254%" height="15" fill="rgb(217,24,9)" fg:x="426" fg:w="7"/><text x="1.7961%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.03%)</title><rect x="1.5461%" y="421" width="0.0254%" height="15" fill="rgb(220,13,46)" fg:x="426" fg:w="7"/><text x="1.7961%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.03%)</title><rect x="1.5461%" y="405" width="0.0254%" height="15" fill="rgb(239,221,27)" fg:x="426" fg:w="7"/><text x="1.7961%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.03%)</title><rect x="1.5461%" y="389" width="0.0254%" height="15" fill="rgb(222,198,25)" fg:x="426" fg:w="7"/><text x="1.7961%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="1.5823%" y="277" width="0.0109%" height="15" fill="rgb(211,99,13)" fg:x="436" fg:w="3"/><text x="1.8323%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="1.5823%" y="261" width="0.0109%" height="15" fill="rgb(232,111,31)" fg:x="436" fg:w="3"/><text x="1.8323%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1.5823%" y="245" width="0.0109%" height="15" fill="rgb(245,82,37)" fg:x="436" fg:w="3"/><text x="1.8323%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="1.5823%" y="229" width="0.0109%" height="15" fill="rgb(227,149,46)" fg:x="436" fg:w="3"/><text x="1.8323%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="1.5823%" y="213" width="0.0109%" height="15" fill="rgb(218,36,50)" fg:x="436" fg:w="3"/><text x="1.8323%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="1.5823%" y="197" width="0.0109%" height="15" fill="rgb(226,80,48)" fg:x="436" fg:w="3"/><text x="1.8323%" y="207.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="1.5823%" y="181" width="0.0109%" height="15" fill="rgb(238,224,15)" fg:x="436" fg:w="3"/><text x="1.8323%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="1.5751%" y="357" width="0.0218%" height="15" fill="rgb(241,136,10)" fg:x="434" fg:w="6"/><text x="1.8251%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="1.5823%" y="341" width="0.0145%" height="15" fill="rgb(208,32,45)" fg:x="436" fg:w="4"/><text x="1.8323%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="1.5823%" y="325" width="0.0145%" height="15" fill="rgb(207,135,9)" fg:x="436" fg:w="4"/><text x="1.8323%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="1.5823%" y="309" width="0.0145%" height="15" fill="rgb(206,86,44)" fg:x="436" fg:w="4"/><text x="1.8323%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="1.5823%" y="293" width="0.0145%" height="15" fill="rgb(245,177,15)" fg:x="436" fg:w="4"/><text x="1.8323%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="1.5715%" y="421" width="0.0544%" height="15" fill="rgb(206,64,50)" fg:x="433" fg:w="15"/><text x="1.8215%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.05%)</title><rect x="1.5715%" y="405" width="0.0544%" height="15" fill="rgb(234,36,40)" fg:x="433" fg:w="15"/><text x="1.8215%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="1.5715%" y="389" width="0.0544%" height="15" fill="rgb(213,64,8)" fg:x="433" fg:w="15"/><text x="1.8215%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.05%)</title><rect x="1.5715%" y="373" width="0.0544%" height="15" fill="rgb(210,75,36)" fg:x="433" fg:w="15"/><text x="1.8215%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.01%)</title><rect x="1.6150%" y="357" width="0.0109%" height="15" fill="rgb(229,88,21)" fg:x="445" fg:w="3"/><text x="1.8650%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="1.6150%" y="341" width="0.0109%" height="15" fill="rgb(252,204,47)" fg:x="445" fg:w="3"/><text x="1.8650%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.01%)</title><rect x="1.6150%" y="325" width="0.0109%" height="15" fill="rgb(208,77,27)" fg:x="445" fg:w="3"/><text x="1.8650%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (3 samples, 0.01%)</title><rect x="1.6259%" y="421" width="0.0109%" height="15" fill="rgb(221,76,26)" fg:x="448" fg:w="3"/><text x="1.8759%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="1.6259%" y="405" width="0.0109%" height="15" fill="rgb(225,139,18)" fg:x="448" fg:w="3"/><text x="1.8759%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (3 samples, 0.01%)</title><rect x="1.6259%" y="389" width="0.0109%" height="15" fill="rgb(230,137,11)" fg:x="448" fg:w="3"/><text x="1.8759%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.01%)</title><rect x="1.6259%" y="373" width="0.0109%" height="15" fill="rgb(212,28,1)" fg:x="448" fg:w="3"/><text x="1.8759%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="1.6259%" y="357" width="0.0109%" height="15" fill="rgb(248,164,17)" fg:x="448" fg:w="3"/><text x="1.8759%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="1.6259%" y="341" width="0.0109%" height="15" fill="rgb(222,171,42)" fg:x="448" fg:w="3"/><text x="1.8759%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="1.6259%" y="325" width="0.0109%" height="15" fill="rgb(243,84,45)" fg:x="448" fg:w="3"/><text x="1.8759%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.01%)</title><rect x="1.6259%" y="309" width="0.0109%" height="15" fill="rgb(252,49,23)" fg:x="448" fg:w="3"/><text x="1.8759%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="1.6259%" y="293" width="0.0109%" height="15" fill="rgb(215,19,7)" fg:x="448" fg:w="3"/><text x="1.8759%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.01%)</title><rect x="1.6259%" y="277" width="0.0109%" height="15" fill="rgb(238,81,41)" fg:x="448" fg:w="3"/><text x="1.8759%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="1.6368%" y="405" width="0.0145%" height="15" fill="rgb(210,199,37)" fg:x="451" fg:w="4"/><text x="1.8868%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="1.6368%" y="389" width="0.0145%" height="15" fill="rgb(244,192,49)" fg:x="451" fg:w="4"/><text x="1.8868%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="1.6368%" y="373" width="0.0145%" height="15" fill="rgb(226,211,11)" fg:x="451" fg:w="4"/><text x="1.8868%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="1.6368%" y="357" width="0.0145%" height="15" fill="rgb(236,162,54)" fg:x="451" fg:w="4"/><text x="1.8868%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="1.6549%" y="293" width="0.0109%" height="15" fill="rgb(220,229,9)" fg:x="456" fg:w="3"/><text x="1.9049%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="1.6549%" y="277" width="0.0109%" height="15" fill="rgb(250,87,22)" fg:x="456" fg:w="3"/><text x="1.9049%" y="287.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="1.6549%" y="261" width="0.0109%" height="15" fill="rgb(239,43,17)" fg:x="456" fg:w="3"/><text x="1.9049%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (5 samples, 0.02%)</title><rect x="1.6549%" y="405" width="0.0181%" height="15" fill="rgb(231,177,25)" fg:x="456" fg:w="5"/><text x="1.9049%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="1.6549%" y="389" width="0.0181%" height="15" fill="rgb(219,179,1)" fg:x="456" fg:w="5"/><text x="1.9049%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (5 samples, 0.02%)</title><rect x="1.6549%" y="373" width="0.0181%" height="15" fill="rgb(238,219,53)" fg:x="456" fg:w="5"/><text x="1.9049%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.02%)</title><rect x="1.6549%" y="357" width="0.0181%" height="15" fill="rgb(232,167,36)" fg:x="456" fg:w="5"/><text x="1.9049%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="1.6549%" y="341" width="0.0181%" height="15" fill="rgb(244,19,51)" fg:x="456" fg:w="5"/><text x="1.9049%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="1.6549%" y="325" width="0.0181%" height="15" fill="rgb(224,6,22)" fg:x="456" fg:w="5"/><text x="1.9049%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="1.6549%" y="309" width="0.0181%" height="15" fill="rgb(224,145,5)" fg:x="456" fg:w="5"/><text x="1.9049%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (3 samples, 0.01%)</title><rect x="1.6731%" y="389" width="0.0109%" height="15" fill="rgb(234,130,49)" fg:x="461" fg:w="3"/><text x="1.9231%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="1.6731%" y="373" width="0.0109%" height="15" fill="rgb(254,6,2)" fg:x="461" fg:w="3"/><text x="1.9231%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (3 samples, 0.01%)</title><rect x="1.6731%" y="357" width="0.0109%" height="15" fill="rgb(208,96,46)" fg:x="461" fg:w="3"/><text x="1.9231%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.01%)</title><rect x="1.6731%" y="341" width="0.0109%" height="15" fill="rgb(239,3,39)" fg:x="461" fg:w="3"/><text x="1.9231%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="1.6731%" y="325" width="0.0109%" height="15" fill="rgb(233,210,1)" fg:x="461" fg:w="3"/><text x="1.9231%" y="335.50"></text></g><g><title>unkr::core::process_new_str (33 samples, 0.12%)</title><rect x="1.5715%" y="437" width="0.1198%" height="15" fill="rgb(244,137,37)" fg:x="433" fg:w="33"/><text x="1.8215%" y="447.50"></text></g><g><title>unkr::candidates::find_and_print_candidates (15 samples, 0.05%)</title><rect x="1.6368%" y="421" width="0.0544%" height="15" fill="rgb(240,136,2)" fg:x="451" fg:w="15"/><text x="1.8868%" y="431.50"></text></g><g><title>unkr::candidates::find_candidates (5 samples, 0.02%)</title><rect x="1.6731%" y="405" width="0.0181%" height="15" fill="rgb(239,18,37)" fg:x="461" fg:w="5"/><text x="1.9231%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="1.7021%" y="389" width="0.0218%" height="15" fill="rgb(218,185,22)" fg:x="469" fg:w="6"/><text x="1.9521%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (6 samples, 0.02%)</title><rect x="1.7021%" y="373" width="0.0218%" height="15" fill="rgb(225,218,4)" fg:x="469" fg:w="6"/><text x="1.9521%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="1.7094%" y="357" width="0.0145%" height="15" fill="rgb(230,182,32)" fg:x="471" fg:w="4"/><text x="1.9594%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.03%)</title><rect x="1.7239%" y="373" width="0.0254%" height="15" fill="rgb(242,56,43)" fg:x="475" fg:w="7"/><text x="1.9739%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.03%)</title><rect x="1.7493%" y="357" width="0.0327%" height="15" fill="rgb(233,99,24)" fg:x="482" fg:w="9"/><text x="1.9993%" y="367.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (6 samples, 0.02%)</title><rect x="1.7602%" y="341" width="0.0218%" height="15" fill="rgb(234,209,42)" fg:x="485" fg:w="6"/><text x="2.0102%" y="351.50"></text></g><g><title>core::char::from_u32_unchecked (6 samples, 0.02%)</title><rect x="1.7602%" y="325" width="0.0218%" height="15" fill="rgb(227,7,12)" fg:x="485" fg:w="6"/><text x="2.0102%" y="335.50"></text></g><g><title>core::char::convert::from_u32_unchecked (6 samples, 0.02%)</title><rect x="1.7602%" y="309" width="0.0218%" height="15" fill="rgb(245,203,43)" fg:x="485" fg:w="6"/><text x="2.0102%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.03%)</title><rect x="1.9199%" y="341" width="0.0327%" height="15" fill="rgb(238,205,33)" fg:x="529" fg:w="9"/><text x="2.1699%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="2.0106%" y="309" width="0.0508%" height="15" fill="rgb(231,56,7)" fg:x="554" fg:w="14"/><text x="2.2606%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (22 samples, 0.08%)</title><rect x="1.9888%" y="325" width="0.0798%" height="15" fill="rgb(244,186,29)" fg:x="548" fg:w="22"/><text x="2.2388%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.07%)</title><rect x="2.0687%" y="325" width="0.0653%" height="15" fill="rgb(234,111,31)" fg:x="570" fg:w="18"/><text x="2.3187%" y="335.50"></text></g><g><title>core::ptr::null_mut (5 samples, 0.02%)</title><rect x="2.1158%" y="309" width="0.0181%" height="15" fill="rgb(241,149,10)" fg:x="583" fg:w="5"/><text x="2.3658%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (113 samples, 0.41%)</title><rect x="1.7493%" y="373" width="0.4101%" height="15" fill="rgb(249,206,44)" fg:x="482" fg:w="113"/><text x="1.9993%" y="383.50"></text></g><g><title>core::str::validations::next_code_point (104 samples, 0.38%)</title><rect x="1.7820%" y="357" width="0.3774%" height="15" fill="rgb(251,153,30)" fg:x="491" fg:w="104"/><text x="2.0320%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.21%)</title><rect x="1.9525%" y="341" width="0.2069%" height="15" fill="rgb(239,152,38)" fg:x="538" fg:w="57"/><text x="2.2025%" y="351.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (7 samples, 0.03%)</title><rect x="2.1340%" y="325" width="0.0254%" height="15" fill="rgb(249,139,47)" fg:x="588" fg:w="7"/><text x="2.3840%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (11 samples, 0.04%)</title><rect x="2.2320%" y="341" width="0.0399%" height="15" fill="rgb(244,64,35)" fg:x="615" fg:w="11"/><text x="2.4820%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.01%)</title><rect x="2.2719%" y="341" width="0.0145%" height="15" fill="rgb(216,46,15)" fg:x="626" fg:w="4"/><text x="2.5219%" y="351.50"></text></g><g><title>core::ptr::read (12 samples, 0.04%)</title><rect x="2.3263%" y="325" width="0.0436%" height="15" fill="rgb(250,74,19)" fg:x="641" fg:w="12"/><text x="2.5763%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.01%)</title><rect x="2.3590%" y="309" width="0.0109%" height="15" fill="rgb(249,42,33)" fg:x="650" fg:w="3"/><text x="2.6090%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (62 samples, 0.23%)</title><rect x="2.1594%" y="373" width="0.2250%" height="15" fill="rgb(242,149,17)" fg:x="595" fg:w="62"/><text x="2.4094%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (62 samples, 0.23%)</title><rect x="2.1594%" y="357" width="0.2250%" height="15" fill="rgb(244,29,21)" fg:x="595" fg:w="62"/><text x="2.4094%" y="367.50"></text></g><g><title>core::mem::replace (27 samples, 0.10%)</title><rect x="2.2864%" y="341" width="0.0980%" height="15" fill="rgb(220,130,37)" fg:x="630" fg:w="27"/><text x="2.5364%" y="351.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="2.3699%" y="325" width="0.0145%" height="15" fill="rgb(211,67,2)" fg:x="653" fg:w="4"/><text x="2.6199%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (234 samples, 0.85%)</title><rect x="1.7021%" y="405" width="0.8492%" height="15" fill="rgb(235,68,52)" fg:x="469" fg:w="234"/><text x="1.9521%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (228 samples, 0.83%)</title><rect x="1.7239%" y="389" width="0.8275%" height="15" fill="rgb(246,142,3)" fg:x="475" fg:w="228"/><text x="1.9739%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (46 samples, 0.17%)</title><rect x="2.3844%" y="373" width="0.1669%" height="15" fill="rgb(241,25,7)" fg:x="657" fg:w="46"/><text x="2.6344%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="2.5514%" y="341" width="0.0109%" height="15" fill="rgb(242,119,39)" fg:x="703" fg:w="3"/><text x="2.8014%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.01%)</title><rect x="2.5514%" y="325" width="0.0109%" height="15" fill="rgb(241,98,45)" fg:x="703" fg:w="3"/><text x="2.8014%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.01%)</title><rect x="2.5514%" y="309" width="0.0109%" height="15" fill="rgb(254,28,30)" fg:x="703" fg:w="3"/><text x="2.8014%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="2.5622%" y="309" width="0.0109%" height="15" fill="rgb(241,142,54)" fg:x="706" fg:w="3"/><text x="2.8122%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="2.5514%" y="389" width="0.0290%" height="15" fill="rgb(222,85,15)" fg:x="703" fg:w="8"/><text x="2.8014%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (8 samples, 0.03%)</title><rect x="2.5514%" y="373" width="0.0290%" height="15" fill="rgb(210,85,47)" fg:x="703" fg:w="8"/><text x="2.8014%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (8 samples, 0.03%)</title><rect x="2.5514%" y="357" width="0.0290%" height="15" fill="rgb(224,206,25)" fg:x="703" fg:w="8"/><text x="2.8014%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (5 samples, 0.02%)</title><rect x="2.5622%" y="341" width="0.0181%" height="15" fill="rgb(243,201,19)" fg:x="706" fg:w="5"/><text x="2.8122%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="2.5622%" y="325" width="0.0181%" height="15" fill="rgb(236,59,4)" fg:x="706" fg:w="5"/><text x="2.8122%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (10 samples, 0.04%)</title><rect x="2.5514%" y="405" width="0.0363%" height="15" fill="rgb(254,179,45)" fg:x="703" fg:w="10"/><text x="2.8014%" y="415.50"></text></g><g><title>std::panicking::try (293 samples, 1.06%)</title><rect x="1.5424%" y="597" width="1.0634%" height="15" fill="rgb(226,14,10)" fg:x="425" fg:w="293"/><text x="1.7924%" y="607.50"></text></g><g><title>__rust_try (293 samples, 1.06%)</title><rect x="1.5424%" y="581" width="1.0634%" height="15" fill="rgb(244,27,41)" fg:x="425" fg:w="293"/><text x="1.7924%" y="591.50"></text></g><g><title>std::panicking::try::do_call (293 samples, 1.06%)</title><rect x="1.5424%" y="565" width="1.0634%" height="15" fill="rgb(235,35,32)" fg:x="425" fg:w="293"/><text x="1.7924%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (293 samples, 1.06%)</title><rect x="1.5424%" y="549" width="1.0634%" height="15" fill="rgb(218,68,31)" fg:x="425" fg:w="293"/><text x="1.7924%" y="559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (293 samples, 1.06%)</title><rect x="1.5424%" y="533" width="1.0634%" height="15" fill="rgb(207,120,37)" fg:x="425" fg:w="293"/><text x="1.7924%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (293 samples, 1.06%)</title><rect x="1.5424%" y="517" width="1.0634%" height="15" fill="rgb(227,98,0)" fg:x="425" fg:w="293"/><text x="1.7924%" y="527.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (293 samples, 1.06%)</title><rect x="1.5424%" y="501" width="1.0634%" height="15" fill="rgb(207,7,3)" fg:x="425" fg:w="293"/><text x="1.7924%" y="511.50"></text></g><g><title>unkr::core::threaded_function (293 samples, 1.06%)</title><rect x="1.5424%" y="485" width="1.0634%" height="15" fill="rgb(206,98,19)" fg:x="425" fg:w="293"/><text x="1.7924%" y="495.50"></text></g><g><title>unkr::core::loop_decrypt (293 samples, 1.06%)</title><rect x="1.5424%" y="469" width="1.0634%" height="15" fill="rgb(217,5,26)" fg:x="425" fg:w="293"/><text x="1.7924%" y="479.50"></text></g><g><title>unkr::core::loop_decrypt (293 samples, 1.06%)</title><rect x="1.5424%" y="453" width="1.0634%" height="15" fill="rgb(235,190,38)" fg:x="425" fg:w="293"/><text x="1.7924%" y="463.50"></text></g><g><title>unkr::transpose::decrypt (252 samples, 0.91%)</title><rect x="1.6912%" y="437" width="0.9146%" height="15" fill="rgb(247,86,24)" fg:x="466" fg:w="252"/><text x="1.9412%" y="447.50"></text></g><g><title>unkr::transpose::internal_encrypt (251 samples, 0.91%)</title><rect x="1.6949%" y="421" width="0.9109%" height="15" fill="rgb(205,101,16)" fg:x="467" fg:w="251"/><text x="1.9449%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (4 samples, 0.01%)</title><rect x="2.5913%" y="405" width="0.0145%" height="15" fill="rgb(246,168,33)" fg:x="714" fg:w="4"/><text x="2.8413%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.01%)</title><rect x="2.5913%" y="389" width="0.0145%" height="15" fill="rgb(231,114,1)" fg:x="714" fg:w="4"/><text x="2.8413%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="2.5913%" y="373" width="0.0145%" height="15" fill="rgb(207,184,53)" fg:x="714" fg:w="4"/><text x="2.8413%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.01%)</title><rect x="2.5949%" y="357" width="0.0109%" height="15" fill="rgb(224,95,51)" fg:x="715" fg:w="3"/><text x="2.8449%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="2.6131%" y="485" width="0.0145%" height="15" fill="rgb(212,188,45)" fg:x="720" fg:w="4"/><text x="2.8631%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="2.6131%" y="469" width="0.0145%" height="15" fill="rgb(223,154,38)" fg:x="720" fg:w="4"/><text x="2.8631%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="2.6131%" y="453" width="0.0145%" height="15" fill="rgb(251,22,52)" fg:x="720" fg:w="4"/><text x="2.8631%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="2.6131%" y="437" width="0.0145%" height="15" fill="rgb(229,209,22)" fg:x="720" fg:w="4"/><text x="2.8631%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="2.6131%" y="421" width="0.0145%" height="15" fill="rgb(234,138,34)" fg:x="720" fg:w="4"/><text x="2.8631%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="2.6131%" y="405" width="0.0145%" height="15" fill="rgb(212,95,11)" fg:x="720" fg:w="4"/><text x="2.8631%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="2.6276%" y="325" width="0.0218%" height="15" fill="rgb(240,179,47)" fg:x="724" fg:w="6"/><text x="2.8776%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;char&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="2.6276%" y="309" width="0.0218%" height="15" fill="rgb(240,163,11)" fg:x="724" fg:w="6"/><text x="2.8776%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;char&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="2.6276%" y="293" width="0.0218%" height="15" fill="rgb(236,37,12)" fg:x="724" fg:w="6"/><text x="2.8776%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="2.6276%" y="277" width="0.0218%" height="15" fill="rgb(232,164,16)" fg:x="724" fg:w="6"/><text x="2.8776%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.02%)</title><rect x="2.6276%" y="261" width="0.0218%" height="15" fill="rgb(244,205,15)" fg:x="724" fg:w="6"/><text x="2.8776%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="2.6276%" y="245" width="0.0218%" height="15" fill="rgb(223,117,47)" fg:x="724" fg:w="6"/><text x="2.8776%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="2.6276%" y="229" width="0.0218%" height="15" fill="rgb(244,107,35)" fg:x="724" fg:w="6"/><text x="2.8776%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.02%)</title><rect x="2.6276%" y="213" width="0.0218%" height="15" fill="rgb(205,140,8)" fg:x="724" fg:w="6"/><text x="2.8776%" y="223.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.04%)</title><rect x="2.6094%" y="597" width="0.0436%" height="15" fill="rgb(228,84,46)" fg:x="719" fg:w="12"/><text x="2.8594%" y="607.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (12 samples, 0.04%)</title><rect x="2.6094%" y="581" width="0.0436%" height="15" fill="rgb(254,188,9)" fg:x="719" fg:w="12"/><text x="2.8594%" y="591.50"></text></g><g><title>unkr::core::threaded_function (12 samples, 0.04%)</title><rect x="2.6094%" y="565" width="0.0436%" height="15" fill="rgb(206,112,54)" fg:x="719" fg:w="12"/><text x="2.8594%" y="575.50"></text></g><g><title>unkr::core::loop_decrypt (12 samples, 0.04%)</title><rect x="2.6094%" y="549" width="0.0436%" height="15" fill="rgb(216,84,49)" fg:x="719" fg:w="12"/><text x="2.8594%" y="559.50"></text></g><g><title>unkr::core::loop_decrypt (12 samples, 0.04%)</title><rect x="2.6094%" y="533" width="0.0436%" height="15" fill="rgb(214,194,35)" fg:x="719" fg:w="12"/><text x="2.8594%" y="543.50"></text></g><g><title>unkr::transpose::decrypt (11 samples, 0.04%)</title><rect x="2.6131%" y="517" width="0.0399%" height="15" fill="rgb(249,28,3)" fg:x="720" fg:w="11"/><text x="2.8631%" y="527.50"></text></g><g><title>unkr::transpose::internal_encrypt (11 samples, 0.04%)</title><rect x="2.6131%" y="501" width="0.0399%" height="15" fill="rgb(222,56,52)" fg:x="720" fg:w="11"/><text x="2.8631%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.03%)</title><rect x="2.6276%" y="485" width="0.0254%" height="15" fill="rgb(245,217,50)" fg:x="724" fg:w="7"/><text x="2.8776%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.03%)</title><rect x="2.6276%" y="469" width="0.0254%" height="15" fill="rgb(213,201,24)" fg:x="724" fg:w="7"/><text x="2.8776%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.03%)</title><rect x="2.6276%" y="453" width="0.0254%" height="15" fill="rgb(248,116,28)" fg:x="724" fg:w="7"/><text x="2.8776%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.03%)</title><rect x="2.6276%" y="437" width="0.0254%" height="15" fill="rgb(219,72,43)" fg:x="724" fg:w="7"/><text x="2.8776%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.03%)</title><rect x="2.6276%" y="421" width="0.0254%" height="15" fill="rgb(209,138,14)" fg:x="724" fg:w="7"/><text x="2.8776%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.03%)</title><rect x="2.6276%" y="405" width="0.0254%" height="15" fill="rgb(222,18,33)" fg:x="724" fg:w="7"/><text x="2.8776%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.03%)</title><rect x="2.6276%" y="389" width="0.0254%" height="15" fill="rgb(213,199,7)" fg:x="724" fg:w="7"/><text x="2.8776%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.03%)</title><rect x="2.6276%" y="373" width="0.0254%" height="15" fill="rgb(250,110,10)" fg:x="724" fg:w="7"/><text x="2.8776%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.03%)</title><rect x="2.6276%" y="357" width="0.0254%" height="15" fill="rgb(248,123,6)" fg:x="724" fg:w="7"/><text x="2.8776%" y="367.50"></text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (7 samples, 0.03%)</title><rect x="2.6276%" y="341" width="0.0254%" height="15" fill="rgb(206,91,31)" fg:x="724" fg:w="7"/><text x="2.8776%" y="351.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3 samples, 0.01%)</title><rect x="2.6530%" y="597" width="0.0109%" height="15" fill="rgb(211,154,13)" fg:x="731" fg:w="3"/><text x="2.9030%" y="607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.01%)</title><rect x="2.6530%" y="581" width="0.0109%" height="15" fill="rgb(225,148,7)" fg:x="731" fg:w="3"/><text x="2.9030%" y="591.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (3 samples, 0.01%)</title><rect x="2.6530%" y="565" width="0.0109%" height="15" fill="rgb(220,160,43)" fg:x="731" fg:w="3"/><text x="2.9030%" y="575.50"></text></g><g><title>unkr::core::threaded_function (3 samples, 0.01%)</title><rect x="2.6530%" y="549" width="0.0109%" height="15" fill="rgb(213,52,39)" fg:x="731" fg:w="3"/><text x="2.9030%" y="559.50"></text></g><g><title>unkr::core::loop_decrypt (3 samples, 0.01%)</title><rect x="2.6530%" y="533" width="0.0109%" height="15" fill="rgb(243,137,7)" fg:x="731" fg:w="3"/><text x="2.9030%" y="543.50"></text></g><g><title>unkr::core::loop_decrypt (3 samples, 0.01%)</title><rect x="2.6530%" y="517" width="0.0109%" height="15" fill="rgb(230,79,13)" fg:x="731" fg:w="3"/><text x="2.9030%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="2.6639%" y="341" width="0.0181%" height="15" fill="rgb(247,105,23)" fg:x="734" fg:w="5"/><text x="2.9139%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="2.6675%" y="325" width="0.0145%" height="15" fill="rgb(223,179,41)" fg:x="735" fg:w="4"/><text x="2.9175%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="2.6675%" y="309" width="0.0145%" height="15" fill="rgb(218,9,34)" fg:x="735" fg:w="4"/><text x="2.9175%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="2.6675%" y="293" width="0.0145%" height="15" fill="rgb(222,106,8)" fg:x="735" fg:w="4"/><text x="2.9175%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="2.6675%" y="277" width="0.0145%" height="15" fill="rgb(211,220,0)" fg:x="735" fg:w="4"/><text x="2.9175%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="2.6675%" y="261" width="0.0145%" height="15" fill="rgb(229,52,16)" fg:x="735" fg:w="4"/><text x="2.9175%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="2.6675%" y="245" width="0.0145%" height="15" fill="rgb(212,155,18)" fg:x="735" fg:w="4"/><text x="2.9175%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="2.6675%" y="229" width="0.0145%" height="15" fill="rgb(242,21,14)" fg:x="735" fg:w="4"/><text x="2.9175%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="2.6675%" y="213" width="0.0145%" height="15" fill="rgb(222,19,48)" fg:x="735" fg:w="4"/><text x="2.9175%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="2.6675%" y="197" width="0.0145%" height="15" fill="rgb(232,45,27)" fg:x="735" fg:w="4"/><text x="2.9175%" y="207.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="2.6675%" y="181" width="0.0145%" height="15" fill="rgb(249,103,42)" fg:x="735" fg:w="4"/><text x="2.9175%" y="191.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="2.6711%" y="165" width="0.0109%" height="15" fill="rgb(246,81,33)" fg:x="736" fg:w="3"/><text x="2.9211%" y="175.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="2.6711%" y="149" width="0.0109%" height="15" fill="rgb(252,33,42)" fg:x="736" fg:w="3"/><text x="2.9211%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::take (3 samples, 0.01%)</title><rect x="2.6929%" y="341" width="0.0109%" height="15" fill="rgb(209,212,41)" fg:x="742" fg:w="3"/><text x="2.9429%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.01%)</title><rect x="2.7038%" y="341" width="0.0109%" height="15" fill="rgb(207,154,6)" fg:x="745" fg:w="3"/><text x="2.9538%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="2.6639%" y="405" width="0.0544%" height="15" fill="rgb(223,64,47)" fg:x="734" fg:w="15"/><text x="2.9139%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.05%)</title><rect x="2.6639%" y="389" width="0.0544%" height="15" fill="rgb(211,161,38)" fg:x="734" fg:w="15"/><text x="2.9139%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="2.6639%" y="373" width="0.0544%" height="15" fill="rgb(219,138,40)" fg:x="734" fg:w="15"/><text x="2.9139%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.05%)</title><rect x="2.6639%" y="357" width="0.0544%" height="15" fill="rgb(241,228,46)" fg:x="734" fg:w="15"/><text x="2.9139%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (3 samples, 0.01%)</title><rect x="2.7328%" y="389" width="0.0109%" height="15" fill="rgb(223,209,38)" fg:x="753" fg:w="3"/><text x="2.9828%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="2.7328%" y="373" width="0.0109%" height="15" fill="rgb(236,164,45)" fg:x="753" fg:w="3"/><text x="2.9828%" y="383.50"></text></g><g><title>unkr::core::process_new_str (7 samples, 0.03%)</title><rect x="2.7219%" y="405" width="0.0254%" height="15" fill="rgb(231,15,5)" fg:x="750" fg:w="7"/><text x="2.9719%" y="415.50"></text></g><g><title>alloc::string::String::insert_bytes (3 samples, 0.01%)</title><rect x="2.7546%" y="373" width="0.0109%" height="15" fill="rgb(252,35,15)" fg:x="759" fg:w="3"/><text x="3.0046%" y="383.50"></text></g><g><title>alloc::string::String::insert (8 samples, 0.03%)</title><rect x="2.7510%" y="389" width="0.0290%" height="15" fill="rgb(248,181,18)" fg:x="758" fg:w="8"/><text x="3.0010%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="2.8090%" y="373" width="0.0218%" height="15" fill="rgb(233,39,42)" fg:x="774" fg:w="6"/><text x="3.0590%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.01%)</title><rect x="2.8199%" y="357" width="0.0109%" height="15" fill="rgb(238,110,33)" fg:x="777" fg:w="3"/><text x="3.0699%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (3 samples, 0.01%)</title><rect x="2.8308%" y="373" width="0.0109%" height="15" fill="rgb(233,195,10)" fg:x="780" fg:w="3"/><text x="3.0808%" y="383.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (51 samples, 0.19%)</title><rect x="2.6639%" y="597" width="0.1851%" height="15" fill="rgb(254,105,3)" fg:x="734" fg:w="51"/><text x="2.9139%" y="607.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.19%)</title><rect x="2.6639%" y="581" width="0.1851%" height="15" fill="rgb(221,225,9)" fg:x="734" fg:w="51"/><text x="2.9139%" y="591.50"></text></g><g><title>std::panicking::try (51 samples, 0.19%)</title><rect x="2.6639%" y="565" width="0.1851%" height="15" fill="rgb(224,227,45)" fg:x="734" fg:w="51"/><text x="2.9139%" y="575.50"></text></g><g><title>__rust_try (51 samples, 0.19%)</title><rect x="2.6639%" y="549" width="0.1851%" height="15" fill="rgb(229,198,43)" fg:x="734" fg:w="51"/><text x="2.9139%" y="559.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.19%)</title><rect x="2.6639%" y="533" width="0.1851%" height="15" fill="rgb(206,209,35)" fg:x="734" fg:w="51"/><text x="2.9139%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (51 samples, 0.19%)</title><rect x="2.6639%" y="517" width="0.1851%" height="15" fill="rgb(245,195,53)" fg:x="734" fg:w="51"/><text x="2.9139%" y="527.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (51 samples, 0.19%)</title><rect x="2.6639%" y="501" width="0.1851%" height="15" fill="rgb(240,92,26)" fg:x="734" fg:w="51"/><text x="2.9139%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (51 samples, 0.19%)</title><rect x="2.6639%" y="485" width="0.1851%" height="15" fill="rgb(207,40,23)" fg:x="734" fg:w="51"/><text x="2.9139%" y="495.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (51 samples, 0.19%)</title><rect x="2.6639%" y="469" width="0.1851%" height="15" fill="rgb(223,111,35)" fg:x="734" fg:w="51"/><text x="2.9139%" y="479.50"></text></g><g><title>unkr::core::threaded_function (51 samples, 0.19%)</title><rect x="2.6639%" y="453" width="0.1851%" height="15" fill="rgb(229,147,28)" fg:x="734" fg:w="51"/><text x="2.9139%" y="463.50"></text></g><g><title>unkr::core::loop_decrypt (51 samples, 0.19%)</title><rect x="2.6639%" y="437" width="0.1851%" height="15" fill="rgb(211,29,28)" fg:x="734" fg:w="51"/><text x="2.9139%" y="447.50"></text></g><g><title>unkr::core::loop_decrypt (51 samples, 0.19%)</title><rect x="2.6639%" y="421" width="0.1851%" height="15" fill="rgb(228,72,33)" fg:x="734" fg:w="51"/><text x="2.9139%" y="431.50"></text></g><g><title>unkr::transpose::decrypt (27 samples, 0.10%)</title><rect x="2.7510%" y="405" width="0.0980%" height="15" fill="rgb(205,214,31)" fg:x="758" fg:w="27"/><text x="3.0010%" y="415.50"></text></g><g><title>unkr::transpose::internal_encrypt (17 samples, 0.06%)</title><rect x="2.7873%" y="389" width="0.0617%" height="15" fill="rgb(224,111,15)" fg:x="768" fg:w="17"/><text x="3.0373%" y="399.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt::{{closure}} (5 samples, 0.02%)</title><rect x="2.8490%" y="597" width="0.0181%" height="15" fill="rgb(253,21,26)" fg:x="785" fg:w="5"/><text x="3.0990%" y="607.50"></text></g><g><title>unkr::core::threaded_function (5 samples, 0.02%)</title><rect x="2.8490%" y="581" width="0.0181%" height="15" fill="rgb(245,139,43)" fg:x="785" fg:w="5"/><text x="3.0990%" y="591.50"></text></g><g><title>unkr::core::loop_decrypt (5 samples, 0.02%)</title><rect x="2.8490%" y="565" width="0.0181%" height="15" fill="rgb(252,170,7)" fg:x="785" fg:w="5"/><text x="3.0990%" y="575.50"></text></g><g><title>unkr::core::loop_decrypt (5 samples, 0.02%)</title><rect x="2.8490%" y="549" width="0.0181%" height="15" fill="rgb(231,118,14)" fg:x="785" fg:w="5"/><text x="3.0990%" y="559.50"></text></g><g><title>unkr::transpose::decrypt (5 samples, 0.02%)</title><rect x="2.8490%" y="533" width="0.0181%" height="15" fill="rgb(238,83,0)" fg:x="785" fg:w="5"/><text x="3.0990%" y="543.50"></text></g><g><title>unkr::transpose::internal_encrypt (5 samples, 0.02%)</title><rect x="2.8490%" y="517" width="0.0181%" height="15" fill="rgb(221,39,39)" fg:x="785" fg:w="5"/><text x="3.0990%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.01%)</title><rect x="2.8562%" y="501" width="0.0109%" height="15" fill="rgb(222,119,46)" fg:x="787" fg:w="3"/><text x="3.1062%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="2.8562%" y="485" width="0.0109%" height="15" fill="rgb(222,165,49)" fg:x="787" fg:w="3"/><text x="3.1062%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="2.8562%" y="469" width="0.0109%" height="15" fill="rgb(219,113,52)" fg:x="787" fg:w="3"/><text x="3.1062%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="2.8562%" y="453" width="0.0109%" height="15" fill="rgb(214,7,15)" fg:x="787" fg:w="3"/><text x="3.1062%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="2.8562%" y="437" width="0.0109%" height="15" fill="rgb(235,32,4)" fg:x="787" fg:w="3"/><text x="3.1062%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="2.8562%" y="421" width="0.0109%" height="15" fill="rgb(238,90,54)" fg:x="787" fg:w="3"/><text x="3.1062%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="2.8562%" y="405" width="0.0109%" height="15" fill="rgb(213,208,19)" fg:x="787" fg:w="3"/><text x="3.1062%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="2.8562%" y="389" width="0.0109%" height="15" fill="rgb(233,156,4)" fg:x="787" fg:w="3"/><text x="3.1062%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.01%)</title><rect x="2.8562%" y="373" width="0.0109%" height="15" fill="rgb(207,194,5)" fg:x="787" fg:w="3"/><text x="3.1062%" y="383.50"></text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (3 samples, 0.01%)</title><rect x="2.8562%" y="357" width="0.0109%" height="15" fill="rgb(206,111,30)" fg:x="787" fg:w="3"/><text x="3.1062%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end (3 samples, 0.01%)</title><rect x="2.8562%" y="341" width="0.0109%" height="15" fill="rgb(243,70,54)" fg:x="787" fg:w="3"/><text x="3.1062%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (3 samples, 0.01%)</title><rect x="2.8562%" y="325" width="0.0109%" height="15" fill="rgb(242,28,8)" fg:x="787" fg:w="3"/><text x="3.1062%" y="335.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (3 samples, 0.01%)</title><rect x="2.8562%" y="309" width="0.0109%" height="15" fill="rgb(219,106,18)" fg:x="787" fg:w="3"/><text x="3.1062%" y="319.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (3 samples, 0.01%)</title><rect x="2.8562%" y="293" width="0.0109%" height="15" fill="rgb(244,222,10)" fg:x="787" fg:w="3"/><text x="3.1062%" y="303.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (3 samples, 0.01%)</title><rect x="2.8562%" y="277" width="0.0109%" height="15" fill="rgb(236,179,52)" fg:x="787" fg:w="3"/><text x="3.1062%" y="287.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.01%)</title><rect x="2.8562%" y="261" width="0.0109%" height="15" fill="rgb(213,23,39)" fg:x="787" fg:w="3"/><text x="3.1062%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.05%)</title><rect x="3.0195%" y="469" width="0.0508%" height="15" fill="rgb(238,48,10)" fg:x="832" fg:w="14"/><text x="3.2695%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.05%)</title><rect x="3.0195%" y="453" width="0.0508%" height="15" fill="rgb(251,196,23)" fg:x="832" fg:w="14"/><text x="3.2695%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.05%)</title><rect x="3.0195%" y="437" width="0.0508%" height="15" fill="rgb(250,152,24)" fg:x="832" fg:w="14"/><text x="3.2695%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.05%)</title><rect x="3.0232%" y="421" width="0.0472%" height="15" fill="rgb(209,150,17)" fg:x="833" fg:w="13"/><text x="3.2732%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.05%)</title><rect x="3.0232%" y="405" width="0.0472%" height="15" fill="rgb(234,202,34)" fg:x="833" fg:w="13"/><text x="3.2732%" y="415.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.05%)</title><rect x="3.0232%" y="389" width="0.0472%" height="15" fill="rgb(253,148,53)" fg:x="833" fg:w="13"/><text x="3.2732%" y="399.50"></text></g><g><title>malloc (12 samples, 0.04%)</title><rect x="3.0268%" y="373" width="0.0436%" height="15" fill="rgb(218,129,16)" fg:x="834" fg:w="12"/><text x="3.2768%" y="383.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="3.0377%" y="357" width="0.0327%" height="15" fill="rgb(216,85,19)" fg:x="837" fg:w="9"/><text x="3.2877%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.06%)</title><rect x="3.0159%" y="549" width="0.0581%" height="15" fill="rgb(235,228,7)" fg:x="831" fg:w="16"/><text x="3.2659%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="3.0195%" y="533" width="0.0544%" height="15" fill="rgb(245,175,0)" fg:x="832" fg:w="15"/><text x="3.2695%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.05%)</title><rect x="3.0195%" y="517" width="0.0544%" height="15" fill="rgb(208,168,36)" fg:x="832" fg:w="15"/><text x="3.2695%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="3.0195%" y="501" width="0.0544%" height="15" fill="rgb(246,171,24)" fg:x="832" fg:w="15"/><text x="3.2695%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.05%)</title><rect x="3.0195%" y="485" width="0.0544%" height="15" fill="rgb(215,142,24)" fg:x="832" fg:w="15"/><text x="3.2695%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="3.0812%" y="405" width="0.0218%" height="15" fill="rgb(250,187,7)" fg:x="849" fg:w="6"/><text x="3.3312%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="3.0885%" y="389" width="0.0145%" height="15" fill="rgb(228,66,33)" fg:x="851" fg:w="4"/><text x="3.3385%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (5 samples, 0.02%)</title><rect x="3.1030%" y="389" width="0.0181%" height="15" fill="rgb(234,215,21)" fg:x="855" fg:w="5"/><text x="3.3530%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.04%)</title><rect x="3.0812%" y="437" width="0.0436%" height="15" fill="rgb(222,191,20)" fg:x="849" fg:w="12"/><text x="3.3312%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.04%)</title><rect x="3.0812%" y="421" width="0.0436%" height="15" fill="rgb(245,79,54)" fg:x="849" fg:w="12"/><text x="3.3312%" y="431.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.02%)</title><rect x="3.1030%" y="405" width="0.0218%" height="15" fill="rgb(240,10,37)" fg:x="855" fg:w="6"/><text x="3.3530%" y="415.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="3.2264%" y="357" width="0.0109%" height="15" fill="rgb(214,192,32)" fg:x="889" fg:w="3"/><text x="3.4764%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="3.2554%" y="325" width="0.0109%" height="15" fill="rgb(209,36,54)" fg:x="897" fg:w="3"/><text x="3.5054%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="3.2554%" y="309" width="0.0109%" height="15" fill="rgb(220,10,11)" fg:x="897" fg:w="3"/><text x="3.5054%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (8 samples, 0.03%)</title><rect x="3.2409%" y="357" width="0.0290%" height="15" fill="rgb(221,106,17)" fg:x="893" fg:w="8"/><text x="3.4909%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="3.2518%" y="341" width="0.0181%" height="15" fill="rgb(251,142,44)" fg:x="896" fg:w="5"/><text x="3.5018%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.08%)</title><rect x="3.1974%" y="389" width="0.0762%" height="15" fill="rgb(238,13,15)" fg:x="881" fg:w="21"/><text x="3.4474%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.07%)</title><rect x="3.2046%" y="373" width="0.0690%" height="15" fill="rgb(208,107,27)" fg:x="883" fg:w="19"/><text x="3.4546%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 0.17%)</title><rect x="3.1248%" y="437" width="0.1669%" height="15" fill="rgb(205,136,37)" fg:x="861" fg:w="46"/><text x="3.3748%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.17%)</title><rect x="3.1248%" y="421" width="0.1669%" height="15" fill="rgb(250,205,27)" fg:x="861" fg:w="46"/><text x="3.3748%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.16%)</title><rect x="3.1357%" y="405" width="0.1561%" height="15" fill="rgb(210,80,43)" fg:x="864" fg:w="43"/><text x="3.3857%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (61 samples, 0.22%)</title><rect x="3.0740%" y="517" width="0.2214%" height="15" fill="rgb(247,160,36)" fg:x="847" fg:w="61"/><text x="3.3240%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (61 samples, 0.22%)</title><rect x="3.0740%" y="501" width="0.2214%" height="15" fill="rgb(234,13,49)" fg:x="847" fg:w="61"/><text x="3.3240%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.22%)</title><rect x="3.0740%" y="485" width="0.2214%" height="15" fill="rgb(234,122,0)" fg:x="847" fg:w="61"/><text x="3.3240%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.22%)</title><rect x="3.0740%" y="469" width="0.2214%" height="15" fill="rgb(207,146,38)" fg:x="847" fg:w="61"/><text x="3.3240%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.22%)</title><rect x="3.0740%" y="453" width="0.2214%" height="15" fill="rgb(207,177,25)" fg:x="847" fg:w="61"/><text x="3.3240%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (63 samples, 0.23%)</title><rect x="3.0740%" y="549" width="0.2286%" height="15" fill="rgb(211,178,42)" fg:x="847" fg:w="63"/><text x="3.3240%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (63 samples, 0.23%)</title><rect x="3.0740%" y="533" width="0.2286%" height="15" fill="rgb(230,69,54)" fg:x="847" fg:w="63"/><text x="3.3240%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (8 samples, 0.03%)</title><rect x="3.3861%" y="437" width="0.0290%" height="15" fill="rgb(214,135,41)" fg:x="933" fg:w="8"/><text x="3.6361%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="3.4296%" y="389" width="0.0109%" height="15" fill="rgb(237,67,25)" fg:x="945" fg:w="3"/><text x="3.6796%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.03%)</title><rect x="3.4187%" y="405" width="0.0290%" height="15" fill="rgb(222,189,50)" fg:x="942" fg:w="8"/><text x="3.6687%" y="415.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.02%)</title><rect x="3.4950%" y="357" width="0.0181%" height="15" fill="rgb(245,148,34)" fg:x="963" fg:w="5"/><text x="3.7450%" y="367.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="3.5022%" y="341" width="0.0109%" height="15" fill="rgb(222,29,6)" fg:x="965" fg:w="3"/><text x="3.7522%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (8 samples, 0.03%)</title><rect x="3.5276%" y="357" width="0.0290%" height="15" fill="rgb(221,189,43)" fg:x="972" fg:w="8"/><text x="3.7776%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="3.5276%" y="341" width="0.0290%" height="15" fill="rgb(207,36,27)" fg:x="972" fg:w="8"/><text x="3.7776%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="3.5349%" y="325" width="0.0218%" height="15" fill="rgb(217,90,24)" fg:x="974" fg:w="6"/><text x="3.7849%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="3.5385%" y="309" width="0.0181%" height="15" fill="rgb(224,66,35)" fg:x="975" fg:w="5"/><text x="3.7885%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.09%)</title><rect x="3.4696%" y="389" width="0.0944%" height="15" fill="rgb(221,13,50)" fg:x="956" fg:w="26"/><text x="3.7196%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.09%)</title><rect x="3.4732%" y="373" width="0.0907%" height="15" fill="rgb(236,68,49)" fg:x="957" fg:w="25"/><text x="3.7232%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.12%)</title><rect x="3.4550%" y="405" width="0.1198%" height="15" fill="rgb(229,146,28)" fg:x="952" fg:w="33"/><text x="3.7050%" y="415.50"></text></g><g><title>core::cmp::max (9 samples, 0.03%)</title><rect x="3.5821%" y="405" width="0.0327%" height="15" fill="rgb(225,31,38)" fg:x="987" fg:w="9"/><text x="3.8321%" y="415.50"></text></g><g><title>core::cmp::Ord::max (9 samples, 0.03%)</title><rect x="3.5821%" y="389" width="0.0327%" height="15" fill="rgb(250,208,3)" fg:x="987" fg:w="9"/><text x="3.8321%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (4 samples, 0.01%)</title><rect x="3.6002%" y="373" width="0.0145%" height="15" fill="rgb(246,54,23)" fg:x="992" fg:w="4"/><text x="3.8502%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (56 samples, 0.20%)</title><rect x="3.4151%" y="421" width="0.2032%" height="15" fill="rgb(243,76,11)" fg:x="941" fg:w="56"/><text x="3.6651%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (73 samples, 0.26%)</title><rect x="3.3643%" y="485" width="0.2649%" height="15" fill="rgb(245,21,50)" fg:x="927" fg:w="73"/><text x="3.6143%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (70 samples, 0.25%)</title><rect x="3.3752%" y="469" width="0.2540%" height="15" fill="rgb(228,9,43)" fg:x="930" fg:w="70"/><text x="3.6252%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.25%)</title><rect x="3.3752%" y="453" width="0.2540%" height="15" fill="rgb(208,100,47)" fg:x="930" fg:w="70"/><text x="3.6252%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.21%)</title><rect x="3.4151%" y="437" width="0.2141%" height="15" fill="rgb(232,26,8)" fg:x="941" fg:w="59"/><text x="3.6651%" y="447.50"></text></g><g><title>alloc::raw_vec::handle_reserve (3 samples, 0.01%)</title><rect x="3.6183%" y="421" width="0.0109%" height="15" fill="rgb(216,166,38)" fg:x="997" fg:w="3"/><text x="3.8683%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.01%)</title><rect x="3.6183%" y="405" width="0.0109%" height="15" fill="rgb(251,202,51)" fg:x="997" fg:w="3"/><text x="3.8683%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (79 samples, 0.29%)</title><rect x="3.3607%" y="501" width="0.2867%" height="15" fill="rgb(254,216,34)" fg:x="926" fg:w="79"/><text x="3.6107%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (5 samples, 0.02%)</title><rect x="3.6292%" y="485" width="0.0181%" height="15" fill="rgb(251,32,27)" fg:x="1000" fg:w="5"/><text x="3.8792%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (5 samples, 0.02%)</title><rect x="3.6292%" y="469" width="0.0181%" height="15" fill="rgb(208,127,28)" fg:x="1000" fg:w="5"/><text x="3.8792%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.01%)</title><rect x="3.6329%" y="453" width="0.0145%" height="15" fill="rgb(224,137,22)" fg:x="1001" fg:w="4"/><text x="3.8829%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="3.6365%" y="437" width="0.0109%" height="15" fill="rgb(254,70,32)" fg:x="1002" fg:w="3"/><text x="3.8865%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.01%)</title><rect x="3.6365%" y="421" width="0.0109%" height="15" fill="rgb(229,75,37)" fg:x="1002" fg:w="3"/><text x="3.8865%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (97 samples, 0.35%)</title><rect x="3.3244%" y="517" width="0.3520%" height="15" fill="rgb(252,64,23)" fg:x="916" fg:w="97"/><text x="3.5744%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (8 samples, 0.03%)</title><rect x="3.6474%" y="501" width="0.0290%" height="15" fill="rgb(232,162,48)" fg:x="1005" fg:w="8"/><text x="3.8974%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="3.6510%" y="485" width="0.0254%" height="15" fill="rgb(246,160,12)" fg:x="1006" fg:w="7"/><text x="3.9010%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (6 samples, 0.02%)</title><rect x="3.6546%" y="469" width="0.0218%" height="15" fill="rgb(247,166,0)" fg:x="1007" fg:w="6"/><text x="3.9046%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (105 samples, 0.38%)</title><rect x="3.3026%" y="549" width="0.3811%" height="15" fill="rgb(249,219,21)" fg:x="910" fg:w="105"/><text x="3.5526%" y="559.50"></text></g><g><title>alloc::string::String::push_str (102 samples, 0.37%)</title><rect x="3.3135%" y="533" width="0.3702%" height="15" fill="rgb(205,209,3)" fg:x="913" fg:w="102"/><text x="3.5635%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (8 samples, 0.03%)</title><rect x="3.6909%" y="517" width="0.0290%" height="15" fill="rgb(243,44,1)" fg:x="1017" fg:w="8"/><text x="3.9409%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="3.6909%" y="501" width="0.0290%" height="15" fill="rgb(206,159,16)" fg:x="1017" fg:w="8"/><text x="3.9409%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="3.7055%" y="485" width="0.0145%" height="15" fill="rgb(244,77,30)" fg:x="1021" fg:w="4"/><text x="3.9555%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (13 samples, 0.05%)</title><rect x="3.6837%" y="549" width="0.0472%" height="15" fill="rgb(218,69,12)" fg:x="1015" fg:w="13"/><text x="3.9337%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.05%)</title><rect x="3.6837%" y="533" width="0.0472%" height="15" fill="rgb(212,87,7)" fg:x="1015" fg:w="13"/><text x="3.9337%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.01%)</title><rect x="3.7200%" y="517" width="0.0109%" height="15" fill="rgb(245,114,25)" fg:x="1025" fg:w="3"/><text x="3.9700%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="3.7200%" y="501" width="0.0109%" height="15" fill="rgb(210,61,42)" fg:x="1025" fg:w="3"/><text x="3.9700%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.01%)</title><rect x="3.7200%" y="485" width="0.0109%" height="15" fill="rgb(211,52,33)" fg:x="1025" fg:w="3"/><text x="3.9700%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.07%)</title><rect x="3.7309%" y="549" width="0.0690%" height="15" fill="rgb(234,58,33)" fg:x="1028" fg:w="19"/><text x="3.9809%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.07%)</title><rect x="3.7345%" y="533" width="0.0653%" height="15" fill="rgb(220,115,36)" fg:x="1029" fg:w="18"/><text x="3.9845%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.07%)</title><rect x="3.7345%" y="517" width="0.0653%" height="15" fill="rgb(243,153,54)" fg:x="1029" fg:w="18"/><text x="3.9845%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="3.8724%" y="533" width="0.0181%" height="15" fill="rgb(251,47,18)" fg:x="1067" fg:w="5"/><text x="4.1224%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.02%)</title><rect x="3.9123%" y="501" width="0.0181%" height="15" fill="rgb(242,102,42)" fg:x="1078" fg:w="5"/><text x="4.1623%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (28 samples, 0.10%)</title><rect x="3.9704%" y="485" width="0.1016%" height="15" fill="rgb(234,31,38)" fg:x="1094" fg:w="28"/><text x="4.2204%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (24 samples, 0.09%)</title><rect x="3.9849%" y="469" width="0.0871%" height="15" fill="rgb(221,117,51)" fg:x="1098" fg:w="24"/><text x="4.2349%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (49 samples, 0.18%)</title><rect x="3.9014%" y="517" width="0.1778%" height="15" fill="rgb(212,20,18)" fg:x="1075" fg:w="49"/><text x="4.1514%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (41 samples, 0.15%)</title><rect x="3.9305%" y="501" width="0.1488%" height="15" fill="rgb(245,133,36)" fg:x="1083" fg:w="41"/><text x="4.1805%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 0.21%)</title><rect x="3.8905%" y="533" width="0.2105%" height="15" fill="rgb(212,6,19)" fg:x="1072" fg:w="58"/><text x="4.1405%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.02%)</title><rect x="4.0793%" y="517" width="0.0218%" height="15" fill="rgb(218,1,36)" fg:x="1124" fg:w="6"/><text x="4.3293%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="4.0865%" y="501" width="0.0145%" height="15" fill="rgb(246,84,54)" fg:x="1126" fg:w="4"/><text x="4.3365%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="4.0865%" y="485" width="0.0145%" height="15" fill="rgb(242,110,6)" fg:x="1126" fg:w="4"/><text x="4.3365%" y="495.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="4.4422%" y="309" width="0.0109%" height="15" fill="rgb(214,47,5)" fg:x="1224" fg:w="3"/><text x="4.6922%" y="319.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="4.4531%" y="309" width="0.0109%" height="15" fill="rgb(218,159,25)" fg:x="1227" fg:w="3"/><text x="4.7031%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (109 samples, 0.40%)</title><rect x="4.4204%" y="405" width="0.3956%" height="15" fill="rgb(215,211,28)" fg:x="1218" fg:w="109"/><text x="4.6704%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (109 samples, 0.40%)</title><rect x="4.4204%" y="389" width="0.3956%" height="15" fill="rgb(238,59,32)" fg:x="1218" fg:w="109"/><text x="4.6704%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (109 samples, 0.40%)</title><rect x="4.4204%" y="373" width="0.3956%" height="15" fill="rgb(226,82,3)" fg:x="1218" fg:w="109"/><text x="4.6704%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (108 samples, 0.39%)</title><rect x="4.4240%" y="357" width="0.3920%" height="15" fill="rgb(240,164,32)" fg:x="1219" fg:w="108"/><text x="4.6740%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (108 samples, 0.39%)</title><rect x="4.4240%" y="341" width="0.3920%" height="15" fill="rgb(232,46,7)" fg:x="1219" fg:w="108"/><text x="4.6740%" y="351.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.39%)</title><rect x="4.4240%" y="325" width="0.3920%" height="15" fill="rgb(229,129,53)" fg:x="1219" fg:w="108"/><text x="4.6740%" y="335.50"></text></g><g><title>malloc (97 samples, 0.35%)</title><rect x="4.4640%" y="309" width="0.3520%" height="15" fill="rgb(234,188,29)" fg:x="1230" fg:w="97"/><text x="4.7140%" y="319.50"></text></g><g><title>[libc.so.6] (41 samples, 0.15%)</title><rect x="4.6672%" y="293" width="0.1488%" height="15" fill="rgb(246,141,4)" fg:x="1286" fg:w="41"/><text x="4.9172%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (182 samples, 0.66%)</title><rect x="4.2825%" y="485" width="0.6605%" height="15" fill="rgb(229,23,39)" fg:x="1180" fg:w="182"/><text x="4.5325%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (144 samples, 0.52%)</title><rect x="4.4204%" y="469" width="0.5226%" height="15" fill="rgb(206,12,3)" fg:x="1218" fg:w="144"/><text x="4.6704%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (144 samples, 0.52%)</title><rect x="4.4204%" y="453" width="0.5226%" height="15" fill="rgb(252,226,20)" fg:x="1218" fg:w="144"/><text x="4.6704%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (144 samples, 0.52%)</title><rect x="4.4204%" y="437" width="0.5226%" height="15" fill="rgb(216,123,35)" fg:x="1218" fg:w="144"/><text x="4.6704%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (144 samples, 0.52%)</title><rect x="4.4204%" y="421" width="0.5226%" height="15" fill="rgb(212,68,40)" fg:x="1218" fg:w="144"/><text x="4.6704%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (35 samples, 0.13%)</title><rect x="4.8160%" y="405" width="0.1270%" height="15" fill="rgb(254,125,32)" fg:x="1327" fg:w="35"/><text x="5.0660%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.13%)</title><rect x="4.8160%" y="389" width="0.1270%" height="15" fill="rgb(253,97,22)" fg:x="1327" fg:w="35"/><text x="5.0660%" y="399.50"></text></g><g><title>[libc.so.6] (24 samples, 0.09%)</title><rect x="4.8559%" y="373" width="0.0871%" height="15" fill="rgb(241,101,14)" fg:x="1338" fg:w="24"/><text x="5.1059%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.08%)</title><rect x="5.4584%" y="453" width="0.0762%" height="15" fill="rgb(238,103,29)" fg:x="1504" fg:w="21"/><text x="5.7084%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (33 samples, 0.12%)</title><rect x="5.6943%" y="421" width="0.1198%" height="15" fill="rgb(233,195,47)" fg:x="1569" fg:w="33"/><text x="5.9443%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (48 samples, 0.17%)</title><rect x="5.6544%" y="437" width="0.1742%" height="15" fill="rgb(246,218,30)" fg:x="1558" fg:w="48"/><text x="5.9044%" y="447.50"></text></g><g><title>core::ptr::null (4 samples, 0.01%)</title><rect x="5.8140%" y="421" width="0.0145%" height="15" fill="rgb(219,145,47)" fg:x="1602" fg:w="4"/><text x="6.0640%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (51 samples, 0.19%)</title><rect x="5.8939%" y="421" width="0.1851%" height="15" fill="rgb(243,12,26)" fg:x="1624" fg:w="51"/><text x="6.1439%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (35 samples, 0.13%)</title><rect x="5.9519%" y="405" width="0.1270%" height="15" fill="rgb(214,87,16)" fg:x="1640" fg:w="35"/><text x="6.2019%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.03%)</title><rect x="6.0862%" y="405" width="0.0327%" height="15" fill="rgb(208,99,42)" fg:x="1677" fg:w="9"/><text x="6.3362%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (85 samples, 0.31%)</title><rect x="5.8286%" y="437" width="0.3085%" height="15" fill="rgb(253,99,2)" fg:x="1606" fg:w="85"/><text x="6.0786%" y="447.50"></text></g><g><title>core::ptr::null_mut (16 samples, 0.06%)</title><rect x="6.0790%" y="421" width="0.0581%" height="15" fill="rgb(220,168,23)" fg:x="1675" fg:w="16"/><text x="6.3290%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.02%)</title><rect x="6.1189%" y="405" width="0.0181%" height="15" fill="rgb(242,38,24)" fg:x="1686" fg:w="5"/><text x="6.3689%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.02%)</title><rect x="6.1878%" y="421" width="0.0181%" height="15" fill="rgb(225,182,9)" fg:x="1705" fg:w="5"/><text x="6.4378%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="6.1915%" y="405" width="0.0145%" height="15" fill="rgb(243,178,37)" fg:x="1706" fg:w="4"/><text x="6.4415%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (352 samples, 1.28%)</title><rect x="4.9430%" y="485" width="1.2775%" height="15" fill="rgb(232,139,19)" fg:x="1362" fg:w="352"/><text x="5.1930%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (336 samples, 1.22%)</title><rect x="5.0011%" y="469" width="1.2194%" height="15" fill="rgb(225,201,24)" fg:x="1378" fg:w="336"/><text x="5.2511%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (189 samples, 0.69%)</title><rect x="5.5346%" y="453" width="0.6859%" height="15" fill="rgb(221,47,46)" fg:x="1525" fg:w="189"/><text x="5.7846%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (23 samples, 0.08%)</title><rect x="6.1370%" y="437" width="0.0835%" height="15" fill="rgb(249,23,13)" fg:x="1691" fg:w="23"/><text x="6.3870%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.01%)</title><rect x="6.2060%" y="421" width="0.0145%" height="15" fill="rgb(219,9,5)" fg:x="1710" fg:w="4"/><text x="6.4560%" y="431.50"></text></g><g><title>&lt;unkr::models::BruteForceCryptor as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="6.2205%" y="485" width="0.0145%" height="15" fill="rgb(254,171,16)" fg:x="1714" fg:w="4"/><text x="6.4705%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.02%)</title><rect x="6.2350%" y="485" width="0.0181%" height="15" fill="rgb(230,171,20)" fg:x="1718" fg:w="5"/><text x="6.4850%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="6.2350%" y="469" width="0.0181%" height="15" fill="rgb(210,71,41)" fg:x="1718" fg:w="5"/><text x="6.4850%" y="479.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.01%)</title><rect x="6.2423%" y="453" width="0.0109%" height="15" fill="rgb(206,173,20)" fg:x="1720" fg:w="3"/><text x="6.4923%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (22 samples, 0.08%)</title><rect x="6.3294%" y="437" width="0.0798%" height="15" fill="rgb(233,88,34)" fg:x="1744" fg:w="22"/><text x="6.5794%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (16 samples, 0.06%)</title><rect x="6.3512%" y="421" width="0.0581%" height="15" fill="rgb(223,209,46)" fg:x="1750" fg:w="16"/><text x="6.6012%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (22 samples, 0.08%)</title><rect x="6.4092%" y="421" width="0.0798%" height="15" fill="rgb(250,43,18)" fg:x="1766" fg:w="22"/><text x="6.6592%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (71 samples, 0.26%)</title><rect x="6.2641%" y="469" width="0.2577%" height="15" fill="rgb(208,13,10)" fg:x="1726" fg:w="71"/><text x="6.5141%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (68 samples, 0.25%)</title><rect x="6.2750%" y="453" width="0.2468%" height="15" fill="rgb(212,200,36)" fg:x="1729" fg:w="68"/><text x="6.5250%" y="463.50"></text></g><g><title>core::ptr::null_mut (31 samples, 0.11%)</title><rect x="6.4092%" y="437" width="0.1125%" height="15" fill="rgb(225,90,30)" fg:x="1766" fg:w="31"/><text x="6.6592%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.03%)</title><rect x="6.4891%" y="421" width="0.0327%" height="15" fill="rgb(236,182,39)" fg:x="1788" fg:w="9"/><text x="6.7391%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (75 samples, 0.27%)</title><rect x="6.2604%" y="485" width="0.2722%" height="15" fill="rgb(212,144,35)" fg:x="1725" fg:w="75"/><text x="6.5104%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="6.5217%" y="469" width="0.0109%" height="15" fill="rgb(228,63,44)" fg:x="1797" fg:w="3"/><text x="6.7717%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.01%)</title><rect x="6.5217%" y="453" width="0.0109%" height="15" fill="rgb(228,109,6)" fg:x="1797" fg:w="3"/><text x="6.7717%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="6.9427%" y="405" width="0.0145%" height="15" fill="rgb(238,117,24)" fg:x="1913" fg:w="4"/><text x="7.1927%" y="415.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="6.9718%" y="389" width="0.0109%" height="15" fill="rgb(242,26,26)" fg:x="1921" fg:w="3"/><text x="7.2218%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::align (4 samples, 0.01%)</title><rect x="6.9827%" y="389" width="0.0145%" height="15" fill="rgb(221,92,48)" fg:x="1924" fg:w="4"/><text x="7.2327%" y="399.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (3 samples, 0.01%)</title><rect x="6.9863%" y="373" width="0.0109%" height="15" fill="rgb(209,209,32)" fg:x="1925" fg:w="3"/><text x="7.2363%" y="383.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.05%)</title><rect x="6.9572%" y="405" width="0.0544%" height="15" fill="rgb(221,70,22)" fg:x="1917" fg:w="15"/><text x="7.2072%" y="415.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="7.0008%" y="389" width="0.0109%" height="15" fill="rgb(248,145,5)" fg:x="1929" fg:w="3"/><text x="7.2508%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (16 samples, 0.06%)</title><rect x="7.0443%" y="373" width="0.0581%" height="15" fill="rgb(226,116,26)" fg:x="1941" fg:w="16"/><text x="7.2943%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (13 samples, 0.05%)</title><rect x="7.0552%" y="357" width="0.0472%" height="15" fill="rgb(244,5,17)" fg:x="1944" fg:w="13"/><text x="7.3052%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (27 samples, 0.10%)</title><rect x="7.0153%" y="405" width="0.0980%" height="15" fill="rgb(252,159,33)" fg:x="1933" fg:w="27"/><text x="7.2653%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (22 samples, 0.08%)</title><rect x="7.0335%" y="389" width="0.0798%" height="15" fill="rgb(206,71,0)" fg:x="1938" fg:w="22"/><text x="7.2835%" y="399.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.01%)</title><rect x="7.1024%" y="373" width="0.0109%" height="15" fill="rgb(233,118,54)" fg:x="1957" fg:w="3"/><text x="7.3524%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (8 samples, 0.03%)</title><rect x="7.1387%" y="373" width="0.0290%" height="15" fill="rgb(234,83,48)" fg:x="1967" fg:w="8"/><text x="7.3887%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.37%)</title><rect x="6.8048%" y="437" width="0.3666%" height="15" fill="rgb(228,3,54)" fg:x="1875" fg:w="101"/><text x="7.0548%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (90 samples, 0.33%)</title><rect x="6.8447%" y="421" width="0.3266%" height="15" fill="rgb(226,155,13)" fg:x="1886" fg:w="90"/><text x="7.0947%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (16 samples, 0.06%)</title><rect x="7.1133%" y="405" width="0.0581%" height="15" fill="rgb(241,28,37)" fg:x="1960" fg:w="16"/><text x="7.3633%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.03%)</title><rect x="7.1387%" y="389" width="0.0327%" height="15" fill="rgb(233,93,10)" fg:x="1967" fg:w="9"/><text x="7.3887%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (29 samples, 0.11%)</title><rect x="7.1786%" y="437" width="0.1052%" height="15" fill="rgb(225,113,19)" fg:x="1978" fg:w="29"/><text x="7.4286%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (26 samples, 0.09%)</title><rect x="7.1895%" y="421" width="0.0944%" height="15" fill="rgb(241,2,18)" fg:x="1981" fg:w="26"/><text x="7.4395%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (4 samples, 0.01%)</title><rect x="7.2694%" y="405" width="0.0145%" height="15" fill="rgb(228,207,21)" fg:x="2003" fg:w="4"/><text x="7.5194%" y="415.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (3 samples, 0.01%)</title><rect x="7.2730%" y="389" width="0.0109%" height="15" fill="rgb(213,211,35)" fg:x="2004" fg:w="3"/><text x="7.5230%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="7.2839%" y="437" width="0.0145%" height="15" fill="rgb(209,83,10)" fg:x="2007" fg:w="4"/><text x="7.5339%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (8 samples, 0.03%)</title><rect x="7.2984%" y="437" width="0.0290%" height="15" fill="rgb(209,164,1)" fg:x="2011" fg:w="8"/><text x="7.5484%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (227 samples, 0.82%)</title><rect x="6.5326%" y="485" width="0.8238%" height="15" fill="rgb(213,184,43)" fg:x="1800" fg:w="227"/><text x="6.7826%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (226 samples, 0.82%)</title><rect x="6.5363%" y="469" width="0.8202%" height="15" fill="rgb(231,61,34)" fg:x="1801" fg:w="226"/><text x="6.7863%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (215 samples, 0.78%)</title><rect x="6.5762%" y="453" width="0.7803%" height="15" fill="rgb(235,75,3)" fg:x="1812" fg:w="215"/><text x="6.8262%" y="463.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (8 samples, 0.03%)</title><rect x="7.3274%" y="437" width="0.0290%" height="15" fill="rgb(220,106,47)" fg:x="2019" fg:w="8"/><text x="7.5774%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (7 samples, 0.03%)</title><rect x="7.3565%" y="485" width="0.0254%" height="15" fill="rgb(210,196,33)" fg:x="2027" fg:w="7"/><text x="7.6065%" y="495.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (6 samples, 0.02%)</title><rect x="7.3601%" y="469" width="0.0218%" height="15" fill="rgb(229,154,42)" fg:x="2028" fg:w="6"/><text x="7.6101%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::take (58 samples, 0.21%)</title><rect x="7.3819%" y="485" width="0.2105%" height="15" fill="rgb(228,114,26)" fg:x="2034" fg:w="58"/><text x="7.6319%" y="495.50"></text></g><g><title>core::iter::adapters::take::Take&lt;I&gt;::new (3 samples, 0.01%)</title><rect x="7.5815%" y="469" width="0.0109%" height="15" fill="rgb(208,144,1)" fg:x="2089" fg:w="3"/><text x="7.8315%" y="479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (55 samples, 0.20%)</title><rect x="7.5924%" y="485" width="0.1996%" height="15" fill="rgb(239,112,37)" fg:x="2092" fg:w="55"/><text x="7.8424%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (39 samples, 0.14%)</title><rect x="7.6504%" y="469" width="0.1415%" height="15" fill="rgb(210,96,50)" fg:x="2108" fg:w="39"/><text x="7.9004%" y="479.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (14 samples, 0.05%)</title><rect x="7.7412%" y="453" width="0.0508%" height="15" fill="rgb(222,178,2)" fg:x="2133" fg:w="14"/><text x="7.9912%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="7.8464%" y="437" width="0.0254%" height="15" fill="rgb(226,74,18)" fg:x="2162" fg:w="7"/><text x="8.0964%" y="447.50"></text></g><g><title>core::ptr::invalid (10 samples, 0.04%)</title><rect x="7.8718%" y="421" width="0.0363%" height="15" fill="rgb(225,67,54)" fg:x="2169" fg:w="10"/><text x="8.1218%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (24 samples, 0.09%)</title><rect x="7.8246%" y="453" width="0.0871%" height="15" fill="rgb(251,92,32)" fg:x="2156" fg:w="24"/><text x="8.0746%" y="463.50"></text></g><g><title>core::ptr::null (11 samples, 0.04%)</title><rect x="7.8718%" y="437" width="0.0399%" height="15" fill="rgb(228,149,22)" fg:x="2169" fg:w="11"/><text x="8.1218%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (34 samples, 0.12%)</title><rect x="7.7920%" y="485" width="0.1234%" height="15" fill="rgb(243,54,13)" fg:x="2147" fg:w="34"/><text x="8.0420%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (33 samples, 0.12%)</title><rect x="7.7956%" y="469" width="0.1198%" height="15" fill="rgb(243,180,28)" fg:x="2148" fg:w="33"/><text x="8.0456%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,076 samples, 3.91%)</title><rect x="4.1010%" y="533" width="3.9051%" height="15" fill="rgb(208,167,24)" fg:x="1130" fg:w="1076"/><text x="4.3510%" y="543.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (1,074 samples, 3.90%)</title><rect x="4.1083%" y="517" width="3.8978%" height="15" fill="rgb(245,73,45)" fg:x="1132" fg:w="1074"/><text x="4.3583%" y="527.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,070 samples, 3.88%)</title><rect x="4.1228%" y="501" width="3.8833%" height="15" fill="rgb(237,203,48)" fg:x="1136" fg:w="1070"/><text x="4.3728%" y="511.50">&lt;T a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::len (25 samples, 0.09%)</title><rect x="7.9154%" y="485" width="0.0907%" height="15" fill="rgb(211,197,16)" fg:x="2181" fg:w="25"/><text x="8.1654%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,168 samples, 4.24%)</title><rect x="3.7998%" y="549" width="4.2389%" height="15" fill="rgb(243,99,51)" fg:x="1047" fg:w="1168"/><text x="4.0498%" y="559.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::allocator (9 samples, 0.03%)</title><rect x="8.0061%" y="533" width="0.0327%" height="15" fill="rgb(215,123,29)" fg:x="2206" fg:w="9"/><text x="8.2561%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocator (6 samples, 0.02%)</title><rect x="8.0170%" y="517" width="0.0218%" height="15" fill="rgb(239,186,37)" fg:x="2209" fg:w="6"/><text x="8.2670%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="8.0388%" y="549" width="0.0145%" height="15" fill="rgb(252,136,39)" fg:x="2215" fg:w="4"/><text x="8.2888%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.04%)</title><rect x="8.0533%" y="549" width="0.0436%" height="15" fill="rgb(223,213,32)" fg:x="2219" fg:w="12"/><text x="8.3033%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="8.0678%" y="533" width="0.0290%" height="15" fill="rgb(233,115,5)" fg:x="2223" fg:w="8"/><text x="8.3178%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="8.0751%" y="517" width="0.0218%" height="15" fill="rgb(207,226,44)" fg:x="2225" fg:w="6"/><text x="8.3251%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.02%)</title><rect x="8.0751%" y="501" width="0.0218%" height="15" fill="rgb(208,126,0)" fg:x="2225" fg:w="6"/><text x="8.3251%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="8.0751%" y="485" width="0.0218%" height="15" fill="rgb(244,66,21)" fg:x="2225" fg:w="6"/><text x="8.3251%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.02%)</title><rect x="8.0751%" y="469" width="0.0218%" height="15" fill="rgb(222,97,12)" fg:x="2225" fg:w="6"/><text x="8.3251%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.01%)</title><rect x="8.0823%" y="453" width="0.0145%" height="15" fill="rgb(219,213,19)" fg:x="2227" fg:w="4"/><text x="8.3323%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="8.0823%" y="437" width="0.0145%" height="15" fill="rgb(252,169,30)" fg:x="2227" fg:w="4"/><text x="8.3323%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="8.0823%" y="421" width="0.0145%" height="15" fill="rgb(206,32,51)" fg:x="2227" fg:w="4"/><text x="8.3323%" y="431.50"></text></g><g><title>alloc::string::String::with_capacity (7 samples, 0.03%)</title><rect x="8.1476%" y="485" width="0.0254%" height="15" fill="rgb(250,172,42)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.03%)</title><rect x="8.1476%" y="469" width="0.0254%" height="15" fill="rgb(209,34,43)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="8.1476%" y="453" width="0.0254%" height="15" fill="rgb(223,11,35)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="8.1476%" y="437" width="0.0254%" height="15" fill="rgb(251,219,26)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.03%)</title><rect x="8.1476%" y="421" width="0.0254%" height="15" fill="rgb(231,119,3)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="8.1476%" y="405" width="0.0254%" height="15" fill="rgb(216,97,11)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="8.1476%" y="389" width="0.0254%" height="15" fill="rgb(223,59,9)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="399.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="8.1476%" y="373" width="0.0254%" height="15" fill="rgb(233,93,31)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="383.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="8.1476%" y="357" width="0.0254%" height="15" fill="rgb(239,81,33)" fg:x="2245" fg:w="7"/><text x="8.3976%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="8.1513%" y="341" width="0.0218%" height="15" fill="rgb(213,120,34)" fg:x="2246" fg:w="6"/><text x="8.4013%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="8.2021%" y="421" width="0.0181%" height="15" fill="rgb(243,49,53)" fg:x="2260" fg:w="5"/><text x="8.4521%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="8.2093%" y="405" width="0.0109%" height="15" fill="rgb(247,216,33)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="415.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.01%)</title><rect x="8.2093%" y="389" width="0.0109%" height="15" fill="rgb(226,26,14)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="8.2093%" y="373" width="0.0109%" height="15" fill="rgb(215,49,53)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="8.2093%" y="357" width="0.0109%" height="15" fill="rgb(245,162,40)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="8.2093%" y="341" width="0.0109%" height="15" fill="rgb(229,68,17)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="8.2093%" y="325" width="0.0109%" height="15" fill="rgb(213,182,10)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="8.2093%" y="309" width="0.0109%" height="15" fill="rgb(245,125,30)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="8.2093%" y="293" width="0.0109%" height="15" fill="rgb(232,202,2)" fg:x="2262" fg:w="3"/><text x="8.4593%" y="303.50"></text></g><g><title>alloc::fmt::format (35 samples, 0.13%)</title><rect x="8.1005%" y="549" width="0.1270%" height="15" fill="rgb(237,140,51)" fg:x="2232" fg:w="35"/><text x="8.3505%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (31 samples, 0.11%)</title><rect x="8.1150%" y="533" width="0.1125%" height="15" fill="rgb(236,157,25)" fg:x="2236" fg:w="31"/><text x="8.3650%" y="543.50"></text></g><g><title>alloc::fmt::format::{{closure}} (28 samples, 0.10%)</title><rect x="8.1259%" y="517" width="0.1016%" height="15" fill="rgb(219,209,0)" fg:x="2239" fg:w="28"/><text x="8.3759%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (25 samples, 0.09%)</title><rect x="8.1367%" y="501" width="0.0907%" height="15" fill="rgb(240,116,54)" fg:x="2242" fg:w="25"/><text x="8.3867%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.05%)</title><rect x="8.1767%" y="485" width="0.0508%" height="15" fill="rgb(216,10,36)" fg:x="2253" fg:w="14"/><text x="8.4267%" y="495.50"></text></g><g><title>core::fmt::write (14 samples, 0.05%)</title><rect x="8.1767%" y="469" width="0.0508%" height="15" fill="rgb(222,72,44)" fg:x="2253" fg:w="14"/><text x="8.4267%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (10 samples, 0.04%)</title><rect x="8.1912%" y="453" width="0.0363%" height="15" fill="rgb(232,159,9)" fg:x="2257" fg:w="10"/><text x="8.4412%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (8 samples, 0.03%)</title><rect x="8.1984%" y="437" width="0.0290%" height="15" fill="rgb(210,39,32)" fg:x="2259" fg:w="8"/><text x="8.4484%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.01%)</title><rect x="8.2275%" y="549" width="0.0145%" height="15" fill="rgb(216,194,45)" fg:x="2267" fg:w="4"/><text x="8.4775%" y="559.50"></text></g><g><title>core::fmt::Arguments::new_v1 (6 samples, 0.02%)</title><rect x="8.2493%" y="549" width="0.0218%" height="15" fill="rgb(218,18,35)" fg:x="2273" fg:w="6"/><text x="8.4993%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.03%)</title><rect x="8.2710%" y="549" width="0.0254%" height="15" fill="rgb(207,83,51)" fg:x="2279" fg:w="7"/><text x="8.5210%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="8.2747%" y="533" width="0.0218%" height="15" fill="rgb(225,63,43)" fg:x="2280" fg:w="6"/><text x="8.5247%" y="543.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="8.2855%" y="517" width="0.0109%" height="15" fill="rgb(207,57,36)" fg:x="2283" fg:w="3"/><text x="8.5355%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (9 samples, 0.03%)</title><rect x="8.2964%" y="533" width="0.0327%" height="15" fill="rgb(216,99,33)" fg:x="2286" fg:w="9"/><text x="8.5464%" y="543.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (7 samples, 0.03%)</title><rect x="8.3037%" y="517" width="0.0254%" height="15" fill="rgb(225,42,16)" fg:x="2288" fg:w="7"/><text x="8.5537%" y="527.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (7 samples, 0.03%)</title><rect x="8.3037%" y="501" width="0.0254%" height="15" fill="rgb(220,201,45)" fg:x="2288" fg:w="7"/><text x="8.5537%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="8.3073%" y="485" width="0.0218%" height="15" fill="rgb(225,33,4)" fg:x="2289" fg:w="6"/><text x="8.5573%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (13 samples, 0.05%)</title><rect x="8.2964%" y="549" width="0.0472%" height="15" fill="rgb(224,33,50)" fg:x="2286" fg:w="13"/><text x="8.5464%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="8.3291%" y="533" width="0.0145%" height="15" fill="rgb(246,198,51)" fg:x="2295" fg:w="4"/><text x="8.5791%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="8.3545%" y="453" width="0.0145%" height="15" fill="rgb(205,22,4)" fg:x="2302" fg:w="4"/><text x="8.6045%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="8.3545%" y="437" width="0.0145%" height="15" fill="rgb(206,3,8)" fg:x="2302" fg:w="4"/><text x="8.6045%" y="447.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="8.3545%" y="421" width="0.0145%" height="15" fill="rgb(251,23,15)" fg:x="2302" fg:w="4"/><text x="8.6045%" y="431.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="8.3545%" y="405" width="0.0145%" height="15" fill="rgb(252,88,28)" fg:x="2302" fg:w="4"/><text x="8.6045%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.04%)</title><rect x="8.3472%" y="517" width="0.0436%" height="15" fill="rgb(212,127,14)" fg:x="2300" fg:w="12"/><text x="8.5972%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.04%)</title><rect x="8.3472%" y="501" width="0.0436%" height="15" fill="rgb(247,145,37)" fg:x="2300" fg:w="12"/><text x="8.5972%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.04%)</title><rect x="8.3545%" y="485" width="0.0363%" height="15" fill="rgb(209,117,53)" fg:x="2302" fg:w="10"/><text x="8.6045%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="8.3545%" y="469" width="0.0363%" height="15" fill="rgb(212,90,42)" fg:x="2302" fg:w="10"/><text x="8.6045%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.02%)</title><rect x="8.3690%" y="453" width="0.0218%" height="15" fill="rgb(218,164,37)" fg:x="2306" fg:w="6"/><text x="8.6190%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="8.3908%" y="501" width="0.0363%" height="15" fill="rgb(246,65,34)" fg:x="2312" fg:w="10"/><text x="8.6408%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (9 samples, 0.03%)</title><rect x="8.3944%" y="485" width="0.0327%" height="15" fill="rgb(231,100,33)" fg:x="2313" fg:w="9"/><text x="8.6444%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.03%)</title><rect x="8.4017%" y="469" width="0.0254%" height="15" fill="rgb(228,126,14)" fg:x="2315" fg:w="7"/><text x="8.6517%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.03%)</title><rect x="8.4017%" y="453" width="0.0254%" height="15" fill="rgb(215,173,21)" fg:x="2315" fg:w="7"/><text x="8.6517%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="8.4089%" y="437" width="0.0181%" height="15" fill="rgb(210,6,40)" fg:x="2317" fg:w="5"/><text x="8.6589%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="8.4089%" y="421" width="0.0181%" height="15" fill="rgb(212,48,18)" fg:x="2317" fg:w="5"/><text x="8.6589%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.01%)</title><rect x="8.4162%" y="405" width="0.0109%" height="15" fill="rgb(230,214,11)" fg:x="2319" fg:w="3"/><text x="8.6662%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (12 samples, 0.04%)</title><rect x="8.3908%" y="517" width="0.0436%" height="15" fill="rgb(254,105,39)" fg:x="2312" fg:w="12"/><text x="8.6408%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (7 samples, 0.03%)</title><rect x="8.4380%" y="437" width="0.0254%" height="15" fill="rgb(245,158,5)" fg:x="2325" fg:w="7"/><text x="8.6880%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="8.4416%" y="421" width="0.0218%" height="15" fill="rgb(249,208,11)" fg:x="2326" fg:w="6"/><text x="8.6916%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.02%)</title><rect x="8.4416%" y="405" width="0.0218%" height="15" fill="rgb(210,39,28)" fg:x="2326" fg:w="6"/><text x="8.6916%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="8.4452%" y="389" width="0.0181%" height="15" fill="rgb(211,56,53)" fg:x="2327" fg:w="5"/><text x="8.6952%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="8.4452%" y="373" width="0.0181%" height="15" fill="rgb(226,201,30)" fg:x="2327" fg:w="5"/><text x="8.6952%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="8.4452%" y="357" width="0.0181%" height="15" fill="rgb(239,101,34)" fg:x="2327" fg:w="5"/><text x="8.6952%" y="367.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (12 samples, 0.04%)</title><rect x="8.4380%" y="469" width="0.0436%" height="15" fill="rgb(226,209,5)" fg:x="2325" fg:w="12"/><text x="8.6880%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (12 samples, 0.04%)</title><rect x="8.4380%" y="453" width="0.0436%" height="15" fill="rgb(250,105,47)" fg:x="2325" fg:w="12"/><text x="8.6880%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.02%)</title><rect x="8.4634%" y="437" width="0.0181%" height="15" fill="rgb(230,72,3)" fg:x="2332" fg:w="5"/><text x="8.7134%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="8.4852%" y="437" width="0.0109%" height="15" fill="rgb(232,218,39)" fg:x="2338" fg:w="3"/><text x="8.7352%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (18 samples, 0.07%)</title><rect x="8.4343%" y="517" width="0.0653%" height="15" fill="rgb(248,166,6)" fg:x="2324" fg:w="18"/><text x="8.6843%" y="527.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (18 samples, 0.07%)</title><rect x="8.4343%" y="501" width="0.0653%" height="15" fill="rgb(247,89,20)" fg:x="2324" fg:w="18"/><text x="8.6843%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (18 samples, 0.07%)</title><rect x="8.4343%" y="485" width="0.0653%" height="15" fill="rgb(248,130,54)" fg:x="2324" fg:w="18"/><text x="8.6843%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="8.4815%" y="469" width="0.0181%" height="15" fill="rgb(234,196,4)" fg:x="2337" fg:w="5"/><text x="8.7315%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.01%)</title><rect x="8.4852%" y="453" width="0.0145%" height="15" fill="rgb(250,143,31)" fg:x="2338" fg:w="4"/><text x="8.7352%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="8.5323%" y="341" width="0.0109%" height="15" fill="rgb(211,110,34)" fg:x="2351" fg:w="3"/><text x="8.7823%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="8.5323%" y="325" width="0.0109%" height="15" fill="rgb(215,124,48)" fg:x="2351" fg:w="3"/><text x="8.7823%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 0.05%)</title><rect x="8.4997%" y="501" width="0.0472%" height="15" fill="rgb(216,46,13)" fg:x="2342" fg:w="13"/><text x="8.7497%" y="511.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 0.05%)</title><rect x="8.4997%" y="485" width="0.0472%" height="15" fill="rgb(205,184,25)" fg:x="2342" fg:w="13"/><text x="8.7497%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 0.05%)</title><rect x="8.4997%" y="469" width="0.0472%" height="15" fill="rgb(228,1,10)" fg:x="2342" fg:w="13"/><text x="8.7497%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="8.5033%" y="453" width="0.0436%" height="15" fill="rgb(213,116,27)" fg:x="2343" fg:w="12"/><text x="8.7533%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.04%)</title><rect x="8.5033%" y="437" width="0.0436%" height="15" fill="rgb(241,95,50)" fg:x="2343" fg:w="12"/><text x="8.7533%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.04%)</title><rect x="8.5033%" y="421" width="0.0436%" height="15" fill="rgb(238,48,32)" fg:x="2343" fg:w="12"/><text x="8.7533%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.04%)</title><rect x="8.5033%" y="405" width="0.0436%" height="15" fill="rgb(235,113,49)" fg:x="2343" fg:w="12"/><text x="8.7533%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="8.5142%" y="389" width="0.0327%" height="15" fill="rgb(205,127,43)" fg:x="2346" fg:w="9"/><text x="8.7642%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="8.5142%" y="373" width="0.0327%" height="15" fill="rgb(250,162,2)" fg:x="2346" fg:w="9"/><text x="8.7642%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.03%)</title><rect x="8.5142%" y="357" width="0.0327%" height="15" fill="rgb(220,13,41)" fg:x="2346" fg:w="9"/><text x="8.7642%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="8.5469%" y="501" width="0.0109%" height="15" fill="rgb(249,221,25)" fg:x="2355" fg:w="3"/><text x="8.7969%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="8.5469%" y="485" width="0.0109%" height="15" fill="rgb(215,208,19)" fg:x="2355" fg:w="3"/><text x="8.7969%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="8.5469%" y="469" width="0.0109%" height="15" fill="rgb(236,175,2)" fg:x="2355" fg:w="3"/><text x="8.7969%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="8.5469%" y="453" width="0.0109%" height="15" fill="rgb(241,52,2)" fg:x="2355" fg:w="3"/><text x="8.7969%" y="463.50"></text></g><g><title>unkr::join::skip_if_previous_in (17 samples, 0.06%)</title><rect x="8.4997%" y="517" width="0.0617%" height="15" fill="rgb(248,140,14)" fg:x="2342" fg:w="17"/><text x="8.7497%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.02%)</title><rect x="8.5614%" y="501" width="0.0181%" height="15" fill="rgb(253,22,42)" fg:x="2359" fg:w="5"/><text x="8.8114%" y="511.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.02%)</title><rect x="8.5614%" y="485" width="0.0181%" height="15" fill="rgb(234,61,47)" fg:x="2359" fg:w="5"/><text x="8.8114%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.02%)</title><rect x="8.5614%" y="469" width="0.0181%" height="15" fill="rgb(208,226,15)" fg:x="2359" fg:w="5"/><text x="8.8114%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.02%)</title><rect x="8.5614%" y="453" width="0.0181%" height="15" fill="rgb(217,221,4)" fg:x="2359" fg:w="5"/><text x="8.8114%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.02%)</title><rect x="8.5614%" y="437" width="0.0181%" height="15" fill="rgb(212,174,34)" fg:x="2359" fg:w="5"/><text x="8.8114%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="8.5614%" y="421" width="0.0181%" height="15" fill="rgb(253,83,4)" fg:x="2359" fg:w="5"/><text x="8.8114%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="8.5614%" y="405" width="0.0181%" height="15" fill="rgb(250,195,49)" fg:x="2359" fg:w="5"/><text x="8.8114%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="8.5795%" y="501" width="0.0109%" height="15" fill="rgb(241,192,25)" fg:x="2364" fg:w="3"/><text x="8.8295%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (71 samples, 0.26%)</title><rect x="8.3436%" y="549" width="0.2577%" height="15" fill="rgb(208,124,10)" fg:x="2299" fg:w="71"/><text x="8.5936%" y="559.50"></text></g><g><title>unkr::core::loop_decrypt::{{closure}} (71 samples, 0.26%)</title><rect x="8.3436%" y="533" width="0.2577%" height="15" fill="rgb(222,33,0)" fg:x="2299" fg:w="71"/><text x="8.5936%" y="543.50"></text></g><g><title>unkr::reverse::skip_if_previous_in (11 samples, 0.04%)</title><rect x="8.5614%" y="517" width="0.0399%" height="15" fill="rgb(234,209,28)" fg:x="2359" fg:w="11"/><text x="8.8114%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (3 samples, 0.01%)</title><rect x="8.5904%" y="501" width="0.0109%" height="15" fill="rgb(224,11,23)" fg:x="2367" fg:w="3"/><text x="8.8404%" y="511.50"></text></g><g><title>alloc::slice::hack::into_vec (3 samples, 0.01%)</title><rect x="8.5904%" y="485" width="0.0109%" height="15" fill="rgb(232,99,1)" fg:x="2367" fg:w="3"/><text x="8.8404%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="8.6267%" y="469" width="0.0290%" height="15" fill="rgb(237,95,45)" fg:x="2377" fg:w="8"/><text x="8.8767%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="8.6412%" y="453" width="0.0145%" height="15" fill="rgb(208,109,11)" fg:x="2381" fg:w="4"/><text x="8.8912%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (15 samples, 0.05%)</title><rect x="8.6086%" y="501" width="0.0544%" height="15" fill="rgb(216,190,48)" fg:x="2372" fg:w="15"/><text x="8.8586%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.05%)</title><rect x="8.6122%" y="485" width="0.0508%" height="15" fill="rgb(251,171,36)" fg:x="2373" fg:w="14"/><text x="8.8622%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.07%)</title><rect x="8.6049%" y="517" width="0.0653%" height="15" fill="rgb(230,62,22)" fg:x="2371" fg:w="18"/><text x="8.8549%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="8.6775%" y="485" width="0.0327%" height="15" fill="rgb(225,114,35)" fg:x="2391" fg:w="9"/><text x="8.9275%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="8.6775%" y="469" width="0.0327%" height="15" fill="rgb(215,118,42)" fg:x="2391" fg:w="9"/><text x="8.9275%" y="479.50"></text></g><g><title>cfree (8 samples, 0.03%)</title><rect x="8.6811%" y="453" width="0.0290%" height="15" fill="rgb(243,119,21)" fg:x="2392" fg:w="8"/><text x="8.9311%" y="463.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="8.6920%" y="437" width="0.0181%" height="15" fill="rgb(252,177,53)" fg:x="2395" fg:w="5"/><text x="8.9420%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.03%)</title><rect x="8.7138%" y="469" width="0.0327%" height="15" fill="rgb(237,209,29)" fg:x="2401" fg:w="9"/><text x="8.9638%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (6 samples, 0.02%)</title><rect x="8.7247%" y="453" width="0.0218%" height="15" fill="rgb(212,65,23)" fg:x="2404" fg:w="6"/><text x="8.9747%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (19 samples, 0.07%)</title><rect x="8.7465%" y="469" width="0.0690%" height="15" fill="rgb(230,222,46)" fg:x="2410" fg:w="19"/><text x="8.9965%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (19 samples, 0.07%)</title><rect x="8.7465%" y="453" width="0.0690%" height="15" fill="rgb(215,135,32)" fg:x="2410" fg:w="19"/><text x="8.9965%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (59 samples, 0.21%)</title><rect x="8.6049%" y="549" width="0.2141%" height="15" fill="rgb(246,101,22)" fg:x="2371" fg:w="59"/><text x="8.8549%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (59 samples, 0.21%)</title><rect x="8.6049%" y="533" width="0.2141%" height="15" fill="rgb(206,107,13)" fg:x="2371" fg:w="59"/><text x="8.8549%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (41 samples, 0.15%)</title><rect x="8.6702%" y="517" width="0.1488%" height="15" fill="rgb(250,100,44)" fg:x="2389" fg:w="41"/><text x="8.9202%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.15%)</title><rect x="8.6702%" y="501" width="0.1488%" height="15" fill="rgb(231,147,38)" fg:x="2389" fg:w="41"/><text x="8.9202%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (30 samples, 0.11%)</title><rect x="8.7102%" y="485" width="0.1089%" height="15" fill="rgb(229,8,40)" fg:x="2400" fg:w="30"/><text x="8.9602%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::collections::btree::set::BTreeSet&lt;alloc::string::String&gt;&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="8.8190%" y="549" width="0.0436%" height="15" fill="rgb(221,135,30)" fg:x="2430" fg:w="12"/><text x="9.0690%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="8.8227%" y="533" width="0.0399%" height="15" fill="rgb(249,193,18)" fg:x="2431" fg:w="11"/><text x="9.0727%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.04%)</title><rect x="8.8263%" y="517" width="0.0363%" height="15" fill="rgb(209,133,39)" fg:x="2432" fg:w="10"/><text x="9.0763%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.03%)</title><rect x="8.8336%" y="501" width="0.0290%" height="15" fill="rgb(232,100,14)" fg:x="2434" fg:w="8"/><text x="9.0836%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="8.8953%" y="485" width="0.0508%" height="15" fill="rgb(224,185,1)" fg:x="2451" fg:w="14"/><text x="9.1453%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (13 samples, 0.05%)</title><rect x="8.8989%" y="469" width="0.0472%" height="15" fill="rgb(223,139,8)" fg:x="2452" fg:w="13"/><text x="9.1489%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (22 samples, 0.08%)</title><rect x="8.8699%" y="517" width="0.0798%" height="15" fill="rgb(232,213,38)" fg:x="2444" fg:w="22"/><text x="9.1199%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (21 samples, 0.08%)</title><rect x="8.8735%" y="501" width="0.0762%" height="15" fill="rgb(207,94,22)" fg:x="2445" fg:w="21"/><text x="9.1235%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.03%)</title><rect x="9.0695%" y="437" width="0.0290%" height="15" fill="rgb(219,183,54)" fg:x="2499" fg:w="8"/><text x="9.3195%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (47 samples, 0.17%)</title><rect x="9.1856%" y="421" width="0.1706%" height="15" fill="rgb(216,185,54)" fg:x="2531" fg:w="47"/><text x="9.4356%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (26 samples, 0.09%)</title><rect x="9.2618%" y="405" width="0.0944%" height="15" fill="rgb(254,217,39)" fg:x="2552" fg:w="26"/><text x="9.5118%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (7 samples, 0.03%)</title><rect x="9.3671%" y="405" width="0.0254%" height="15" fill="rgb(240,178,23)" fg:x="2581" fg:w="7"/><text x="9.6171%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (99 samples, 0.36%)</title><rect x="9.0658%" y="453" width="0.3593%" height="15" fill="rgb(218,11,47)" fg:x="2498" fg:w="99"/><text x="9.3158%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (90 samples, 0.33%)</title><rect x="9.0985%" y="437" width="0.3266%" height="15" fill="rgb(218,51,51)" fg:x="2507" fg:w="90"/><text x="9.3485%" y="447.50"></text></g><g><title>core::ptr::null_mut (19 samples, 0.07%)</title><rect x="9.3562%" y="421" width="0.0690%" height="15" fill="rgb(238,126,27)" fg:x="2578" fg:w="19"/><text x="9.6062%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.03%)</title><rect x="9.3925%" y="405" width="0.0327%" height="15" fill="rgb(249,202,22)" fg:x="2588" fg:w="9"/><text x="9.6425%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.40%)</title><rect x="9.0513%" y="469" width="0.4028%" height="15" fill="rgb(254,195,49)" fg:x="2494" fg:w="111"/><text x="9.3013%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (8 samples, 0.03%)</title><rect x="9.4251%" y="453" width="0.0290%" height="15" fill="rgb(208,123,14)" fg:x="2597" fg:w="8"/><text x="9.6751%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (6 samples, 0.02%)</title><rect x="9.4324%" y="437" width="0.0218%" height="15" fill="rgb(224,200,8)" fg:x="2599" fg:w="6"/><text x="9.6824%" y="447.50"></text></g><g><title>cfree (62 samples, 0.23%)</title><rect x="9.6066%" y="405" width="0.2250%" height="15" fill="rgb(217,61,36)" fg:x="2647" fg:w="62"/><text x="9.8566%" y="415.50"></text></g><g><title>[libc.so.6] (54 samples, 0.20%)</title><rect x="9.6356%" y="389" width="0.1960%" height="15" fill="rgb(206,35,45)" fg:x="2655" fg:w="54"/><text x="9.8856%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.29%)</title><rect x="9.5594%" y="437" width="0.2867%" height="15" fill="rgb(217,65,33)" fg:x="2634" fg:w="79"/><text x="9.8094%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (72 samples, 0.26%)</title><rect x="9.5848%" y="421" width="0.2613%" height="15" fill="rgb(222,158,48)" fg:x="2641" fg:w="72"/><text x="9.8348%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (74 samples, 0.27%)</title><rect x="10.0856%" y="421" width="0.2686%" height="15" fill="rgb(254,2,54)" fg:x="2779" fg:w="74"/><text x="10.3356%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (34 samples, 0.12%)</title><rect x="10.2308%" y="405" width="0.1234%" height="15" fill="rgb(250,143,38)" fg:x="2819" fg:w="34"/><text x="10.4808%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (13 samples, 0.05%)</title><rect x="10.3070%" y="389" width="0.0472%" height="15" fill="rgb(248,25,0)" fg:x="2840" fg:w="13"/><text x="10.5570%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (8 samples, 0.03%)</title><rect x="10.5720%" y="389" width="0.0290%" height="15" fill="rgb(206,152,27)" fg:x="2913" fg:w="8"/><text x="10.8220%" y="399.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (3 samples, 0.01%)</title><rect x="10.5901%" y="373" width="0.0109%" height="15" fill="rgb(240,77,30)" fg:x="2918" fg:w="3"/><text x="10.8401%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (75 samples, 0.27%)</title><rect x="10.3542%" y="405" width="0.2722%" height="15" fill="rgb(231,5,3)" fg:x="2853" fg:w="75"/><text x="10.6042%" y="415.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (7 samples, 0.03%)</title><rect x="10.6010%" y="389" width="0.0254%" height="15" fill="rgb(207,226,32)" fg:x="2921" fg:w="7"/><text x="10.8510%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (78 samples, 0.28%)</title><rect x="10.3542%" y="421" width="0.2831%" height="15" fill="rgb(222,207,47)" fg:x="2853" fg:w="78"/><text x="10.6042%" y="431.50"></text></g><g><title>core::mem::valid_align::ValidAlign::of (3 samples, 0.01%)</title><rect x="10.6264%" y="405" width="0.0109%" height="15" fill="rgb(229,115,45)" fg:x="2928" fg:w="3"/><text x="10.8764%" y="415.50"></text></g><g><title>core::mem::valid_align::ValidAlign::new_unchecked (3 samples, 0.01%)</title><rect x="10.6264%" y="389" width="0.0109%" height="15" fill="rgb(224,191,6)" fg:x="2928" fg:w="3"/><text x="10.8764%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (508 samples, 1.84%)</title><rect x="8.8699%" y="533" width="1.8437%" height="15" fill="rgb(230,227,24)" fg:x="2444" fg:w="508"/><text x="9.1199%" y="543.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (486 samples, 1.76%)</title><rect x="8.9497%" y="517" width="1.7638%" height="15" fill="rgb(228,80,19)" fg:x="2466" fg:w="486"/><text x="9.1997%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (470 samples, 1.71%)</title><rect x="9.0078%" y="501" width="1.7057%" height="15" fill="rgb(247,229,0)" fg:x="2482" fg:w="470"/><text x="9.2578%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (468 samples, 1.70%)</title><rect x="9.0150%" y="485" width="1.6985%" height="15" fill="rgb(237,194,15)" fg:x="2484" fg:w="468"/><text x="9.2650%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (347 samples, 1.26%)</title><rect x="9.4542%" y="469" width="1.2593%" height="15" fill="rgb(219,203,20)" fg:x="2605" fg:w="347"/><text x="9.7042%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (339 samples, 1.23%)</title><rect x="9.4832%" y="453" width="1.2303%" height="15" fill="rgb(234,128,8)" fg:x="2613" fg:w="339"/><text x="9.7332%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (239 samples, 0.87%)</title><rect x="9.8461%" y="437" width="0.8674%" height="15" fill="rgb(248,202,8)" fg:x="2713" fg:w="239"/><text x="10.0961%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (20 samples, 0.07%)</title><rect x="10.6409%" y="421" width="0.0726%" height="15" fill="rgb(206,104,37)" fg:x="2932" fg:w="20"/><text x="10.8909%" y="431.50"></text></g><g><title>cfree (14 samples, 0.05%)</title><rect x="10.7752%" y="469" width="0.0508%" height="15" fill="rgb(223,8,27)" fg:x="2969" fg:w="14"/><text x="11.0252%" y="479.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="10.7970%" y="453" width="0.0290%" height="15" fill="rgb(216,217,28)" fg:x="2975" fg:w="8"/><text x="11.0470%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.08%)</title><rect x="10.7534%" y="501" width="0.0835%" height="15" fill="rgb(249,199,1)" fg:x="2963" fg:w="23"/><text x="11.0034%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.07%)</title><rect x="10.7716%" y="485" width="0.0653%" height="15" fill="rgb(240,85,17)" fg:x="2968" fg:w="18"/><text x="11.0216%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.06%)</title><rect x="10.8768%" y="485" width="0.0581%" height="15" fill="rgb(206,108,45)" fg:x="2997" fg:w="16"/><text x="11.1268%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (14 samples, 0.05%)</title><rect x="10.8841%" y="469" width="0.0508%" height="15" fill="rgb(245,210,41)" fg:x="2999" fg:w="14"/><text x="11.1341%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (582 samples, 2.11%)</title><rect x="8.8626%" y="549" width="2.1122%" height="15" fill="rgb(206,13,37)" fg:x="2442" fg:w="582"/><text x="9.1126%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (72 samples, 0.26%)</title><rect x="10.7135%" y="533" width="0.2613%" height="15" fill="rgb(250,61,18)" fg:x="2952" fg:w="72"/><text x="10.9635%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.26%)</title><rect x="10.7171%" y="517" width="0.2577%" height="15" fill="rgb(235,172,48)" fg:x="2953" fg:w="71"/><text x="10.9671%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (38 samples, 0.14%)</title><rect x="10.8369%" y="501" width="0.1379%" height="15" fill="rgb(249,201,17)" fg:x="2986" fg:w="38"/><text x="11.0869%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (10 samples, 0.04%)</title><rect x="10.9385%" y="485" width="0.0363%" height="15" fill="rgb(219,208,6)" fg:x="3014" fg:w="10"/><text x="11.1885%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="10.9748%" y="485" width="0.0181%" height="15" fill="rgb(248,31,23)" fg:x="3024" fg:w="5"/><text x="11.2248%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="10.9821%" y="469" width="0.0109%" height="15" fill="rgb(245,15,42)" fg:x="3026" fg:w="3"/><text x="11.2321%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="10.9748%" y="533" width="0.0218%" height="15" fill="rgb(222,217,39)" fg:x="3024" fg:w="6"/><text x="11.2248%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.02%)</title><rect x="10.9748%" y="517" width="0.0218%" height="15" fill="rgb(210,219,27)" fg:x="3024" fg:w="6"/><text x="11.2248%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.02%)</title><rect x="10.9748%" y="501" width="0.0218%" height="15" fill="rgb(252,166,36)" fg:x="3024" fg:w="6"/><text x="11.2248%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="11.0002%" y="501" width="0.0145%" height="15" fill="rgb(245,132,34)" fg:x="3031" fg:w="4"/><text x="11.2502%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="11.0002%" y="485" width="0.0145%" height="15" fill="rgb(236,54,3)" fg:x="3031" fg:w="4"/><text x="11.2502%" y="495.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="11.0038%" y="469" width="0.0109%" height="15" fill="rgb(241,173,43)" fg:x="3032" fg:w="3"/><text x="11.2538%" y="479.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="11.0038%" y="453" width="0.0109%" height="15" fill="rgb(215,190,9)" fg:x="3032" fg:w="3"/><text x="11.2538%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.05%)</title><rect x="10.9748%" y="549" width="0.0544%" height="15" fill="rgb(242,101,16)" fg:x="3024" fg:w="15"/><text x="11.2248%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.03%)</title><rect x="10.9966%" y="533" width="0.0327%" height="15" fill="rgb(223,190,21)" fg:x="3030" fg:w="9"/><text x="11.2466%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="10.9966%" y="517" width="0.0327%" height="15" fill="rgb(215,228,25)" fg:x="3030" fg:w="9"/><text x="11.2466%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="11.0147%" y="501" width="0.0145%" height="15" fill="rgb(225,36,22)" fg:x="3035" fg:w="4"/><text x="11.2647%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="11.0438%" y="485" width="0.0181%" height="15" fill="rgb(251,106,46)" fg:x="3043" fg:w="5"/><text x="11.2938%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="11.0510%" y="469" width="0.0109%" height="15" fill="rgb(208,90,1)" fg:x="3045" fg:w="3"/><text x="11.3010%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="11.0293%" y="533" width="0.0363%" height="15" fill="rgb(243,10,4)" fg:x="3039" fg:w="10"/><text x="11.2793%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.03%)</title><rect x="11.0329%" y="517" width="0.0327%" height="15" fill="rgb(212,137,27)" fg:x="3040" fg:w="9"/><text x="11.2829%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.03%)</title><rect x="11.0329%" y="501" width="0.0327%" height="15" fill="rgb(231,220,49)" fg:x="3040" fg:w="9"/><text x="11.2829%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="11.0728%" y="501" width="0.0181%" height="15" fill="rgb(237,96,20)" fg:x="3051" fg:w="5"/><text x="11.3228%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="11.0801%" y="485" width="0.0109%" height="15" fill="rgb(239,229,30)" fg:x="3053" fg:w="3"/><text x="11.3301%" y="495.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="11.0801%" y="469" width="0.0109%" height="15" fill="rgb(219,65,33)" fg:x="3053" fg:w="3"/><text x="11.3301%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.02%)</title><rect x="11.1164%" y="485" width="0.0181%" height="15" fill="rgb(243,134,7)" fg:x="3063" fg:w="5"/><text x="11.3664%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="11.1236%" y="469" width="0.0109%" height="15" fill="rgb(216,177,54)" fg:x="3065" fg:w="3"/><text x="11.3736%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.03%)</title><rect x="11.1345%" y="485" width="0.0254%" height="15" fill="rgb(211,160,20)" fg:x="3068" fg:w="7"/><text x="11.3845%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (7 samples, 0.03%)</title><rect x="11.1345%" y="469" width="0.0254%" height="15" fill="rgb(239,85,39)" fg:x="3068" fg:w="7"/><text x="11.3845%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;unkr::models::BruteForceCryptor&gt;&gt; (39 samples, 0.14%)</title><rect x="11.0293%" y="549" width="0.1415%" height="15" fill="rgb(232,125,22)" fg:x="3039" fg:w="39"/><text x="11.2793%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;unkr::models::BruteForceCryptor&gt;&gt; (29 samples, 0.11%)</title><rect x="11.0655%" y="533" width="0.1052%" height="15" fill="rgb(244,57,34)" fg:x="3049" fg:w="29"/><text x="11.3155%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.10%)</title><rect x="11.0692%" y="517" width="0.1016%" height="15" fill="rgb(214,203,32)" fg:x="3050" fg:w="28"/><text x="11.3192%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (22 samples, 0.08%)</title><rect x="11.0909%" y="501" width="0.0798%" height="15" fill="rgb(207,58,43)" fg:x="3056" fg:w="22"/><text x="11.3409%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (3 samples, 0.01%)</title><rect x="11.1599%" y="485" width="0.0109%" height="15" fill="rgb(215,193,15)" fg:x="3075" fg:w="3"/><text x="11.4099%" y="495.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (3 samples, 0.01%)</title><rect x="11.1708%" y="517" width="0.0109%" height="15" fill="rgb(232,15,44)" fg:x="3078" fg:w="3"/><text x="11.4208%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="11.1853%" y="453" width="0.0145%" height="15" fill="rgb(212,3,48)" fg:x="3082" fg:w="4"/><text x="11.4353%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;unkr::models::BruteForceCryptor&gt;&gt; (10 samples, 0.04%)</title><rect x="11.1817%" y="485" width="0.0363%" height="15" fill="rgb(218,128,7)" fg:x="3081" fg:w="10"/><text x="11.4317%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="11.1817%" y="469" width="0.0363%" height="15" fill="rgb(226,216,39)" fg:x="3081" fg:w="10"/><text x="11.4317%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.02%)</title><rect x="11.1998%" y="453" width="0.0181%" height="15" fill="rgb(243,47,51)" fg:x="3086" fg:w="5"/><text x="11.4498%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (4 samples, 0.01%)</title><rect x="11.2035%" y="437" width="0.0145%" height="15" fill="rgb(241,183,40)" fg:x="3087" fg:w="4"/><text x="11.4535%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;unkr::models::BruteForceCryptor&gt;&gt; (14 samples, 0.05%)</title><rect x="11.1708%" y="549" width="0.0508%" height="15" fill="rgb(231,217,32)" fg:x="3078" fg:w="14"/><text x="11.4208%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.05%)</title><rect x="11.1708%" y="533" width="0.0508%" height="15" fill="rgb(229,61,38)" fg:x="3078" fg:w="14"/><text x="11.4208%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;unkr::models::BruteForceCryptor,alloc::alloc::Global&gt;&gt; (11 samples, 0.04%)</title><rect x="11.1817%" y="517" width="0.0399%" height="15" fill="rgb(225,210,5)" fg:x="3081" fg:w="11"/><text x="11.4317%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="11.1817%" y="501" width="0.0399%" height="15" fill="rgb(231,79,45)" fg:x="3081" fg:w="11"/><text x="11.4317%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.01%)</title><rect x="11.2470%" y="469" width="0.0109%" height="15" fill="rgb(224,100,7)" fg:x="3099" fg:w="3"/><text x="11.4970%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.01%)</title><rect x="11.2470%" y="453" width="0.0109%" height="15" fill="rgb(241,198,18)" fg:x="3099" fg:w="3"/><text x="11.4970%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (11 samples, 0.04%)</title><rect x="11.2688%" y="453" width="0.0399%" height="15" fill="rgb(252,97,53)" fg:x="3105" fg:w="11"/><text x="11.5188%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="11.2869%" y="437" width="0.0218%" height="15" fill="rgb(220,88,7)" fg:x="3110" fg:w="6"/><text x="11.5369%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.08%)</title><rect x="11.2361%" y="501" width="0.0835%" height="15" fill="rgb(213,176,14)" fg:x="3096" fg:w="23"/><text x="11.4861%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (21 samples, 0.08%)</title><rect x="11.2434%" y="485" width="0.0762%" height="15" fill="rgb(246,73,7)" fg:x="3098" fg:w="21"/><text x="11.4934%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (17 samples, 0.06%)</title><rect x="11.2579%" y="469" width="0.0617%" height="15" fill="rgb(245,64,36)" fg:x="3102" fg:w="17"/><text x="11.5079%" y="479.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.01%)</title><rect x="11.3087%" y="453" width="0.0109%" height="15" fill="rgb(245,80,10)" fg:x="3116" fg:w="3"/><text x="11.5587%" y="463.50"></text></g><g><title>cfree (8 samples, 0.03%)</title><rect x="11.3341%" y="437" width="0.0290%" height="15" fill="rgb(232,107,50)" fg:x="3123" fg:w="8"/><text x="11.5841%" y="447.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="11.3414%" y="421" width="0.0218%" height="15" fill="rgb(253,3,0)" fg:x="3125" fg:w="6"/><text x="11.5914%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="11.3341%" y="469" width="0.0327%" height="15" fill="rgb(212,99,53)" fg:x="3123" fg:w="9"/><text x="11.5841%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="11.3341%" y="453" width="0.0327%" height="15" fill="rgb(249,111,54)" fg:x="3123" fg:w="9"/><text x="11.5841%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.03%)</title><rect x="11.3849%" y="453" width="0.0290%" height="15" fill="rgb(249,55,30)" fg:x="3137" fg:w="8"/><text x="11.6349%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (7 samples, 0.03%)</title><rect x="11.3885%" y="437" width="0.0254%" height="15" fill="rgb(237,47,42)" fg:x="3138" fg:w="7"/><text x="11.6385%" y="447.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="11.3994%" y="421" width="0.0145%" height="15" fill="rgb(211,20,18)" fg:x="3141" fg:w="4"/><text x="11.6494%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="11.3994%" y="405" width="0.0145%" height="15" fill="rgb(231,203,46)" fg:x="3141" fg:w="4"/><text x="11.6494%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.06%)</title><rect x="11.4140%" y="453" width="0.0581%" height="15" fill="rgb(237,142,3)" fg:x="3145" fg:w="16"/><text x="11.6640%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (16 samples, 0.06%)</title><rect x="11.4140%" y="437" width="0.0581%" height="15" fill="rgb(241,107,1)" fg:x="3145" fg:w="16"/><text x="11.6640%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (3 samples, 0.01%)</title><rect x="11.4611%" y="421" width="0.0109%" height="15" fill="rgb(229,83,13)" fg:x="3158" fg:w="3"/><text x="11.7111%" y="431.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (3 samples, 0.01%)</title><rect x="11.4611%" y="405" width="0.0109%" height="15" fill="rgb(241,91,40)" fg:x="3158" fg:w="3"/><text x="11.7111%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (72 samples, 0.26%)</title><rect x="11.2216%" y="549" width="0.2613%" height="15" fill="rgb(225,3,45)" fg:x="3092" fg:w="72"/><text x="11.4716%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (71 samples, 0.26%)</title><rect x="11.2252%" y="533" width="0.2577%" height="15" fill="rgb(244,223,14)" fg:x="3093" fg:w="71"/><text x="11.4752%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (70 samples, 0.25%)</title><rect x="11.2289%" y="517" width="0.2540%" height="15" fill="rgb(224,124,37)" fg:x="3094" fg:w="70"/><text x="11.4789%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (45 samples, 0.16%)</title><rect x="11.3196%" y="501" width="0.1633%" height="15" fill="rgb(251,171,30)" fg:x="3119" fg:w="45"/><text x="11.5696%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.16%)</title><rect x="11.3196%" y="485" width="0.1633%" height="15" fill="rgb(236,46,54)" fg:x="3119" fg:w="45"/><text x="11.5696%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (32 samples, 0.12%)</title><rect x="11.3668%" y="469" width="0.1161%" height="15" fill="rgb(245,213,5)" fg:x="3132" fg:w="32"/><text x="11.6168%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="11.5228%" y="453" width="0.0218%" height="15" fill="rgb(230,144,27)" fg:x="3175" fg:w="6"/><text x="11.7728%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="11.5228%" y="437" width="0.0218%" height="15" fill="rgb(220,86,6)" fg:x="3175" fg:w="6"/><text x="11.7728%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.02%)</title><rect x="11.5228%" y="421" width="0.0218%" height="15" fill="rgb(240,20,13)" fg:x="3175" fg:w="6"/><text x="11.7728%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="11.5228%" y="405" width="0.0218%" height="15" fill="rgb(217,89,34)" fg:x="3175" fg:w="6"/><text x="11.7728%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="11.5228%" y="389" width="0.0218%" height="15" fill="rgb(229,13,5)" fg:x="3175" fg:w="6"/><text x="11.7728%" y="399.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="11.5228%" y="373" width="0.0218%" height="15" fill="rgb(244,67,35)" fg:x="3175" fg:w="6"/><text x="11.7728%" y="383.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="11.5337%" y="357" width="0.0109%" height="15" fill="rgb(221,40,2)" fg:x="3178" fg:w="3"/><text x="11.7837%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="11.5192%" y="533" width="0.0290%" height="15" fill="rgb(237,157,21)" fg:x="3174" fg:w="8"/><text x="11.7692%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="11.5228%" y="517" width="0.0254%" height="15" fill="rgb(222,94,11)" fg:x="3175" fg:w="7"/><text x="11.7728%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.03%)</title><rect x="11.5228%" y="501" width="0.0254%" height="15" fill="rgb(249,113,6)" fg:x="3175" fg:w="7"/><text x="11.7728%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.03%)</title><rect x="11.5228%" y="485" width="0.0254%" height="15" fill="rgb(238,137,36)" fg:x="3175" fg:w="7"/><text x="11.7728%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.03%)</title><rect x="11.5228%" y="469" width="0.0254%" height="15" fill="rgb(210,102,26)" fg:x="3175" fg:w="7"/><text x="11.7728%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="11.5954%" y="469" width="0.0218%" height="15" fill="rgb(218,30,30)" fg:x="3195" fg:w="6"/><text x="11.8454%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="11.5954%" y="453" width="0.0218%" height="15" fill="rgb(214,67,26)" fg:x="3195" fg:w="6"/><text x="11.8454%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.05%)</title><rect x="11.5736%" y="517" width="0.0472%" height="15" fill="rgb(251,9,53)" fg:x="3189" fg:w="13"/><text x="11.8236%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.04%)</title><rect x="11.5773%" y="501" width="0.0436%" height="15" fill="rgb(228,204,25)" fg:x="3190" fg:w="12"/><text x="11.8273%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.04%)</title><rect x="11.5809%" y="485" width="0.0399%" height="15" fill="rgb(207,153,8)" fg:x="3191" fg:w="11"/><text x="11.8309%" y="495.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="11.7442%" y="293" width="0.0109%" height="15" fill="rgb(242,9,16)" fg:x="3236" fg:w="3"/><text x="11.9942%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62 samples, 0.23%)</title><rect x="11.7224%" y="389" width="0.2250%" height="15" fill="rgb(217,211,10)" fg:x="3230" fg:w="62"/><text x="11.9724%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 0.23%)</title><rect x="11.7224%" y="373" width="0.2250%" height="15" fill="rgb(219,228,52)" fg:x="3230" fg:w="62"/><text x="11.9724%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (62 samples, 0.23%)</title><rect x="11.7224%" y="357" width="0.2250%" height="15" fill="rgb(231,92,29)" fg:x="3230" fg:w="62"/><text x="11.9724%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.23%)</title><rect x="11.7224%" y="341" width="0.2250%" height="15" fill="rgb(232,8,23)" fg:x="3230" fg:w="62"/><text x="11.9724%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.23%)</title><rect x="11.7224%" y="325" width="0.2250%" height="15" fill="rgb(216,211,34)" fg:x="3230" fg:w="62"/><text x="11.9724%" y="335.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.23%)</title><rect x="11.7224%" y="309" width="0.2250%" height="15" fill="rgb(236,151,0)" fg:x="3230" fg:w="62"/><text x="11.9724%" y="319.50"></text></g><g><title>malloc (53 samples, 0.19%)</title><rect x="11.7551%" y="293" width="0.1923%" height="15" fill="rgb(209,168,3)" fg:x="3239" fg:w="53"/><text x="12.0051%" y="303.50"></text></g><g><title>[libc.so.6] (28 samples, 0.10%)</title><rect x="11.8458%" y="277" width="0.1016%" height="15" fill="rgb(208,129,28)" fg:x="3264" fg:w="28"/><text x="12.0958%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="11.9329%" y="261" width="0.0145%" height="15" fill="rgb(229,78,22)" fg:x="3288" fg:w="4"/><text x="12.1829%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (89 samples, 0.32%)</title><rect x="11.6861%" y="469" width="0.3230%" height="15" fill="rgb(228,187,13)" fg:x="3220" fg:w="89"/><text x="11.9361%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79 samples, 0.29%)</title><rect x="11.7224%" y="453" width="0.2867%" height="15" fill="rgb(240,119,24)" fg:x="3230" fg:w="79"/><text x="11.9724%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (79 samples, 0.29%)</title><rect x="11.7224%" y="437" width="0.2867%" height="15" fill="rgb(209,194,42)" fg:x="3230" fg:w="79"/><text x="11.9724%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (79 samples, 0.29%)</title><rect x="11.7224%" y="421" width="0.2867%" height="15" fill="rgb(247,200,46)" fg:x="3230" fg:w="79"/><text x="11.9724%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (79 samples, 0.29%)</title><rect x="11.7224%" y="405" width="0.2867%" height="15" fill="rgb(218,76,16)" fg:x="3230" fg:w="79"/><text x="11.9724%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.06%)</title><rect x="11.9474%" y="389" width="0.0617%" height="15" fill="rgb(225,21,48)" fg:x="3292" fg:w="17"/><text x="12.1974%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.06%)</title><rect x="11.9474%" y="373" width="0.0617%" height="15" fill="rgb(239,223,50)" fg:x="3292" fg:w="17"/><text x="12.1974%" y="383.50"></text></g><g><title>[libc.so.6] (13 samples, 0.05%)</title><rect x="11.9620%" y="357" width="0.0472%" height="15" fill="rgb(244,45,21)" fg:x="3296" fg:w="13"/><text x="12.2120%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="12.1579%" y="437" width="0.0181%" height="15" fill="rgb(232,33,43)" fg:x="3350" fg:w="5"/><text x="12.4079%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="12.2378%" y="405" width="0.0508%" height="15" fill="rgb(209,8,3)" fg:x="3372" fg:w="14"/><text x="12.4878%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (19 samples, 0.07%)</title><rect x="12.2269%" y="421" width="0.0690%" height="15" fill="rgb(214,25,53)" fg:x="3369" fg:w="19"/><text x="12.4769%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="12.3213%" y="405" width="0.0254%" height="15" fill="rgb(254,186,54)" fg:x="3395" fg:w="7"/><text x="12.5713%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="12.3249%" y="389" width="0.0218%" height="15" fill="rgb(208,174,49)" fg:x="3396" fg:w="6"/><text x="12.5749%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (20 samples, 0.07%)</title><rect x="12.2959%" y="421" width="0.0726%" height="15" fill="rgb(233,191,51)" fg:x="3388" fg:w="20"/><text x="12.5459%" y="431.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.02%)</title><rect x="12.3467%" y="405" width="0.0218%" height="15" fill="rgb(222,134,10)" fg:x="3402" fg:w="6"/><text x="12.5967%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (6 samples, 0.02%)</title><rect x="12.3467%" y="389" width="0.0218%" height="15" fill="rgb(230,226,20)" fg:x="3402" fg:w="6"/><text x="12.5967%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.39%)</title><rect x="12.0091%" y="469" width="0.3883%" height="15" fill="rgb(251,111,25)" fg:x="3309" fg:w="107"/><text x="12.2591%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.36%)</title><rect x="12.0382%" y="453" width="0.3593%" height="15" fill="rgb(224,40,46)" fg:x="3317" fg:w="99"/><text x="12.2882%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.22%)</title><rect x="12.1761%" y="437" width="0.2214%" height="15" fill="rgb(236,108,47)" fg:x="3355" fg:w="61"/><text x="12.4261%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (8 samples, 0.03%)</title><rect x="12.3684%" y="421" width="0.0290%" height="15" fill="rgb(234,93,0)" fg:x="3408" fg:w="8"/><text x="12.6184%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="12.4156%" y="421" width="0.0145%" height="15" fill="rgb(224,213,32)" fg:x="3421" fg:w="4"/><text x="12.6656%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (4 samples, 0.01%)</title><rect x="12.4301%" y="405" width="0.0145%" height="15" fill="rgb(251,11,48)" fg:x="3425" fg:w="4"/><text x="12.6801%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (14 samples, 0.05%)</title><rect x="12.3975%" y="469" width="0.0508%" height="15" fill="rgb(236,173,5)" fg:x="3416" fg:w="14"/><text x="12.6475%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (14 samples, 0.05%)</title><rect x="12.3975%" y="453" width="0.0508%" height="15" fill="rgb(230,95,12)" fg:x="3416" fg:w="14"/><text x="12.6475%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.05%)</title><rect x="12.4011%" y="437" width="0.0472%" height="15" fill="rgb(232,209,1)" fg:x="3417" fg:w="13"/><text x="12.6511%" y="447.50"></text></g><g><title>core::ptr::null_mut (5 samples, 0.02%)</title><rect x="12.4301%" y="421" width="0.0181%" height="15" fill="rgb(232,6,1)" fg:x="3425" fg:w="5"/><text x="12.6801%" y="431.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.04%)</title><rect x="12.5644%" y="389" width="0.0363%" height="15" fill="rgb(210,224,50)" fg:x="3462" fg:w="10"/><text x="12.8144%" y="399.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="12.5717%" y="373" width="0.0290%" height="15" fill="rgb(228,127,35)" fg:x="3464" fg:w="8"/><text x="12.8217%" y="383.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="12.5789%" y="357" width="0.0218%" height="15" fill="rgb(245,102,45)" fg:x="3466" fg:w="6"/><text x="12.8289%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (11 samples, 0.04%)</title><rect x="12.6007%" y="389" width="0.0399%" height="15" fill="rgb(214,1,49)" fg:x="3472" fg:w="11"/><text x="12.8507%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.03%)</title><rect x="12.6080%" y="373" width="0.0327%" height="15" fill="rgb(226,163,40)" fg:x="3474" fg:w="9"/><text x="12.8580%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="12.6189%" y="357" width="0.0218%" height="15" fill="rgb(239,212,28)" fg:x="3477" fg:w="6"/><text x="12.8689%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="12.6261%" y="341" width="0.0145%" height="15" fill="rgb(220,20,13)" fg:x="3479" fg:w="4"/><text x="12.8761%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.12%)</title><rect x="12.5318%" y="421" width="0.1198%" height="15" fill="rgb(210,164,35)" fg:x="3453" fg:w="33"/><text x="12.7818%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.11%)</title><rect x="12.5426%" y="405" width="0.1089%" height="15" fill="rgb(248,109,41)" fg:x="3456" fg:w="30"/><text x="12.7926%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="12.6406%" y="389" width="0.0109%" height="15" fill="rgb(238,23,50)" fg:x="3483" fg:w="3"/><text x="12.8906%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.01%)</title><rect x="12.6515%" y="421" width="0.0145%" height="15" fill="rgb(211,48,49)" fg:x="3486" fg:w="4"/><text x="12.9015%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.01%)</title><rect x="12.6515%" y="405" width="0.0145%" height="15" fill="rgb(223,36,21)" fg:x="3486" fg:w="4"/><text x="12.9015%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.24%)</title><rect x="12.4483%" y="469" width="0.2432%" height="15" fill="rgb(207,123,46)" fg:x="3430" fg:w="67"/><text x="12.6983%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 0.24%)</title><rect x="12.4483%" y="453" width="0.2432%" height="15" fill="rgb(240,218,32)" fg:x="3430" fg:w="67"/><text x="12.6983%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (67 samples, 0.24%)</title><rect x="12.4483%" y="437" width="0.2432%" height="15" fill="rgb(252,5,43)" fg:x="3430" fg:w="67"/><text x="12.6983%" y="447.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (5 samples, 0.02%)</title><rect x="12.6733%" y="421" width="0.0181%" height="15" fill="rgb(252,84,19)" fg:x="3492" fg:w="5"/><text x="12.9233%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (5 samples, 0.02%)</title><rect x="12.6914%" y="469" width="0.0181%" height="15" fill="rgb(243,152,39)" fg:x="3497" fg:w="5"/><text x="12.9414%" y="479.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (5 samples, 0.02%)</title><rect x="12.6914%" y="453" width="0.0181%" height="15" fill="rgb(234,160,15)" fg:x="3497" fg:w="5"/><text x="12.9414%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::take (21 samples, 0.08%)</title><rect x="12.7096%" y="469" width="0.0762%" height="15" fill="rgb(237,34,20)" fg:x="3502" fg:w="21"/><text x="12.9596%" y="479.50"></text></g><g><title>core::iter::adapters::take::Take&lt;I&gt;::new (4 samples, 0.01%)</title><rect x="12.7713%" y="453" width="0.0145%" height="15" fill="rgb(229,97,13)" fg:x="3519" fg:w="4"/><text x="13.0213%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (20 samples, 0.07%)</title><rect x="12.7858%" y="469" width="0.0726%" height="15" fill="rgb(234,71,50)" fg:x="3523" fg:w="20"/><text x="13.0358%" y="479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (14 samples, 0.05%)</title><rect x="12.8076%" y="453" width="0.0508%" height="15" fill="rgb(253,155,4)" fg:x="3529" fg:w="14"/><text x="13.0576%" y="463.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="12.8366%" y="437" width="0.0218%" height="15" fill="rgb(222,185,37)" fg:x="3537" fg:w="6"/><text x="13.0866%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="12.8911%" y="421" width="0.0109%" height="15" fill="rgb(251,177,13)" fg:x="3552" fg:w="3"/><text x="13.1411%" y="431.50"></text></g><g><title>core::ptr::invalid (3 samples, 0.01%)</title><rect x="12.9019%" y="405" width="0.0109%" height="15" fill="rgb(250,179,40)" fg:x="3555" fg:w="3"/><text x="13.1519%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (17 samples, 0.06%)</title><rect x="12.8584%" y="469" width="0.0617%" height="15" fill="rgb(242,44,2)" fg:x="3543" fg:w="17"/><text x="13.1084%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (17 samples, 0.06%)</title><rect x="12.8584%" y="453" width="0.0617%" height="15" fill="rgb(216,177,13)" fg:x="3543" fg:w="17"/><text x="13.1084%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.04%)</title><rect x="12.8802%" y="437" width="0.0399%" height="15" fill="rgb(216,106,43)" fg:x="3549" fg:w="11"/><text x="13.1302%" y="447.50"></text></g><g><title>core::ptr::null (5 samples, 0.02%)</title><rect x="12.9019%" y="421" width="0.0181%" height="15" fill="rgb(216,183,2)" fg:x="3555" fg:w="5"/><text x="13.1519%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (370 samples, 1.34%)</title><rect x="11.6208%" y="517" width="1.3428%" height="15" fill="rgb(249,75,3)" fg:x="3202" fg:w="370"/><text x="11.8708%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (369 samples, 1.34%)</title><rect x="11.6244%" y="501" width="1.3392%" height="15" fill="rgb(219,67,39)" fg:x="3203" fg:w="369"/><text x="11.8744%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (369 samples, 1.34%)</title><rect x="11.6244%" y="485" width="1.3392%" height="15" fill="rgb(253,228,2)" fg:x="3203" fg:w="369"/><text x="11.8744%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (12 samples, 0.04%)</title><rect x="12.9201%" y="469" width="0.0436%" height="15" fill="rgb(235,138,27)" fg:x="3560" fg:w="12"/><text x="13.1701%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (391 samples, 1.42%)</title><rect x="11.5482%" y="533" width="1.4190%" height="15" fill="rgb(236,97,51)" fg:x="3182" fg:w="391"/><text x="11.7982%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="12.9818%" y="501" width="0.0181%" height="15" fill="rgb(240,80,30)" fg:x="3577" fg:w="5"/><text x="13.2318%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="12.9854%" y="485" width="0.0145%" height="15" fill="rgb(230,178,19)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="12.9854%" y="469" width="0.0145%" height="15" fill="rgb(210,190,27)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="12.9854%" y="453" width="0.0145%" height="15" fill="rgb(222,107,31)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="12.9854%" y="437" width="0.0145%" height="15" fill="rgb(216,127,34)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="12.9854%" y="421" width="0.0145%" height="15" fill="rgb(234,116,52)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="12.9854%" y="405" width="0.0145%" height="15" fill="rgb(222,124,15)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="12.9854%" y="389" width="0.0145%" height="15" fill="rgb(231,179,28)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="12.9854%" y="373" width="0.0145%" height="15" fill="rgb(226,93,45)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="12.9854%" y="357" width="0.0145%" height="15" fill="rgb(215,8,51)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="367.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="12.9854%" y="341" width="0.0145%" height="15" fill="rgb(223,106,5)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="351.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="12.9854%" y="325" width="0.0145%" height="15" fill="rgb(250,191,5)" fg:x="3578" fg:w="4"/><text x="13.2354%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="13.0761%" y="389" width="0.0181%" height="15" fill="rgb(242,132,44)" fg:x="3603" fg:w="5"/><text x="13.3261%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="13.0761%" y="373" width="0.0181%" height="15" fill="rgb(251,152,29)" fg:x="3603" fg:w="5"/><text x="13.3261%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.04%)</title><rect x="13.0616%" y="421" width="0.0363%" height="15" fill="rgb(218,179,5)" fg:x="3599" fg:w="10"/><text x="13.3116%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.04%)</title><rect x="13.0616%" y="405" width="0.0363%" height="15" fill="rgb(227,67,19)" fg:x="3599" fg:w="10"/><text x="13.3116%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.02%)</title><rect x="13.1233%" y="389" width="0.0181%" height="15" fill="rgb(233,119,31)" fg:x="3616" fg:w="5"/><text x="13.3733%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.02%)</title><rect x="13.1923%" y="341" width="0.0218%" height="15" fill="rgb(241,120,22)" fg:x="3635" fg:w="6"/><text x="13.4423%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.02%)</title><rect x="13.1923%" y="325" width="0.0218%" height="15" fill="rgb(224,102,30)" fg:x="3635" fg:w="6"/><text x="13.4423%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (3 samples, 0.01%)</title><rect x="13.2032%" y="309" width="0.0109%" height="15" fill="rgb(210,164,37)" fg:x="3638" fg:w="3"/><text x="13.4532%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.05%)</title><rect x="13.1632%" y="357" width="0.0544%" height="15" fill="rgb(226,191,16)" fg:x="3627" fg:w="15"/><text x="13.4132%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (3 samples, 0.01%)</title><rect x="13.2177%" y="357" width="0.0109%" height="15" fill="rgb(214,40,45)" fg:x="3642" fg:w="3"/><text x="13.4677%" y="367.50"></text></g><g><title>alloc::alloc::realloc (23 samples, 0.08%)</title><rect x="13.2395%" y="309" width="0.0835%" height="15" fill="rgb(244,29,26)" fg:x="3648" fg:w="23"/><text x="13.4895%" y="319.50"></text></g><g><title>realloc (22 samples, 0.08%)</title><rect x="13.2431%" y="293" width="0.0798%" height="15" fill="rgb(216,16,5)" fg:x="3649" fg:w="22"/><text x="13.4931%" y="303.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="13.2540%" y="277" width="0.0690%" height="15" fill="rgb(249,76,35)" fg:x="3652" fg:w="19"/><text x="13.5040%" y="287.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="13.2721%" y="261" width="0.0508%" height="15" fill="rgb(207,11,44)" fg:x="3657" fg:w="14"/><text x="13.5221%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="13.3266%" y="309" width="0.0109%" height="15" fill="rgb(228,190,49)" fg:x="3672" fg:w="3"/><text x="13.5766%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.12%)</title><rect x="13.2286%" y="341" width="0.1198%" height="15" fill="rgb(214,173,12)" fg:x="3645" fg:w="33"/><text x="13.4786%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.12%)</title><rect x="13.2322%" y="325" width="0.1161%" height="15" fill="rgb(218,26,35)" fg:x="3646" fg:w="32"/><text x="13.4822%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="13.3374%" y="309" width="0.0109%" height="15" fill="rgb(220,200,19)" fg:x="3675" fg:w="3"/><text x="13.5874%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (40 samples, 0.15%)</title><rect x="13.2286%" y="357" width="0.1452%" height="15" fill="rgb(239,95,49)" fg:x="3645" fg:w="40"/><text x="13.4786%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.01%)</title><rect x="13.3592%" y="341" width="0.0145%" height="15" fill="rgb(235,85,53)" fg:x="3681" fg:w="4"/><text x="13.6092%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.04%)</title><rect x="13.3737%" y="357" width="0.0399%" height="15" fill="rgb(233,133,31)" fg:x="3685" fg:w="11"/><text x="13.6237%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (11 samples, 0.04%)</title><rect x="13.3737%" y="341" width="0.0399%" height="15" fill="rgb(218,25,20)" fg:x="3685" fg:w="11"/><text x="13.6237%" y="351.50"></text></g><g><title>core::cmp::max (9 samples, 0.03%)</title><rect x="13.4137%" y="357" width="0.0327%" height="15" fill="rgb(252,210,38)" fg:x="3696" fg:w="9"/><text x="13.6637%" y="367.50"></text></g><g><title>core::cmp::Ord::max (9 samples, 0.03%)</title><rect x="13.4137%" y="341" width="0.0327%" height="15" fill="rgb(242,134,21)" fg:x="3696" fg:w="9"/><text x="13.6637%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.01%)</title><rect x="13.4354%" y="325" width="0.0109%" height="15" fill="rgb(213,28,48)" fg:x="3702" fg:w="3"/><text x="13.6854%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (82 samples, 0.30%)</title><rect x="13.1524%" y="373" width="0.2976%" height="15" fill="rgb(250,196,2)" fg:x="3624" fg:w="82"/><text x="13.4024%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (112 samples, 0.41%)</title><rect x="13.0544%" y="437" width="0.4065%" height="15" fill="rgb(227,5,17)" fg:x="3597" fg:w="112"/><text x="13.3044%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (100 samples, 0.36%)</title><rect x="13.0979%" y="421" width="0.3629%" height="15" fill="rgb(221,226,24)" fg:x="3609" fg:w="100"/><text x="13.3479%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (98 samples, 0.36%)</title><rect x="13.1052%" y="405" width="0.3557%" height="15" fill="rgb(211,5,48)" fg:x="3611" fg:w="98"/><text x="13.3552%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (88 samples, 0.32%)</title><rect x="13.1415%" y="389" width="0.3194%" height="15" fill="rgb(219,150,6)" fg:x="3621" fg:w="88"/><text x="13.3915%" y="399.50"></text></g><g><title>alloc::raw_vec::handle_reserve (3 samples, 0.01%)</title><rect x="13.4500%" y="373" width="0.0109%" height="15" fill="rgb(251,46,16)" fg:x="3706" fg:w="3"/><text x="13.7000%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.01%)</title><rect x="13.4500%" y="357" width="0.0109%" height="15" fill="rgb(220,204,40)" fg:x="3706" fg:w="3"/><text x="13.7000%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (120 samples, 0.44%)</title><rect x="13.0435%" y="453" width="0.4355%" height="15" fill="rgb(211,85,2)" fg:x="3594" fg:w="120"/><text x="13.2935%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (5 samples, 0.02%)</title><rect x="13.4608%" y="437" width="0.0181%" height="15" fill="rgb(229,17,7)" fg:x="3709" fg:w="5"/><text x="13.7108%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (5 samples, 0.02%)</title><rect x="13.4608%" y="421" width="0.0181%" height="15" fill="rgb(239,72,28)" fg:x="3709" fg:w="5"/><text x="13.7108%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.01%)</title><rect x="13.4681%" y="405" width="0.0109%" height="15" fill="rgb(230,47,54)" fg:x="3711" fg:w="3"/><text x="13.7181%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="13.4681%" y="389" width="0.0109%" height="15" fill="rgb(214,50,8)" fg:x="3711" fg:w="3"/><text x="13.7181%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.01%)</title><rect x="13.4681%" y="373" width="0.0109%" height="15" fill="rgb(216,198,43)" fg:x="3711" fg:w="3"/><text x="13.7181%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="13.5080%" y="405" width="0.0145%" height="15" fill="rgb(234,20,35)" fg:x="3722" fg:w="4"/><text x="13.7580%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (137 samples, 0.50%)</title><rect x="13.0326%" y="469" width="0.4972%" height="15" fill="rgb(254,45,19)" fg:x="3591" fg:w="137"/><text x="13.2826%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (14 samples, 0.05%)</title><rect x="13.4790%" y="453" width="0.0508%" height="15" fill="rgb(219,14,44)" fg:x="3714" fg:w="14"/><text x="13.7290%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="13.4862%" y="437" width="0.0436%" height="15" fill="rgb(217,220,26)" fg:x="3716" fg:w="12"/><text x="13.7362%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.03%)</title><rect x="13.5008%" y="421" width="0.0290%" height="15" fill="rgb(213,158,28)" fg:x="3720" fg:w="8"/><text x="13.7508%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (147 samples, 0.53%)</title><rect x="12.9999%" y="501" width="0.5335%" height="15" fill="rgb(252,51,52)" fg:x="3582" fg:w="147"/><text x="13.2499%" y="511.50"></text></g><g><title>alloc::string::String::push_str (141 samples, 0.51%)</title><rect x="13.0217%" y="485" width="0.5117%" height="15" fill="rgb(246,89,16)" fg:x="3588" fg:w="141"/><text x="13.2717%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="13.5588%" y="437" width="0.0254%" height="15" fill="rgb(216,158,49)" fg:x="3736" fg:w="7"/><text x="13.8088%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="13.5625%" y="421" width="0.0218%" height="15" fill="rgb(236,107,19)" fg:x="3737" fg:w="6"/><text x="13.8125%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (16 samples, 0.06%)</title><rect x="13.5334%" y="501" width="0.0581%" height="15" fill="rgb(228,185,30)" fg:x="3729" fg:w="16"/><text x="13.7834%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.05%)</title><rect x="13.5371%" y="485" width="0.0544%" height="15" fill="rgb(246,134,8)" fg:x="3730" fg:w="15"/><text x="13.7871%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.05%)</title><rect x="13.5407%" y="469" width="0.0508%" height="15" fill="rgb(214,143,50)" fg:x="3731" fg:w="14"/><text x="13.7907%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.04%)</title><rect x="13.5479%" y="453" width="0.0436%" height="15" fill="rgb(228,75,8)" fg:x="3733" fg:w="12"/><text x="13.7979%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="13.5988%" y="421" width="0.0254%" height="15" fill="rgb(207,175,4)" fg:x="3747" fg:w="7"/><text x="13.8488%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="13.6024%" y="405" width="0.0218%" height="15" fill="rgb(205,108,24)" fg:x="3748" fg:w="6"/><text x="13.8524%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="13.5915%" y="469" width="0.0363%" height="15" fill="rgb(244,120,49)" fg:x="3745" fg:w="10"/><text x="13.8415%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.03%)</title><rect x="13.5951%" y="453" width="0.0327%" height="15" fill="rgb(223,47,38)" fg:x="3746" fg:w="9"/><text x="13.8451%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="13.5988%" y="437" width="0.0290%" height="15" fill="rgb(229,179,11)" fg:x="3747" fg:w="8"/><text x="13.8488%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="13.6822%" y="421" width="0.0109%" height="15" fill="rgb(231,122,1)" fg:x="3770" fg:w="3"/><text x="13.9322%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (202 samples, 0.73%)</title><rect x="12.9673%" y="533" width="0.7331%" height="15" fill="rgb(245,119,9)" fg:x="3573" fg:w="202"/><text x="13.2173%" y="543.50"></text></g><g><title>unkr::core::process_new_str::{{closure}} (200 samples, 0.73%)</title><rect x="12.9745%" y="517" width="0.7258%" height="15" fill="rgb(241,163,25)" fg:x="3575" fg:w="200"/><text x="13.2245%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (30 samples, 0.11%)</title><rect x="13.5915%" y="501" width="0.1089%" height="15" fill="rgb(217,214,3)" fg:x="3745" fg:w="30"/><text x="13.8415%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (30 samples, 0.11%)</title><rect x="13.5915%" y="485" width="0.1089%" height="15" fill="rgb(240,86,28)" fg:x="3745" fg:w="30"/><text x="13.8415%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.07%)</title><rect x="13.6278%" y="469" width="0.0726%" height="15" fill="rgb(215,47,9)" fg:x="3755" fg:w="20"/><text x="13.8778%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.07%)</title><rect x="13.6314%" y="453" width="0.0690%" height="15" fill="rgb(252,25,45)" fg:x="3756" fg:w="19"/><text x="13.8814%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.07%)</title><rect x="13.6350%" y="437" width="0.0653%" height="15" fill="rgb(251,164,9)" fg:x="3757" fg:w="18"/><text x="13.8850%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="13.7330%" y="437" width="0.0181%" height="15" fill="rgb(233,194,0)" fg:x="3784" fg:w="5"/><text x="13.9830%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="13.7367%" y="421" width="0.0145%" height="15" fill="rgb(249,111,24)" fg:x="3785" fg:w="4"/><text x="13.9867%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="13.7149%" y="485" width="0.0399%" height="15" fill="rgb(250,223,3)" fg:x="3779" fg:w="11"/><text x="13.9649%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.03%)</title><rect x="13.7221%" y="469" width="0.0327%" height="15" fill="rgb(236,178,37)" fg:x="3781" fg:w="9"/><text x="13.9721%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.03%)</title><rect x="13.7294%" y="453" width="0.0254%" height="15" fill="rgb(241,158,50)" fg:x="3783" fg:w="7"/><text x="13.9794%" y="463.50"></text></g><g><title>cfree (7 samples, 0.03%)</title><rect x="13.7584%" y="421" width="0.0254%" height="15" fill="rgb(213,121,41)" fg:x="3791" fg:w="7"/><text x="14.0084%" y="431.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="13.7621%" y="405" width="0.0218%" height="15" fill="rgb(240,92,3)" fg:x="3792" fg:w="6"/><text x="14.0121%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="13.7584%" y="453" width="0.0290%" height="15" fill="rgb(205,123,3)" fg:x="3791" fg:w="8"/><text x="14.0084%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="13.7584%" y="437" width="0.0290%" height="15" fill="rgb(205,97,47)" fg:x="3791" fg:w="8"/><text x="14.0084%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.02%)</title><rect x="13.8274%" y="437" width="0.0218%" height="15" fill="rgb(247,152,14)" fg:x="3810" fg:w="6"/><text x="14.0774%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="13.8383%" y="421" width="0.0109%" height="15" fill="rgb(248,195,53)" fg:x="3813" fg:w="3"/><text x="14.0883%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.03%)</title><rect x="13.8492%" y="437" width="0.0327%" height="15" fill="rgb(226,201,16)" fg:x="3816" fg:w="9"/><text x="14.0992%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8 samples, 0.03%)</title><rect x="13.8528%" y="421" width="0.0290%" height="15" fill="rgb(205,98,0)" fg:x="3817" fg:w="8"/><text x="14.1028%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (52 samples, 0.19%)</title><rect x="13.7004%" y="533" width="0.1887%" height="15" fill="rgb(214,191,48)" fg:x="3775" fg:w="52"/><text x="13.9504%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (51 samples, 0.19%)</title><rect x="13.7040%" y="517" width="0.1851%" height="15" fill="rgb(237,112,39)" fg:x="3776" fg:w="51"/><text x="13.9540%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (50 samples, 0.18%)</title><rect x="13.7076%" y="501" width="0.1815%" height="15" fill="rgb(247,203,27)" fg:x="3777" fg:w="50"/><text x="13.9576%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (37 samples, 0.13%)</title><rect x="13.7548%" y="485" width="0.1343%" height="15" fill="rgb(235,124,28)" fg:x="3790" fg:w="37"/><text x="14.0048%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.13%)</title><rect x="13.7548%" y="469" width="0.1343%" height="15" fill="rgb(208,207,46)" fg:x="3790" fg:w="37"/><text x="14.0048%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (28 samples, 0.10%)</title><rect x="13.7875%" y="453" width="0.1016%" height="15" fill="rgb(234,176,4)" fg:x="3799" fg:w="28"/><text x="14.0375%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="13.8891%" y="501" width="0.0109%" height="15" fill="rgb(230,133,28)" fg:x="3827" fg:w="3"/><text x="14.1391%" y="511.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="13.9181%" y="437" width="0.0218%" height="15" fill="rgb(211,137,40)" fg:x="3835" fg:w="6"/><text x="14.1681%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="13.9254%" y="421" width="0.0145%" height="15" fill="rgb(254,35,13)" fg:x="3837" fg:w="4"/><text x="14.1754%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="13.9145%" y="469" width="0.0290%" height="15" fill="rgb(225,49,51)" fg:x="3834" fg:w="8"/><text x="14.1645%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="13.9145%" y="453" width="0.0290%" height="15" fill="rgb(251,10,15)" fg:x="3834" fg:w="8"/><text x="14.1645%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.01%)</title><rect x="13.9689%" y="453" width="0.0145%" height="15" fill="rgb(228,207,15)" fg:x="3849" fg:w="4"/><text x="14.2189%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.03%)</title><rect x="13.9835%" y="453" width="0.0290%" height="15" fill="rgb(241,99,19)" fg:x="3853" fg:w="8"/><text x="14.2335%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8 samples, 0.03%)</title><rect x="13.9835%" y="437" width="0.0290%" height="15" fill="rgb(207,104,49)" fg:x="3853" fg:w="8"/><text x="14.2335%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (3 samples, 0.01%)</title><rect x="14.0016%" y="421" width="0.0109%" height="15" fill="rgb(234,99,18)" fg:x="3858" fg:w="3"/><text x="14.2516%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (35 samples, 0.13%)</title><rect x="13.8891%" y="533" width="0.1270%" height="15" fill="rgb(213,191,49)" fg:x="3827" fg:w="35"/><text x="14.1391%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.13%)</title><rect x="13.8891%" y="517" width="0.1270%" height="15" fill="rgb(210,226,19)" fg:x="3827" fg:w="35"/><text x="14.1391%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (32 samples, 0.12%)</title><rect x="13.9000%" y="501" width="0.1161%" height="15" fill="rgb(229,97,18)" fg:x="3830" fg:w="32"/><text x="14.1500%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.11%)</title><rect x="13.9036%" y="485" width="0.1125%" height="15" fill="rgb(211,167,15)" fg:x="3831" fg:w="31"/><text x="14.1536%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.07%)</title><rect x="13.9435%" y="469" width="0.0726%" height="15" fill="rgb(210,169,34)" fg:x="3842" fg:w="20"/><text x="14.1935%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;alloc::collections::btree::set::BTreeSet&lt;alloc::string::String&gt;&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="14.0161%" y="533" width="0.0290%" height="15" fill="rgb(241,121,31)" fg:x="3862" fg:w="8"/><text x="14.2661%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="14.0161%" y="517" width="0.0290%" height="15" fill="rgb(232,40,11)" fg:x="3862" fg:w="8"/><text x="14.2661%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.03%)</title><rect x="14.0161%" y="501" width="0.0290%" height="15" fill="rgb(205,86,26)" fg:x="3862" fg:w="8"/><text x="14.2661%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.03%)</title><rect x="14.0161%" y="485" width="0.0290%" height="15" fill="rgb(231,126,28)" fg:x="3862" fg:w="8"/><text x="14.2661%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.04%)</title><rect x="14.0524%" y="501" width="0.0399%" height="15" fill="rgb(219,221,18)" fg:x="3872" fg:w="11"/><text x="14.3024%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.04%)</title><rect x="14.0524%" y="485" width="0.0399%" height="15" fill="rgb(211,40,0)" fg:x="3872" fg:w="11"/><text x="14.3024%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="14.0669%" y="469" width="0.0254%" height="15" fill="rgb(239,85,43)" fg:x="3876" fg:w="7"/><text x="14.3169%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="14.0706%" y="453" width="0.0218%" height="15" fill="rgb(231,55,21)" fg:x="3877" fg:w="6"/><text x="14.3206%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="14.2121%" y="421" width="0.0145%" height="15" fill="rgb(225,184,43)" fg:x="3916" fg:w="4"/><text x="14.4621%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="14.2593%" y="405" width="0.0508%" height="15" fill="rgb(251,158,41)" fg:x="3929" fg:w="14"/><text x="14.5093%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.03%)</title><rect x="14.2774%" y="389" width="0.0327%" height="15" fill="rgb(234,159,37)" fg:x="3934" fg:w="9"/><text x="14.5274%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (5 samples, 0.02%)</title><rect x="14.3101%" y="389" width="0.0181%" height="15" fill="rgb(216,204,22)" fg:x="3943" fg:w="5"/><text x="14.5601%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (38 samples, 0.14%)</title><rect x="14.2085%" y="437" width="0.1379%" height="15" fill="rgb(214,17,3)" fg:x="3915" fg:w="38"/><text x="14.4585%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (33 samples, 0.12%)</title><rect x="14.2266%" y="421" width="0.1198%" height="15" fill="rgb(212,111,17)" fg:x="3920" fg:w="33"/><text x="14.4766%" y="431.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.04%)</title><rect x="14.3101%" y="405" width="0.0363%" height="15" fill="rgb(221,157,24)" fg:x="3943" fg:w="10"/><text x="14.5601%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.02%)</title><rect x="14.3282%" y="389" width="0.0181%" height="15" fill="rgb(252,16,13)" fg:x="3948" fg:w="5"/><text x="14.5782%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="14.3464%" y="421" width="0.0109%" height="15" fill="rgb(221,62,2)" fg:x="3953" fg:w="3"/><text x="14.5964%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.17%)</title><rect x="14.1976%" y="453" width="0.1669%" height="15" fill="rgb(247,87,22)" fg:x="3912" fg:w="46"/><text x="14.4476%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.02%)</title><rect x="14.3464%" y="437" width="0.0181%" height="15" fill="rgb(215,73,9)" fg:x="3953" fg:w="5"/><text x="14.5964%" y="447.50"></text></g><g><title>cfree (44 samples, 0.16%)</title><rect x="14.4371%" y="389" width="0.1597%" height="15" fill="rgb(207,175,33)" fg:x="3978" fg:w="44"/><text x="14.6871%" y="399.50"></text></g><g><title>[libc.so.6] (32 samples, 0.12%)</title><rect x="14.4807%" y="373" width="0.1161%" height="15" fill="rgb(243,129,54)" fg:x="3990" fg:w="32"/><text x="14.7307%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.19%)</title><rect x="14.4153%" y="421" width="0.1851%" height="15" fill="rgb(227,119,45)" fg:x="3972" fg:w="51"/><text x="14.6653%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (45 samples, 0.16%)</title><rect x="14.4371%" y="405" width="0.1633%" height="15" fill="rgb(205,109,36)" fg:x="3978" fg:w="45"/><text x="14.6871%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 0.15%)</title><rect x="14.6839%" y="405" width="0.1488%" height="15" fill="rgb(205,6,39)" fg:x="4046" fg:w="41"/><text x="14.9339%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (22 samples, 0.08%)</title><rect x="14.7528%" y="389" width="0.0798%" height="15" fill="rgb(221,32,16)" fg:x="4065" fg:w="22"/><text x="15.0028%" y="399.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (7 samples, 0.03%)</title><rect x="14.8073%" y="373" width="0.0254%" height="15" fill="rgb(228,144,50)" fg:x="4080" fg:w="7"/><text x="15.0573%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.03%)</title><rect x="14.8073%" y="357" width="0.0254%" height="15" fill="rgb(229,201,53)" fg:x="4080" fg:w="7"/><text x="15.0573%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (35 samples, 0.13%)</title><rect x="14.8327%" y="405" width="0.1270%" height="15" fill="rgb(249,153,27)" fg:x="4087" fg:w="35"/><text x="15.0827%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (35 samples, 0.13%)</title><rect x="14.8327%" y="389" width="0.1270%" height="15" fill="rgb(227,106,25)" fg:x="4087" fg:w="35"/><text x="15.0827%" y="399.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (5 samples, 0.02%)</title><rect x="14.9416%" y="373" width="0.0181%" height="15" fill="rgb(230,65,29)" fg:x="4117" fg:w="5"/><text x="15.1916%" y="383.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (3 samples, 0.01%)</title><rect x="14.9597%" y="405" width="0.0109%" height="15" fill="rgb(221,57,46)" fg:x="4122" fg:w="3"/><text x="15.2097%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (250 samples, 0.91%)</title><rect x="14.0923%" y="501" width="0.9073%" height="15" fill="rgb(229,161,17)" fg:x="3883" fg:w="250"/><text x="14.3423%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (233 samples, 0.85%)</title><rect x="14.1540%" y="485" width="0.8456%" height="15" fill="rgb(222,213,11)" fg:x="3900" fg:w="233"/><text x="14.4040%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (232 samples, 0.84%)</title><rect x="14.1577%" y="469" width="0.8420%" height="15" fill="rgb(235,35,13)" fg:x="3901" fg:w="232"/><text x="14.4077%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (175 samples, 0.64%)</title><rect x="14.3645%" y="453" width="0.6351%" height="15" fill="rgb(233,158,34)" fg:x="3958" fg:w="175"/><text x="14.6145%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (171 samples, 0.62%)</title><rect x="14.3790%" y="437" width="0.6206%" height="15" fill="rgb(215,151,48)" fg:x="3962" fg:w="171"/><text x="14.6290%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (110 samples, 0.40%)</title><rect x="14.6004%" y="421" width="0.3992%" height="15" fill="rgb(229,84,14)" fg:x="4023" fg:w="110"/><text x="14.8504%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (8 samples, 0.03%)</title><rect x="14.9706%" y="405" width="0.0290%" height="15" fill="rgb(229,68,14)" fg:x="4125" fg:w="8"/><text x="15.2206%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264 samples, 0.96%)</title><rect x="14.0524%" y="517" width="0.9581%" height="15" fill="rgb(243,106,26)" fg:x="3872" fg:w="264"/><text x="14.3024%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.01%)</title><rect x="14.9996%" y="501" width="0.0109%" height="15" fill="rgb(206,45,38)" fg:x="4133" fg:w="3"/><text x="15.2496%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="14.9996%" y="485" width="0.0109%" height="15" fill="rgb(226,6,15)" fg:x="4133" fg:w="3"/><text x="15.2496%" y="495.50"></text></g><g><title>cfree (10 samples, 0.04%)</title><rect x="15.0287%" y="453" width="0.0363%" height="15" fill="rgb(232,22,54)" fg:x="4141" fg:w="10"/><text x="15.2787%" y="463.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="15.0287%" y="437" width="0.0363%" height="15" fill="rgb(229,222,32)" fg:x="4141" fg:w="10"/><text x="15.2787%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.05%)</title><rect x="15.0178%" y="485" width="0.0508%" height="15" fill="rgb(228,62,29)" fg:x="4138" fg:w="14"/><text x="15.2678%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.04%)</title><rect x="15.0250%" y="469" width="0.0436%" height="15" fill="rgb(251,103,34)" fg:x="4140" fg:w="12"/><text x="15.2750%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.01%)</title><rect x="15.1085%" y="453" width="0.0109%" height="15" fill="rgb(233,12,30)" fg:x="4163" fg:w="3"/><text x="15.3585%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.02%)</title><rect x="15.1013%" y="469" width="0.0218%" height="15" fill="rgb(238,52,0)" fg:x="4161" fg:w="6"/><text x="15.3513%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (3 samples, 0.01%)</title><rect x="15.1230%" y="469" width="0.0109%" height="15" fill="rgb(223,98,5)" fg:x="4167" fg:w="3"/><text x="15.3730%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (302 samples, 1.10%)</title><rect x="14.0451%" y="533" width="1.0960%" height="15" fill="rgb(228,75,37)" fg:x="3870" fg:w="302"/><text x="14.2951%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (36 samples, 0.13%)</title><rect x="15.0105%" y="517" width="0.1307%" height="15" fill="rgb(205,115,49)" fg:x="4136" fg:w="36"/><text x="15.2605%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.13%)</title><rect x="15.0105%" y="501" width="0.1307%" height="15" fill="rgb(250,154,43)" fg:x="4136" fg:w="36"/><text x="15.2605%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.07%)</title><rect x="15.0686%" y="485" width="0.0726%" height="15" fill="rgb(226,43,29)" fg:x="4152" fg:w="20"/><text x="15.3186%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="15.1775%" y="453" width="0.0290%" height="15" fill="rgb(249,228,39)" fg:x="4182" fg:w="8"/><text x="15.4275%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="15.1811%" y="437" width="0.0254%" height="15" fill="rgb(216,79,43)" fg:x="4183" fg:w="7"/><text x="15.4311%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.05%)</title><rect x="15.1593%" y="485" width="0.0508%" height="15" fill="rgb(228,95,12)" fg:x="4177" fg:w="14"/><text x="15.4093%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.05%)</title><rect x="15.1630%" y="469" width="0.0472%" height="15" fill="rgb(249,221,15)" fg:x="4178" fg:w="13"/><text x="15.4130%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.06%)</title><rect x="15.1593%" y="501" width="0.0617%" height="15" fill="rgb(233,34,13)" fg:x="4177" fg:w="17"/><text x="15.4093%" y="511.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.01%)</title><rect x="15.2101%" y="485" width="0.0109%" height="15" fill="rgb(214,103,39)" fg:x="4191" fg:w="3"/><text x="15.4601%" y="495.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="15.3226%" y="277" width="0.0109%" height="15" fill="rgb(251,126,39)" fg:x="4222" fg:w="3"/><text x="15.5726%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (88 samples, 0.32%)</title><rect x="15.3081%" y="373" width="0.3194%" height="15" fill="rgb(214,216,36)" fg:x="4218" fg:w="88"/><text x="15.5581%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (88 samples, 0.32%)</title><rect x="15.3081%" y="357" width="0.3194%" height="15" fill="rgb(220,221,8)" fg:x="4218" fg:w="88"/><text x="15.5581%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (88 samples, 0.32%)</title><rect x="15.3081%" y="341" width="0.3194%" height="15" fill="rgb(240,216,3)" fg:x="4218" fg:w="88"/><text x="15.5581%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.32%)</title><rect x="15.3118%" y="325" width="0.3157%" height="15" fill="rgb(232,218,17)" fg:x="4219" fg:w="87"/><text x="15.5618%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.32%)</title><rect x="15.3118%" y="309" width="0.3157%" height="15" fill="rgb(229,163,45)" fg:x="4219" fg:w="87"/><text x="15.5618%" y="319.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.32%)</title><rect x="15.3118%" y="293" width="0.3157%" height="15" fill="rgb(231,110,42)" fg:x="4219" fg:w="87"/><text x="15.5618%" y="303.50"></text></g><g><title>malloc (80 samples, 0.29%)</title><rect x="15.3372%" y="277" width="0.2903%" height="15" fill="rgb(208,170,48)" fg:x="4226" fg:w="80"/><text x="15.5872%" y="287.50"></text></g><g><title>[libc.so.6] (39 samples, 0.14%)</title><rect x="15.4860%" y="261" width="0.1415%" height="15" fill="rgb(239,116,25)" fg:x="4267" fg:w="39"/><text x="15.7360%" y="271.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="15.6057%" y="245" width="0.0218%" height="15" fill="rgb(219,200,50)" fg:x="4300" fg:w="6"/><text x="15.8557%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (116 samples, 0.42%)</title><rect x="15.2464%" y="453" width="0.4210%" height="15" fill="rgb(245,200,0)" fg:x="4201" fg:w="116"/><text x="15.4964%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (99 samples, 0.36%)</title><rect x="15.3081%" y="437" width="0.3593%" height="15" fill="rgb(245,119,33)" fg:x="4218" fg:w="99"/><text x="15.5581%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (99 samples, 0.36%)</title><rect x="15.3081%" y="421" width="0.3593%" height="15" fill="rgb(231,125,12)" fg:x="4218" fg:w="99"/><text x="15.5581%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (99 samples, 0.36%)</title><rect x="15.3081%" y="405" width="0.3593%" height="15" fill="rgb(216,96,41)" fg:x="4218" fg:w="99"/><text x="15.5581%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (99 samples, 0.36%)</title><rect x="15.3081%" y="389" width="0.3593%" height="15" fill="rgb(248,43,45)" fg:x="4218" fg:w="99"/><text x="15.5581%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.04%)</title><rect x="15.6275%" y="373" width="0.0399%" height="15" fill="rgb(217,222,7)" fg:x="4306" fg:w="11"/><text x="15.8775%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.04%)</title><rect x="15.6275%" y="357" width="0.0399%" height="15" fill="rgb(233,28,6)" fg:x="4306" fg:w="11"/><text x="15.8775%" y="367.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="15.6420%" y="341" width="0.0254%" height="15" fill="rgb(231,218,15)" fg:x="4310" fg:w="7"/><text x="15.8920%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="15.8053%" y="421" width="0.0181%" height="15" fill="rgb(226,171,48)" fg:x="4355" fg:w="5"/><text x="16.0553%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="15.8670%" y="389" width="0.0363%" height="15" fill="rgb(235,201,9)" fg:x="4372" fg:w="10"/><text x="16.1170%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (18 samples, 0.07%)</title><rect x="15.8561%" y="405" width="0.0653%" height="15" fill="rgb(217,80,15)" fg:x="4369" fg:w="18"/><text x="16.1061%" y="415.50"></text></g><g><title>core::ptr::null (5 samples, 0.02%)</title><rect x="15.9033%" y="389" width="0.0181%" height="15" fill="rgb(219,152,8)" fg:x="4382" fg:w="5"/><text x="16.1533%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.01%)</title><rect x="15.9106%" y="373" width="0.0109%" height="15" fill="rgb(243,107,38)" fg:x="4384" fg:w="3"/><text x="16.1606%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (20 samples, 0.07%)</title><rect x="15.9396%" y="389" width="0.0726%" height="15" fill="rgb(231,17,5)" fg:x="4392" fg:w="20"/><text x="16.1896%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="15.9614%" y="373" width="0.0508%" height="15" fill="rgb(209,25,54)" fg:x="4398" fg:w="14"/><text x="16.2114%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (26 samples, 0.09%)</title><rect x="15.9215%" y="405" width="0.0944%" height="15" fill="rgb(219,0,2)" fg:x="4387" fg:w="26"/><text x="16.1715%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.37%)</title><rect x="15.6674%" y="453" width="0.3738%" height="15" fill="rgb(246,9,5)" fg:x="4317" fg:w="103"/><text x="15.9174%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.36%)</title><rect x="15.6856%" y="437" width="0.3557%" height="15" fill="rgb(226,159,4)" fg:x="4322" fg:w="98"/><text x="15.9356%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.22%)</title><rect x="15.8235%" y="421" width="0.2178%" height="15" fill="rgb(219,175,34)" fg:x="4360" fg:w="60"/><text x="16.0735%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (7 samples, 0.03%)</title><rect x="16.0158%" y="405" width="0.0254%" height="15" fill="rgb(236,10,46)" fg:x="4413" fg:w="7"/><text x="16.2658%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.03%)</title><rect x="16.0594%" y="405" width="0.0327%" height="15" fill="rgb(240,211,16)" fg:x="4425" fg:w="9"/><text x="16.3094%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="16.0811%" y="389" width="0.0109%" height="15" fill="rgb(205,3,43)" fg:x="4431" fg:w="3"/><text x="16.3311%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (20 samples, 0.07%)</title><rect x="16.0412%" y="437" width="0.0726%" height="15" fill="rgb(245,7,22)" fg:x="4420" fg:w="20"/><text x="16.2912%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (19 samples, 0.07%)</title><rect x="16.0449%" y="421" width="0.0690%" height="15" fill="rgb(239,132,32)" fg:x="4421" fg:w="19"/><text x="16.2949%" y="431.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.02%)</title><rect x="16.0920%" y="405" width="0.0218%" height="15" fill="rgb(228,202,34)" fg:x="4434" fg:w="6"/><text x="16.3420%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="16.0993%" y="389" width="0.0145%" height="15" fill="rgb(254,200,22)" fg:x="4436" fg:w="4"/><text x="16.3493%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (23 samples, 0.08%)</title><rect x="16.0412%" y="453" width="0.0835%" height="15" fill="rgb(219,10,39)" fg:x="4420" fg:w="23"/><text x="16.2912%" y="463.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="16.2408%" y="373" width="0.0290%" height="15" fill="rgb(226,210,39)" fg:x="4475" fg:w="8"/><text x="16.4908%" y="383.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="16.2481%" y="357" width="0.0218%" height="15" fill="rgb(208,219,16)" fg:x="4477" fg:w="6"/><text x="16.4981%" y="367.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="16.2517%" y="341" width="0.0181%" height="15" fill="rgb(216,158,51)" fg:x="4478" fg:w="5"/><text x="16.5017%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="16.2699%" y="373" width="0.0363%" height="15" fill="rgb(233,14,44)" fg:x="4483" fg:w="10"/><text x="16.5199%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.02%)</title><rect x="16.2844%" y="357" width="0.0218%" height="15" fill="rgb(237,97,39)" fg:x="4487" fg:w="6"/><text x="16.5344%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="16.2880%" y="341" width="0.0181%" height="15" fill="rgb(218,198,43)" fg:x="4488" fg:w="5"/><text x="16.5380%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="16.2916%" y="325" width="0.0145%" height="15" fill="rgb(231,104,20)" fg:x="4489" fg:w="4"/><text x="16.5416%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.10%)</title><rect x="16.2118%" y="405" width="0.1016%" height="15" fill="rgb(254,36,13)" fg:x="4467" fg:w="28"/><text x="16.4618%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.09%)</title><rect x="16.2227%" y="389" width="0.0907%" height="15" fill="rgb(248,14,50)" fg:x="4470" fg:w="25"/><text x="16.4727%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.03%)</title><rect x="16.3134%" y="405" width="0.0327%" height="15" fill="rgb(217,107,29)" fg:x="4495" fg:w="9"/><text x="16.5634%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (7 samples, 0.03%)</title><rect x="16.3207%" y="389" width="0.0254%" height="15" fill="rgb(251,169,33)" fg:x="4497" fg:w="7"/><text x="16.5707%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (66 samples, 0.24%)</title><rect x="16.1247%" y="453" width="0.2395%" height="15" fill="rgb(217,108,32)" fg:x="4443" fg:w="66"/><text x="16.3747%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (65 samples, 0.24%)</title><rect x="16.1283%" y="437" width="0.2359%" height="15" fill="rgb(219,66,42)" fg:x="4444" fg:w="65"/><text x="16.3783%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.23%)</title><rect x="16.1320%" y="421" width="0.2323%" height="15" fill="rgb(206,180,7)" fg:x="4445" fg:w="64"/><text x="16.3820%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::take (17 samples, 0.06%)</title><rect x="16.3642%" y="453" width="0.0617%" height="15" fill="rgb(208,226,31)" fg:x="4509" fg:w="17"/><text x="16.6142%" y="463.50"></text></g><g><title>core::iter::adapters::take::Take&lt;I&gt;::new (3 samples, 0.01%)</title><rect x="16.4150%" y="437" width="0.0109%" height="15" fill="rgb(218,26,49)" fg:x="4523" fg:w="3"/><text x="16.6650%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.05%)</title><rect x="16.4259%" y="453" width="0.0544%" height="15" fill="rgb(233,197,48)" fg:x="4526" fg:w="15"/><text x="16.6759%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="16.4441%" y="437" width="0.0363%" height="15" fill="rgb(252,181,51)" fg:x="4531" fg:w="10"/><text x="16.6941%" y="447.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (8 samples, 0.03%)</title><rect x="16.4513%" y="421" width="0.0290%" height="15" fill="rgb(253,90,19)" fg:x="4533" fg:w="8"/><text x="16.7013%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="16.4985%" y="405" width="0.0181%" height="15" fill="rgb(215,171,30)" fg:x="4546" fg:w="5"/><text x="16.7485%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.04%)</title><rect x="16.4804%" y="453" width="0.0399%" height="15" fill="rgb(214,222,9)" fg:x="4541" fg:w="11"/><text x="16.7304%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="16.4840%" y="437" width="0.0363%" height="15" fill="rgb(223,3,22)" fg:x="4542" fg:w="10"/><text x="16.7340%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.03%)</title><rect x="16.4876%" y="421" width="0.0327%" height="15" fill="rgb(225,196,46)" fg:x="4543" fg:w="9"/><text x="16.7376%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (366 samples, 1.33%)</title><rect x="15.2210%" y="501" width="1.3283%" height="15" fill="rgb(209,110,37)" fg:x="4194" fg:w="366"/><text x="15.4710%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (366 samples, 1.33%)</title><rect x="15.2210%" y="485" width="1.3283%" height="15" fill="rgb(249,89,12)" fg:x="4194" fg:w="366"/><text x="15.4710%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (366 samples, 1.33%)</title><rect x="15.2210%" y="469" width="1.3283%" height="15" fill="rgb(226,27,33)" fg:x="4194" fg:w="366"/><text x="15.4710%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (8 samples, 0.03%)</title><rect x="16.5203%" y="453" width="0.0290%" height="15" fill="rgb(213,82,22)" fg:x="4552" fg:w="8"/><text x="16.7703%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (386 samples, 1.40%)</title><rect x="15.1557%" y="517" width="1.4009%" height="15" fill="rgb(248,140,0)" fg:x="4176" fg:w="386"/><text x="15.4057%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="16.5784%" y="437" width="0.0109%" height="15" fill="rgb(228,106,3)" fg:x="4568" fg:w="3"/><text x="16.8284%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="16.5784%" y="421" width="0.0109%" height="15" fill="rgb(209,23,37)" fg:x="4568" fg:w="3"/><text x="16.8284%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="16.5711%" y="485" width="0.0218%" height="15" fill="rgb(241,93,50)" fg:x="4566" fg:w="6"/><text x="16.8211%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.02%)</title><rect x="16.5711%" y="469" width="0.0218%" height="15" fill="rgb(253,46,43)" fg:x="4566" fg:w="6"/><text x="16.8211%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="16.5747%" y="453" width="0.0181%" height="15" fill="rgb(226,206,43)" fg:x="4567" fg:w="5"/><text x="16.8247%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="16.6001%" y="453" width="0.0145%" height="15" fill="rgb(217,54,7)" fg:x="4574" fg:w="4"/><text x="16.8501%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="16.6001%" y="437" width="0.0145%" height="15" fill="rgb(223,5,52)" fg:x="4574" fg:w="4"/><text x="16.8501%" y="447.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="16.6038%" y="421" width="0.0109%" height="15" fill="rgb(206,52,46)" fg:x="4575" fg:w="3"/><text x="16.8538%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.01%)</title><rect x="16.6255%" y="437" width="0.0109%" height="15" fill="rgb(253,136,11)" fg:x="4581" fg:w="3"/><text x="16.8755%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="16.6364%" y="437" width="0.0109%" height="15" fill="rgb(208,106,33)" fg:x="4584" fg:w="3"/><text x="16.8864%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.01%)</title><rect x="16.6364%" y="421" width="0.0109%" height="15" fill="rgb(206,54,4)" fg:x="4584" fg:w="3"/><text x="16.8864%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (26 samples, 0.09%)</title><rect x="16.5566%" y="517" width="0.0944%" height="15" fill="rgb(213,3,15)" fg:x="4562" fg:w="26"/><text x="16.8066%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (24 samples, 0.09%)</title><rect x="16.5638%" y="501" width="0.0871%" height="15" fill="rgb(252,211,39)" fg:x="4564" fg:w="24"/><text x="16.8138%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.06%)</title><rect x="16.5929%" y="485" width="0.0581%" height="15" fill="rgb(223,6,36)" fg:x="4572" fg:w="16"/><text x="16.8429%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.06%)</title><rect x="16.5929%" y="469" width="0.0581%" height="15" fill="rgb(252,169,45)" fg:x="4572" fg:w="16"/><text x="16.8429%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (10 samples, 0.04%)</title><rect x="16.6146%" y="453" width="0.0363%" height="15" fill="rgb(212,48,26)" fg:x="4578" fg:w="10"/><text x="16.8646%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="16.6763%" y="453" width="0.0363%" height="15" fill="rgb(251,102,48)" fg:x="4595" fg:w="10"/><text x="16.9263%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="16.6763%" y="437" width="0.0363%" height="15" fill="rgb(243,208,16)" fg:x="4595" fg:w="10"/><text x="16.9263%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (15 samples, 0.05%)</title><rect x="16.6618%" y="485" width="0.0544%" height="15" fill="rgb(219,96,24)" fg:x="4591" fg:w="15"/><text x="16.9118%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.05%)</title><rect x="16.6618%" y="469" width="0.0544%" height="15" fill="rgb(219,33,29)" fg:x="4591" fg:w="15"/><text x="16.9118%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (23 samples, 0.08%)</title><rect x="16.8469%" y="389" width="0.0835%" height="15" fill="rgb(223,176,5)" fg:x="4642" fg:w="23"/><text x="17.0969%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (17 samples, 0.06%)</title><rect x="16.8687%" y="373" width="0.0617%" height="15" fill="rgb(228,140,14)" fg:x="4648" fg:w="17"/><text x="17.1187%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (34 samples, 0.12%)</title><rect x="16.8215%" y="421" width="0.1234%" height="15" fill="rgb(217,179,31)" fg:x="4635" fg:w="34"/><text x="17.0715%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (33 samples, 0.12%)</title><rect x="16.8251%" y="405" width="0.1198%" height="15" fill="rgb(230,9,30)" fg:x="4636" fg:w="33"/><text x="17.0751%" y="415.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.01%)</title><rect x="16.9304%" y="389" width="0.0145%" height="15" fill="rgb(230,136,20)" fg:x="4665" fg:w="4"/><text x="17.1804%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.13%)</title><rect x="16.8179%" y="437" width="0.1307%" height="15" fill="rgb(215,210,22)" fg:x="4634" fg:w="36"/><text x="17.0679%" y="447.50"></text></g><g><title>cfree (44 samples, 0.16%)</title><rect x="17.0393%" y="373" width="0.1597%" height="15" fill="rgb(218,43,5)" fg:x="4695" fg:w="44"/><text x="17.2893%" y="383.50"></text></g><g><title>[libc.so.6] (34 samples, 0.12%)</title><rect x="17.0756%" y="357" width="0.1234%" height="15" fill="rgb(216,11,5)" fg:x="4705" fg:w="34"/><text x="17.3256%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.20%)</title><rect x="17.0066%" y="405" width="0.1996%" height="15" fill="rgb(209,82,29)" fg:x="4686" fg:w="55"/><text x="17.2566%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.17%)</title><rect x="17.0320%" y="389" width="0.1742%" height="15" fill="rgb(244,115,12)" fg:x="4693" fg:w="48"/><text x="17.2820%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (32 samples, 0.12%)</title><rect x="17.3332%" y="389" width="0.1161%" height="15" fill="rgb(222,82,18)" fg:x="4776" fg:w="32"/><text x="17.5832%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (12 samples, 0.04%)</title><rect x="17.4058%" y="373" width="0.0436%" height="15" fill="rgb(249,227,8)" fg:x="4796" fg:w="12"/><text x="17.6558%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.02%)</title><rect x="17.4276%" y="357" width="0.0218%" height="15" fill="rgb(253,141,45)" fg:x="4802" fg:w="6"/><text x="17.6776%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (8 samples, 0.03%)</title><rect x="17.5365%" y="357" width="0.0290%" height="15" fill="rgb(234,184,4)" fg:x="4832" fg:w="8"/><text x="17.7865%" y="367.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (3 samples, 0.01%)</title><rect x="17.5546%" y="341" width="0.0109%" height="15" fill="rgb(218,194,23)" fg:x="4837" fg:w="3"/><text x="17.8046%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (33 samples, 0.12%)</title><rect x="17.4530%" y="373" width="0.1198%" height="15" fill="rgb(235,66,41)" fg:x="4809" fg:w="33"/><text x="17.7030%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (36 samples, 0.13%)</title><rect x="17.4494%" y="389" width="0.1307%" height="15" fill="rgb(245,217,1)" fg:x="4808" fg:w="36"/><text x="17.6994%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (250 samples, 0.91%)</title><rect x="16.7163%" y="485" width="0.9073%" height="15" fill="rgb(229,91,1)" fg:x="4606" fg:w="250"/><text x="16.9663%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (231 samples, 0.84%)</title><rect x="16.7852%" y="469" width="0.8384%" height="15" fill="rgb(207,101,30)" fg:x="4625" fg:w="231"/><text x="17.0352%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (231 samples, 0.84%)</title><rect x="16.7852%" y="453" width="0.8384%" height="15" fill="rgb(223,82,49)" fg:x="4625" fg:w="231"/><text x="17.0352%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (186 samples, 0.68%)</title><rect x="16.9485%" y="437" width="0.6750%" height="15" fill="rgb(218,167,17)" fg:x="4670" fg:w="186"/><text x="17.1985%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (185 samples, 0.67%)</title><rect x="16.9522%" y="421" width="0.6714%" height="15" fill="rgb(208,103,14)" fg:x="4671" fg:w="185"/><text x="17.2022%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (115 samples, 0.42%)</title><rect x="17.2062%" y="405" width="0.4174%" height="15" fill="rgb(238,20,8)" fg:x="4741" fg:w="115"/><text x="17.4562%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (10 samples, 0.04%)</title><rect x="17.5873%" y="389" width="0.0363%" height="15" fill="rgb(218,80,54)" fg:x="4846" fg:w="10"/><text x="17.8373%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="17.6236%" y="469" width="0.0109%" height="15" fill="rgb(240,144,17)" fg:x="4856" fg:w="3"/><text x="17.8736%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (269 samples, 0.98%)</title><rect x="16.6618%" y="501" width="0.9763%" height="15" fill="rgb(245,27,50)" fg:x="4591" fg:w="269"/><text x="16.9118%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.01%)</title><rect x="17.6236%" y="485" width="0.0145%" height="15" fill="rgb(251,51,7)" fg:x="4856" fg:w="4"/><text x="17.8736%" y="495.50"></text></g><g><title>cfree (14 samples, 0.05%)</title><rect x="17.6853%" y="437" width="0.0508%" height="15" fill="rgb(245,217,29)" fg:x="4873" fg:w="14"/><text x="17.9353%" y="447.50"></text></g><g><title>[libc.so.6] (13 samples, 0.05%)</title><rect x="17.6889%" y="421" width="0.0472%" height="15" fill="rgb(221,176,29)" fg:x="4874" fg:w="13"/><text x="17.9389%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.06%)</title><rect x="17.6780%" y="469" width="0.0617%" height="15" fill="rgb(212,180,24)" fg:x="4871" fg:w="17"/><text x="17.9280%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.06%)</title><rect x="17.6780%" y="453" width="0.0617%" height="15" fill="rgb(254,24,2)" fg:x="4871" fg:w="17"/><text x="17.9280%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.01%)</title><rect x="17.7579%" y="453" width="0.0109%" height="15" fill="rgb(230,100,2)" fg:x="4893" fg:w="3"/><text x="18.0079%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.01%)</title><rect x="17.7687%" y="453" width="0.0145%" height="15" fill="rgb(219,142,25)" fg:x="4896" fg:w="4"/><text x="18.0187%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.01%)</title><rect x="17.7724%" y="437" width="0.0109%" height="15" fill="rgb(240,73,43)" fg:x="4897" fg:w="3"/><text x="18.0224%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (320 samples, 1.16%)</title><rect x="16.6509%" y="517" width="1.1614%" height="15" fill="rgb(214,114,15)" fg:x="4588" fg:w="320"/><text x="16.9009%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (48 samples, 0.17%)</title><rect x="17.6381%" y="501" width="0.1742%" height="15" fill="rgb(207,130,4)" fg:x="4860" fg:w="48"/><text x="17.8881%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.16%)</title><rect x="17.6490%" y="485" width="0.1633%" height="15" fill="rgb(221,25,40)" fg:x="4863" fg:w="45"/><text x="17.8990%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.07%)</title><rect x="17.7397%" y="469" width="0.0726%" height="15" fill="rgb(241,184,7)" fg:x="4888" fg:w="20"/><text x="17.9897%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (8 samples, 0.03%)</title><rect x="17.7833%" y="453" width="0.0290%" height="15" fill="rgb(235,159,4)" fg:x="4900" fg:w="8"/><text x="18.0333%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (8 samples, 0.03%)</title><rect x="17.8232%" y="501" width="0.0290%" height="15" fill="rgb(214,87,48)" fg:x="4911" fg:w="8"/><text x="18.0732%" y="511.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.02%)</title><rect x="17.8304%" y="485" width="0.0218%" height="15" fill="rgb(246,198,24)" fg:x="4913" fg:w="6"/><text x="18.0804%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.05%)</title><rect x="17.8704%" y="453" width="0.0472%" height="15" fill="rgb(209,66,40)" fg:x="4924" fg:w="13"/><text x="18.1204%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.04%)</title><rect x="17.8740%" y="437" width="0.0436%" height="15" fill="rgb(233,147,39)" fg:x="4925" fg:w="12"/><text x="18.1240%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.03%)</title><rect x="17.8849%" y="421" width="0.0327%" height="15" fill="rgb(231,145,52)" fg:x="4928" fg:w="9"/><text x="18.1349%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="17.8994%" y="405" width="0.0181%" height="15" fill="rgb(206,20,26)" fg:x="4932" fg:w="5"/><text x="18.1494%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.06%)</title><rect x="17.8631%" y="469" width="0.0617%" height="15" fill="rgb(238,220,4)" fg:x="4922" fg:w="17"/><text x="18.1131%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="17.9321%" y="437" width="0.0145%" height="15" fill="rgb(252,195,42)" fg:x="4941" fg:w="4"/><text x="18.1821%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="17.9357%" y="421" width="0.0109%" height="15" fill="rgb(209,10,6)" fg:x="4942" fg:w="3"/><text x="18.1857%" y="431.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="17.9357%" y="405" width="0.0109%" height="15" fill="rgb(229,3,52)" fg:x="4942" fg:w="3"/><text x="18.1857%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="17.9357%" y="389" width="0.0109%" height="15" fill="rgb(253,49,37)" fg:x="4942" fg:w="3"/><text x="18.1857%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.03%)</title><rect x="17.9611%" y="421" width="0.0327%" height="15" fill="rgb(240,103,49)" fg:x="4949" fg:w="9"/><text x="18.2111%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="17.9829%" y="405" width="0.0109%" height="15" fill="rgb(250,182,30)" fg:x="4955" fg:w="3"/><text x="18.2329%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.02%)</title><rect x="17.9938%" y="421" width="0.0181%" height="15" fill="rgb(248,8,30)" fg:x="4958" fg:w="5"/><text x="18.2438%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (5 samples, 0.02%)</title><rect x="17.9938%" y="405" width="0.0181%" height="15" fill="rgb(237,120,30)" fg:x="4958" fg:w="5"/><text x="18.2438%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (45 samples, 0.16%)</title><rect x="17.8522%" y="501" width="0.1633%" height="15" fill="rgb(221,146,34)" fg:x="4919" fg:w="45"/><text x="18.1022%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (45 samples, 0.16%)</title><rect x="17.8522%" y="485" width="0.1633%" height="15" fill="rgb(242,55,13)" fg:x="4919" fg:w="45"/><text x="18.1022%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (25 samples, 0.09%)</title><rect x="17.9248%" y="469" width="0.0907%" height="15" fill="rgb(242,112,31)" fg:x="4939" fg:w="25"/><text x="18.1748%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.09%)</title><rect x="17.9248%" y="453" width="0.0907%" height="15" fill="rgb(249,192,27)" fg:x="4939" fg:w="25"/><text x="18.1748%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (19 samples, 0.07%)</title><rect x="17.9466%" y="437" width="0.0690%" height="15" fill="rgb(208,204,44)" fg:x="4945" fg:w="19"/><text x="18.1966%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (16 samples, 0.06%)</title><rect x="18.0482%" y="437" width="0.0581%" height="15" fill="rgb(208,93,54)" fg:x="4973" fg:w="16"/><text x="18.2982%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="18.0555%" y="421" width="0.0508%" height="15" fill="rgb(242,1,31)" fg:x="4975" fg:w="14"/><text x="18.3055%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (23 samples, 0.08%)</title><rect x="18.0337%" y="469" width="0.0835%" height="15" fill="rgb(241,83,25)" fg:x="4969" fg:w="23"/><text x="18.2837%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (23 samples, 0.08%)</title><rect x="18.0337%" y="453" width="0.0835%" height="15" fill="rgb(205,169,50)" fg:x="4969" fg:w="23"/><text x="18.2837%" y="463.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.01%)</title><rect x="18.1063%" y="437" width="0.0109%" height="15" fill="rgb(239,186,37)" fg:x="4989" fg:w="3"/><text x="18.3563%" y="447.50"></text></g><g><title>core::ptr::invalid_mut (3 samples, 0.01%)</title><rect x="18.1063%" y="421" width="0.0109%" height="15" fill="rgb(205,221,10)" fg:x="4989" fg:w="3"/><text x="18.3563%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (23 samples, 0.08%)</title><rect x="18.2514%" y="373" width="0.0835%" height="15" fill="rgb(218,196,15)" fg:x="5029" fg:w="23"/><text x="18.5014%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (17 samples, 0.06%)</title><rect x="18.2732%" y="357" width="0.0617%" height="15" fill="rgb(218,196,35)" fg:x="5035" fg:w="17"/><text x="18.5232%" y="367.50"></text></g><g><title>core::ptr::invalid_mut (3 samples, 0.01%)</title><rect x="18.3349%" y="357" width="0.0109%" height="15" fill="rgb(233,63,24)" fg:x="5052" fg:w="3"/><text x="18.5849%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (46 samples, 0.17%)</title><rect x="18.2006%" y="405" width="0.1669%" height="15" fill="rgb(225,8,4)" fg:x="5015" fg:w="46"/><text x="18.4506%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (43 samples, 0.16%)</title><rect x="18.2115%" y="389" width="0.1561%" height="15" fill="rgb(234,105,35)" fg:x="5018" fg:w="43"/><text x="18.4615%" y="399.50"></text></g><g><title>core::ptr::null_mut (9 samples, 0.03%)</title><rect x="18.3349%" y="373" width="0.0327%" height="15" fill="rgb(236,21,32)" fg:x="5052" fg:w="9"/><text x="18.5849%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.02%)</title><rect x="18.3458%" y="357" width="0.0218%" height="15" fill="rgb(228,109,6)" fg:x="5055" fg:w="6"/><text x="18.5958%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.18%)</title><rect x="18.1970%" y="421" width="0.1778%" height="15" fill="rgb(229,215,31)" fg:x="5014" fg:w="49"/><text x="18.4470%" y="431.50"></text></g><g><title>cfree (19 samples, 0.07%)</title><rect x="18.4365%" y="357" width="0.0690%" height="15" fill="rgb(221,52,54)" fg:x="5080" fg:w="19"/><text x="18.6865%" y="367.50"></text></g><g><title>[libc.so.6] (16 samples, 0.06%)</title><rect x="18.4474%" y="341" width="0.0581%" height="15" fill="rgb(252,129,43)" fg:x="5083" fg:w="16"/><text x="18.6974%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.10%)</title><rect x="18.4147%" y="389" width="0.0980%" height="15" fill="rgb(248,183,27)" fg:x="5074" fg:w="27"/><text x="18.6647%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.08%)</title><rect x="18.4329%" y="373" width="0.0798%" height="15" fill="rgb(250,0,22)" fg:x="5079" fg:w="22"/><text x="18.6829%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.09%)</title><rect x="18.6506%" y="373" width="0.0944%" height="15" fill="rgb(213,166,10)" fg:x="5139" fg:w="26"/><text x="18.9006%" y="383.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (14 samples, 0.05%)</title><rect x="18.6942%" y="357" width="0.0508%" height="15" fill="rgb(207,163,36)" fg:x="5151" fg:w="14"/><text x="18.9442%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.01%)</title><rect x="18.7341%" y="341" width="0.0109%" height="15" fill="rgb(208,122,22)" fg:x="5162" fg:w="3"/><text x="18.9841%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (40 samples, 0.15%)</title><rect x="18.7450%" y="373" width="0.1452%" height="15" fill="rgb(207,104,49)" fg:x="5165" fg:w="40"/><text x="18.9950%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (40 samples, 0.15%)</title><rect x="18.7450%" y="357" width="0.1452%" height="15" fill="rgb(248,211,50)" fg:x="5165" fg:w="40"/><text x="18.9950%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (246 samples, 0.89%)</title><rect x="18.0264%" y="485" width="0.8928%" height="15" fill="rgb(217,13,45)" fg:x="4967" fg:w="246"/><text x="18.2764%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (221 samples, 0.80%)</title><rect x="18.1172%" y="469" width="0.8021%" height="15" fill="rgb(211,216,49)" fg:x="4992" fg:w="221"/><text x="18.3672%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (208 samples, 0.75%)</title><rect x="18.1643%" y="453" width="0.7549%" height="15" fill="rgb(221,58,53)" fg:x="5005" fg:w="208"/><text x="18.4143%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (205 samples, 0.74%)</title><rect x="18.1752%" y="437" width="0.7440%" height="15" fill="rgb(220,112,41)" fg:x="5008" fg:w="205"/><text x="18.4252%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (150 samples, 0.54%)</title><rect x="18.3748%" y="421" width="0.5444%" height="15" fill="rgb(236,38,28)" fg:x="5063" fg:w="150"/><text x="18.6248%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.54%)</title><rect x="18.3821%" y="405" width="0.5371%" height="15" fill="rgb(227,195,22)" fg:x="5065" fg:w="148"/><text x="18.6321%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (112 samples, 0.41%)</title><rect x="18.5127%" y="389" width="0.4065%" height="15" fill="rgb(214,55,33)" fg:x="5101" fg:w="112"/><text x="18.7627%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (8 samples, 0.03%)</title><rect x="18.8902%" y="373" width="0.0290%" height="15" fill="rgb(248,80,13)" fg:x="5205" fg:w="8"/><text x="19.1402%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.05%)</title><rect x="18.9628%" y="453" width="0.0544%" height="15" fill="rgb(238,52,6)" fg:x="5225" fg:w="15"/><text x="19.2128%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.04%)</title><rect x="18.9737%" y="437" width="0.0436%" height="15" fill="rgb(224,198,47)" fg:x="5228" fg:w="12"/><text x="19.2237%" y="447.50"></text></g><g><title>cfree (9 samples, 0.03%)</title><rect x="18.9845%" y="421" width="0.0327%" height="15" fill="rgb(233,171,20)" fg:x="5231" fg:w="9"/><text x="19.2345%" y="431.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="18.9991%" y="405" width="0.0181%" height="15" fill="rgb(241,30,25)" fg:x="5235" fg:w="5"/><text x="19.2491%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.01%)</title><rect x="19.0390%" y="437" width="0.0145%" height="15" fill="rgb(207,171,38)" fg:x="5246" fg:w="4"/><text x="19.2890%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.01%)</title><rect x="19.0390%" y="421" width="0.0145%" height="15" fill="rgb(234,70,1)" fg:x="5246" fg:w="4"/><text x="19.2890%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (297 samples, 1.08%)</title><rect x="18.0155%" y="501" width="1.0779%" height="15" fill="rgb(232,178,18)" fg:x="4964" fg:w="297"/><text x="18.2655%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (48 samples, 0.17%)</title><rect x="18.9192%" y="485" width="0.1742%" height="15" fill="rgb(241,78,40)" fg:x="5213" fg:w="48"/><text x="19.1692%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.16%)</title><rect x="18.9301%" y="469" width="0.1633%" height="15" fill="rgb(222,35,25)" fg:x="5216" fg:w="45"/><text x="19.1801%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (21 samples, 0.08%)</title><rect x="19.0172%" y="453" width="0.0762%" height="15" fill="rgb(207,92,16)" fg:x="5240" fg:w="21"/><text x="19.2672%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (10 samples, 0.04%)</title><rect x="19.0571%" y="437" width="0.0363%" height="15" fill="rgb(216,59,51)" fg:x="5251" fg:w="10"/><text x="19.3071%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="19.1261%" y="421" width="0.0109%" height="15" fill="rgb(213,80,28)" fg:x="5270" fg:w="3"/><text x="19.3761%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="19.1261%" y="405" width="0.0109%" height="15" fill="rgb(220,93,7)" fg:x="5270" fg:w="3"/><text x="19.3761%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (4 samples, 0.01%)</title><rect x="19.1406%" y="405" width="0.0145%" height="15" fill="rgb(225,24,44)" fg:x="5274" fg:w="4"/><text x="19.3906%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.06%)</title><rect x="19.1007%" y="469" width="0.0581%" height="15" fill="rgb(243,74,40)" fg:x="5263" fg:w="16"/><text x="19.3507%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.05%)</title><rect x="19.1079%" y="453" width="0.0508%" height="15" fill="rgb(228,39,7)" fg:x="5265" fg:w="14"/><text x="19.3579%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.05%)</title><rect x="19.1079%" y="437" width="0.0508%" height="15" fill="rgb(227,79,8)" fg:x="5265" fg:w="14"/><text x="19.3579%" y="447.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.02%)</title><rect x="19.1370%" y="421" width="0.0218%" height="15" fill="rgb(236,58,11)" fg:x="5273" fg:w="6"/><text x="19.3870%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (7 samples, 0.03%)</title><rect x="19.1987%" y="341" width="0.0254%" height="15" fill="rgb(249,63,35)" fg:x="5290" fg:w="7"/><text x="19.4487%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="19.2096%" y="325" width="0.0145%" height="15" fill="rgb(252,114,16)" fg:x="5293" fg:w="4"/><text x="19.4596%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="19.2350%" y="325" width="0.0181%" height="15" fill="rgb(254,151,24)" fg:x="5300" fg:w="5"/><text x="19.4850%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.03%)</title><rect x="19.2241%" y="341" width="0.0327%" height="15" fill="rgb(253,54,39)" fg:x="5297" fg:w="9"/><text x="19.4741%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.06%)</title><rect x="19.1987%" y="357" width="0.0617%" height="15" fill="rgb(243,25,45)" fg:x="5290" fg:w="17"/><text x="19.4487%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (11 samples, 0.04%)</title><rect x="19.2712%" y="261" width="0.0399%" height="15" fill="rgb(234,134,9)" fg:x="5310" fg:w="11"/><text x="19.5212%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="19.2821%" y="245" width="0.0290%" height="15" fill="rgb(227,166,31)" fg:x="5313" fg:w="8"/><text x="19.5321%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (12 samples, 0.04%)</title><rect x="19.2712%" y="325" width="0.0436%" height="15" fill="rgb(245,143,41)" fg:x="5310" fg:w="12"/><text x="19.5212%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.04%)</title><rect x="19.2712%" y="309" width="0.0436%" height="15" fill="rgb(238,181,32)" fg:x="5310" fg:w="12"/><text x="19.5212%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.04%)</title><rect x="19.2712%" y="293" width="0.0436%" height="15" fill="rgb(224,113,18)" fg:x="5310" fg:w="12"/><text x="19.5212%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.04%)</title><rect x="19.2712%" y="277" width="0.0436%" height="15" fill="rgb(240,229,28)" fg:x="5310" fg:w="12"/><text x="19.5212%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.03%)</title><rect x="19.3438%" y="261" width="0.0254%" height="15" fill="rgb(250,185,3)" fg:x="5330" fg:w="7"/><text x="19.5938%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="19.3511%" y="245" width="0.0181%" height="15" fill="rgb(212,59,25)" fg:x="5332" fg:w="5"/><text x="19.6011%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.03%)</title><rect x="19.3438%" y="277" width="0.0290%" height="15" fill="rgb(221,87,20)" fg:x="5330" fg:w="8"/><text x="19.5938%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (12 samples, 0.04%)</title><rect x="19.3366%" y="293" width="0.0436%" height="15" fill="rgb(213,74,28)" fg:x="5328" fg:w="12"/><text x="19.5866%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.01%)</title><rect x="19.3983%" y="229" width="0.0145%" height="15" fill="rgb(224,132,34)" fg:x="5345" fg:w="4"/><text x="19.6483%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.01%)</title><rect x="19.3983%" y="213" width="0.0145%" height="15" fill="rgb(222,101,24)" fg:x="5345" fg:w="4"/><text x="19.6483%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="19.3983%" y="197" width="0.0145%" height="15" fill="rgb(254,142,4)" fg:x="5345" fg:w="4"/><text x="19.6483%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (4 samples, 0.01%)</title><rect x="19.4128%" y="229" width="0.0145%" height="15" fill="rgb(230,229,49)" fg:x="5349" fg:w="4"/><text x="19.6628%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.01%)</title><rect x="19.4128%" y="213" width="0.0145%" height="15" fill="rgb(238,70,47)" fg:x="5349" fg:w="4"/><text x="19.6628%" y="223.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (23 samples, 0.08%)</title><rect x="19.3946%" y="277" width="0.0835%" height="15" fill="rgb(231,160,17)" fg:x="5344" fg:w="23"/><text x="19.6446%" y="287.50"></text></g><g><title>core::str::pattern::StrSearcher::new (23 samples, 0.08%)</title><rect x="19.3946%" y="261" width="0.0835%" height="15" fill="rgb(218,68,53)" fg:x="5344" fg:w="23"/><text x="19.6446%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (22 samples, 0.08%)</title><rect x="19.3983%" y="245" width="0.0798%" height="15" fill="rgb(236,111,10)" fg:x="5345" fg:w="22"/><text x="19.6483%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (14 samples, 0.05%)</title><rect x="19.4273%" y="229" width="0.0508%" height="15" fill="rgb(224,34,41)" fg:x="5353" fg:w="14"/><text x="19.6773%" y="239.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (22 samples, 0.08%)</title><rect x="19.4781%" y="277" width="0.0798%" height="15" fill="rgb(241,118,19)" fg:x="5367" fg:w="22"/><text x="19.7281%" y="287.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (17 samples, 0.06%)</title><rect x="19.4963%" y="261" width="0.0617%" height="15" fill="rgb(238,129,25)" fg:x="5372" fg:w="17"/><text x="19.7463%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.38%)</title><rect x="19.1769%" y="389" width="0.3847%" height="15" fill="rgb(238,22,31)" fg:x="5284" fg:w="106"/><text x="19.4269%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (105 samples, 0.38%)</title><rect x="19.1805%" y="373" width="0.3811%" height="15" fill="rgb(222,174,48)" fg:x="5285" fg:w="105"/><text x="19.4305%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (83 samples, 0.30%)</title><rect x="19.2604%" y="357" width="0.3012%" height="15" fill="rgb(206,152,40)" fg:x="5307" fg:w="83"/><text x="19.5104%" y="367.50"></text></g><g><title>unkr::candidates::clue_is_in_string::{{closure}} (82 samples, 0.30%)</title><rect x="19.2640%" y="341" width="0.2976%" height="15" fill="rgb(218,99,54)" fg:x="5308" fg:w="82"/><text x="19.5140%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (68 samples, 0.25%)</title><rect x="19.3148%" y="325" width="0.2468%" height="15" fill="rgb(220,174,26)" fg:x="5322" fg:w="68"/><text x="19.5648%" y="335.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::is_contained_in (65 samples, 0.24%)</title><rect x="19.3257%" y="309" width="0.2359%" height="15" fill="rgb(245,116,9)" fg:x="5325" fg:w="65"/><text x="19.5757%" y="319.50"></text></g><g><title>core::str::pattern::Pattern::is_contained_in (50 samples, 0.18%)</title><rect x="19.3801%" y="293" width="0.1815%" height="15" fill="rgb(209,72,35)" fg:x="5340" fg:w="50"/><text x="19.6301%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (112 samples, 0.41%)</title><rect x="19.1587%" y="469" width="0.4065%" height="15" fill="rgb(226,126,21)" fg:x="5279" fg:w="112"/><text x="19.4087%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (110 samples, 0.40%)</title><rect x="19.1660%" y="453" width="0.3992%" height="15" fill="rgb(227,192,1)" fg:x="5281" fg:w="110"/><text x="19.4160%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (109 samples, 0.40%)</title><rect x="19.1696%" y="437" width="0.3956%" height="15" fill="rgb(237,180,29)" fg:x="5282" fg:w="109"/><text x="19.4196%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (109 samples, 0.40%)</title><rect x="19.1696%" y="421" width="0.3956%" height="15" fill="rgb(230,197,35)" fg:x="5282" fg:w="109"/><text x="19.4196%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.39%)</title><rect x="19.1769%" y="405" width="0.3883%" height="15" fill="rgb(246,193,31)" fg:x="5284" fg:w="107"/><text x="19.4269%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (8 samples, 0.03%)</title><rect x="19.5688%" y="469" width="0.0290%" height="15" fill="rgb(241,36,4)" fg:x="5392" fg:w="8"/><text x="19.8188%" y="479.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (7 samples, 0.03%)</title><rect x="19.5725%" y="453" width="0.0254%" height="15" fill="rgb(241,130,17)" fg:x="5393" fg:w="7"/><text x="19.8225%" y="463.50"></text></g><g><title>unkr::core::process_new_str (2,242 samples, 8.14%)</title><rect x="11.4865%" y="549" width="8.1367%" height="15" fill="rgb(206,137,32)" fg:x="3165" fg:w="2242"/><text x="11.7365%" y="559.50">unkr::core:..</text></g><g><title>unkr::candidates::find_and_print_candidates (1,235 samples, 4.48%)</title><rect x="15.1412%" y="533" width="4.4821%" height="15" fill="rgb(237,228,51)" fg:x="4172" fg:w="1235"/><text x="15.3912%" y="543.50">unkr:..</text></g><g><title>unkr::candidates::find_candidates (499 samples, 1.81%)</title><rect x="17.8123%" y="517" width="1.8110%" height="15" fill="rgb(243,6,42)" fg:x="4908" fg:w="499"/><text x="18.0623%" y="527.50">u..</text></g><g><title>unkr::candidates::check_string_for_candidates (146 samples, 0.53%)</title><rect x="19.0934%" y="501" width="0.5299%" height="15" fill="rgb(251,74,28)" fg:x="5261" fg:w="146"/><text x="19.3434%" y="511.50"></text></g><g><title>unkr::candidates::clue_is_in_string (146 samples, 0.53%)</title><rect x="19.0934%" y="485" width="0.5299%" height="15" fill="rgb(218,20,49)" fg:x="5261" fg:w="146"/><text x="19.3434%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.03%)</title><rect x="19.5979%" y="469" width="0.0254%" height="15" fill="rgb(238,28,14)" fg:x="5400" fg:w="7"/><text x="19.8479%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="19.5979%" y="453" width="0.0254%" height="15" fill="rgb(229,40,46)" fg:x="5400" fg:w="7"/><text x="19.8479%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.02%)</title><rect x="19.6051%" y="437" width="0.0181%" height="15" fill="rgb(244,195,20)" fg:x="5402" fg:w="5"/><text x="19.8551%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="19.6124%" y="421" width="0.0109%" height="15" fill="rgb(253,56,35)" fg:x="5404" fg:w="3"/><text x="19.8624%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="19.6342%" y="533" width="0.0145%" height="15" fill="rgb(210,149,44)" fg:x="5410" fg:w="4"/><text x="19.8842%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="19.6342%" y="517" width="0.0145%" height="15" fill="rgb(240,135,12)" fg:x="5410" fg:w="4"/><text x="19.8842%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="19.6342%" y="501" width="0.0145%" height="15" fill="rgb(251,24,50)" fg:x="5410" fg:w="4"/><text x="19.8842%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="19.6632%" y="453" width="0.0181%" height="15" fill="rgb(243,200,47)" fg:x="5418" fg:w="5"/><text x="19.9132%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.02%)</title><rect x="19.6632%" y="437" width="0.0181%" height="15" fill="rgb(224,166,26)" fg:x="5418" fg:w="5"/><text x="19.9132%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.01%)</title><rect x="19.6668%" y="421" width="0.0145%" height="15" fill="rgb(233,0,47)" fg:x="5419" fg:w="4"/><text x="19.9168%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="19.6705%" y="405" width="0.0109%" height="15" fill="rgb(253,80,5)" fg:x="5420" fg:w="3"/><text x="19.9205%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="19.6850%" y="421" width="0.0109%" height="15" fill="rgb(214,133,25)" fg:x="5424" fg:w="3"/><text x="19.9350%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="19.6850%" y="405" width="0.0109%" height="15" fill="rgb(209,27,14)" fg:x="5424" fg:w="3"/><text x="19.9350%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.02%)</title><rect x="19.7068%" y="405" width="0.0218%" height="15" fill="rgb(219,102,51)" fg:x="5430" fg:w="6"/><text x="19.9568%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (4 samples, 0.01%)</title><rect x="19.7140%" y="389" width="0.0145%" height="15" fill="rgb(237,18,16)" fg:x="5432" fg:w="4"/><text x="19.9640%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (5 samples, 0.02%)</title><rect x="19.7285%" y="389" width="0.0181%" height="15" fill="rgb(241,85,17)" fg:x="5436" fg:w="5"/><text x="19.9785%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.02%)</title><rect x="19.7285%" y="405" width="0.0218%" height="15" fill="rgb(236,90,42)" fg:x="5436" fg:w="6"/><text x="19.9785%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.10%)</title><rect x="19.6523%" y="517" width="0.1016%" height="15" fill="rgb(249,57,21)" fg:x="5415" fg:w="28"/><text x="19.9023%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (27 samples, 0.10%)</title><rect x="19.6559%" y="501" width="0.0980%" height="15" fill="rgb(243,12,36)" fg:x="5416" fg:w="27"/><text x="19.9059%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (25 samples, 0.09%)</title><rect x="19.6632%" y="485" width="0.0907%" height="15" fill="rgb(253,128,47)" fg:x="5418" fg:w="25"/><text x="19.9132%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (25 samples, 0.09%)</title><rect x="19.6632%" y="469" width="0.0907%" height="15" fill="rgb(207,33,20)" fg:x="5418" fg:w="25"/><text x="19.9132%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.07%)</title><rect x="19.6814%" y="453" width="0.0726%" height="15" fill="rgb(233,215,35)" fg:x="5423" fg:w="20"/><text x="19.9314%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.07%)</title><rect x="19.6850%" y="437" width="0.0690%" height="15" fill="rgb(249,188,52)" fg:x="5424" fg:w="19"/><text x="19.9350%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.06%)</title><rect x="19.6959%" y="421" width="0.0581%" height="15" fill="rgb(225,12,32)" fg:x="5427" fg:w="16"/><text x="19.9459%" y="431.50"></text></g><g><title>unkr::join::decrypt (38 samples, 0.14%)</title><rect x="19.6233%" y="549" width="0.1379%" height="15" fill="rgb(247,98,14)" fg:x="5407" fg:w="38"/><text x="19.8733%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (30 samples, 0.11%)</title><rect x="19.6523%" y="533" width="0.1089%" height="15" fill="rgb(247,219,48)" fg:x="5415" fg:w="30"/><text x="19.9023%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.04%)</title><rect x="19.8120%" y="405" width="0.0399%" height="15" fill="rgb(253,60,48)" fg:x="5459" fg:w="11"/><text x="20.0620%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.03%)</title><rect x="19.8193%" y="389" width="0.0327%" height="15" fill="rgb(245,15,52)" fg:x="5461" fg:w="9"/><text x="20.0693%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="19.8265%" y="373" width="0.0254%" height="15" fill="rgb(220,133,28)" fg:x="5463" fg:w="7"/><text x="20.0765%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="19.8302%" y="357" width="0.0218%" height="15" fill="rgb(217,180,4)" fg:x="5464" fg:w="6"/><text x="20.0802%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.01%)</title><rect x="19.8628%" y="341" width="0.0145%" height="15" fill="rgb(251,24,1)" fg:x="5473" fg:w="4"/><text x="20.1128%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.01%)</title><rect x="19.8664%" y="325" width="0.0109%" height="15" fill="rgb(212,185,49)" fg:x="5474" fg:w="3"/><text x="20.1164%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="19.8628%" y="357" width="0.0181%" height="15" fill="rgb(215,175,22)" fg:x="5473" fg:w="5"/><text x="20.1128%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (8 samples, 0.03%)</title><rect x="19.8556%" y="373" width="0.0290%" height="15" fill="rgb(250,205,14)" fg:x="5471" fg:w="8"/><text x="20.1056%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="19.9245%" y="197" width="0.0145%" height="15" fill="rgb(225,211,22)" fg:x="5490" fg:w="4"/><text x="20.1745%" y="207.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="19.9245%" y="181" width="0.0145%" height="15" fill="rgb(251,179,42)" fg:x="5490" fg:w="4"/><text x="20.1745%" y="191.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="19.9281%" y="165" width="0.0109%" height="15" fill="rgb(208,216,51)" fg:x="5491" fg:w="3"/><text x="20.1781%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="19.9209%" y="229" width="0.0290%" height="15" fill="rgb(235,36,11)" fg:x="5489" fg:w="8"/><text x="20.1709%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="19.9209%" y="213" width="0.0290%" height="15" fill="rgb(213,189,28)" fg:x="5489" fg:w="8"/><text x="20.1709%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.05%)</title><rect x="19.9173%" y="245" width="0.0544%" height="15" fill="rgb(227,203,42)" fg:x="5488" fg:w="15"/><text x="20.1673%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.02%)</title><rect x="19.9499%" y="229" width="0.0218%" height="15" fill="rgb(244,72,36)" fg:x="5497" fg:w="6"/><text x="20.1999%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="19.9717%" y="245" width="0.0109%" height="15" fill="rgb(213,53,17)" fg:x="5503" fg:w="3"/><text x="20.2217%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.01%)</title><rect x="19.9717%" y="229" width="0.0109%" height="15" fill="rgb(207,167,3)" fg:x="5503" fg:w="3"/><text x="20.2217%" y="239.50"></text></g><g><title>core::cmp::max (5 samples, 0.02%)</title><rect x="19.9826%" y="245" width="0.0181%" height="15" fill="rgb(216,98,30)" fg:x="5506" fg:w="5"/><text x="20.2326%" y="255.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.02%)</title><rect x="19.9826%" y="229" width="0.0181%" height="15" fill="rgb(236,123,15)" fg:x="5506" fg:w="5"/><text x="20.2326%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.01%)</title><rect x="19.9898%" y="213" width="0.0109%" height="15" fill="rgb(248,81,50)" fg:x="5508" fg:w="3"/><text x="20.2398%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.10%)</title><rect x="19.9027%" y="261" width="0.1016%" height="15" fill="rgb(214,120,4)" fg:x="5484" fg:w="28"/><text x="20.1527%" y="271.50"></text></g><g><title>alloc::string::String::reserve (33 samples, 0.12%)</title><rect x="19.8882%" y="325" width="0.1198%" height="15" fill="rgb(208,179,34)" fg:x="5480" fg:w="33"/><text x="20.1382%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.12%)</title><rect x="19.8882%" y="309" width="0.1198%" height="15" fill="rgb(227,140,7)" fg:x="5480" fg:w="33"/><text x="20.1382%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.12%)</title><rect x="19.8918%" y="293" width="0.1161%" height="15" fill="rgb(214,22,6)" fg:x="5481" fg:w="32"/><text x="20.1418%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.11%)</title><rect x="19.8955%" y="277" width="0.1125%" height="15" fill="rgb(207,137,27)" fg:x="5482" fg:w="31"/><text x="20.1455%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.05%)</title><rect x="20.0370%" y="261" width="0.0472%" height="15" fill="rgb(210,8,46)" fg:x="5521" fg:w="13"/><text x="20.2870%" y="271.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back::{{closure}} (5 samples, 0.02%)</title><rect x="20.0661%" y="245" width="0.0181%" height="15" fill="rgb(240,16,54)" fg:x="5529" fg:w="5"/><text x="20.3161%" y="255.50"></text></g><g><title>core::char::from_u32_unchecked (4 samples, 0.01%)</title><rect x="20.0697%" y="229" width="0.0145%" height="15" fill="rgb(211,209,29)" fg:x="5530" fg:w="4"/><text x="20.3197%" y="239.50"></text></g><g><title>core::char::convert::from_u32_unchecked (4 samples, 0.01%)</title><rect x="20.0697%" y="213" width="0.0145%" height="15" fill="rgb(226,228,24)" fg:x="5530" fg:w="4"/><text x="20.3197%" y="223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.01%)</title><rect x="20.1169%" y="245" width="0.0109%" height="15" fill="rgb(222,84,9)" fg:x="5543" fg:w="3"/><text x="20.3669%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (7 samples, 0.03%)</title><rect x="20.1314%" y="229" width="0.0254%" height="15" fill="rgb(234,203,30)" fg:x="5547" fg:w="7"/><text x="20.3814%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="20.1314%" y="213" width="0.0254%" height="15" fill="rgb(238,109,14)" fg:x="5547" fg:w="7"/><text x="20.3814%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (19 samples, 0.07%)</title><rect x="20.1568%" y="229" width="0.0690%" height="15" fill="rgb(233,206,34)" fg:x="5554" fg:w="19"/><text x="20.4068%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (16 samples, 0.06%)</title><rect x="20.1677%" y="213" width="0.0581%" height="15" fill="rgb(220,167,47)" fg:x="5557" fg:w="16"/><text x="20.4177%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (11 samples, 0.04%)</title><rect x="20.1858%" y="197" width="0.0399%" height="15" fill="rgb(238,105,10)" fg:x="5562" fg:w="11"/><text x="20.4358%" y="207.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (57 samples, 0.21%)</title><rect x="20.0225%" y="277" width="0.2069%" height="15" fill="rgb(213,227,17)" fg:x="5517" fg:w="57"/><text x="20.2725%" y="287.50"></text></g><g><title>core::str::validations::next_code_point_reverse (40 samples, 0.15%)</title><rect x="20.0842%" y="261" width="0.1452%" height="15" fill="rgb(217,132,38)" fg:x="5534" fg:w="40"/><text x="20.3342%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (28 samples, 0.10%)</title><rect x="20.1277%" y="245" width="0.1016%" height="15" fill="rgb(242,146,4)" fg:x="5546" fg:w="28"/><text x="20.3777%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.01%)</title><rect x="20.2983%" y="213" width="0.0109%" height="15" fill="rgb(212,61,9)" fg:x="5593" fg:w="3"/><text x="20.5483%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="20.3092%" y="213" width="0.0109%" height="15" fill="rgb(247,126,22)" fg:x="5596" fg:w="3"/><text x="20.5592%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="20.3092%" y="197" width="0.0109%" height="15" fill="rgb(220,196,2)" fg:x="5596" fg:w="3"/><text x="20.5592%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="20.3237%" y="181" width="0.0254%" height="15" fill="rgb(208,46,4)" fg:x="5600" fg:w="7"/><text x="20.5737%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="20.3382%" y="165" width="0.0109%" height="15" fill="rgb(252,104,46)" fg:x="5604" fg:w="3"/><text x="20.5882%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.04%)</title><rect x="20.3201%" y="213" width="0.0436%" height="15" fill="rgb(237,152,48)" fg:x="5599" fg:w="12"/><text x="20.5701%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.04%)</title><rect x="20.3237%" y="197" width="0.0399%" height="15" fill="rgb(221,59,37)" fg:x="5600" fg:w="11"/><text x="20.5737%" y="207.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.01%)</title><rect x="20.3491%" y="181" width="0.0145%" height="15" fill="rgb(209,202,51)" fg:x="5607" fg:w="4"/><text x="20.5991%" y="191.50"></text></g><g><title>core::ptr::invalid_mut (4 samples, 0.01%)</title><rect x="20.3491%" y="165" width="0.0145%" height="15" fill="rgb(228,81,30)" fg:x="5607" fg:w="4"/><text x="20.5991%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.11%)</title><rect x="20.2620%" y="229" width="0.1125%" height="15" fill="rgb(227,42,39)" fg:x="5583" fg:w="31"/><text x="20.5120%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (139 samples, 0.50%)</title><rect x="19.8846%" y="341" width="0.5045%" height="15" fill="rgb(221,26,2)" fg:x="5479" fg:w="139"/><text x="20.1346%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (105 samples, 0.38%)</title><rect x="20.0080%" y="325" width="0.3811%" height="15" fill="rgb(254,61,31)" fg:x="5513" fg:w="105"/><text x="20.2580%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (103 samples, 0.37%)</title><rect x="20.0152%" y="309" width="0.3738%" height="15" fill="rgb(222,173,38)" fg:x="5515" fg:w="103"/><text x="20.2652%" y="319.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (102 samples, 0.37%)</title><rect x="20.0189%" y="293" width="0.3702%" height="15" fill="rgb(218,50,12)" fg:x="5516" fg:w="102"/><text x="20.2689%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (44 samples, 0.16%)</title><rect x="20.2294%" y="277" width="0.1597%" height="15" fill="rgb(223,88,40)" fg:x="5574" fg:w="44"/><text x="20.4794%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (42 samples, 0.15%)</title><rect x="20.2366%" y="261" width="0.1524%" height="15" fill="rgb(237,54,19)" fg:x="5576" fg:w="42"/><text x="20.4866%" y="271.50"></text></g><g><title>alloc::string::String::push (39 samples, 0.14%)</title><rect x="20.2475%" y="245" width="0.1415%" height="15" fill="rgb(251,129,25)" fg:x="5579" fg:w="39"/><text x="20.4975%" y="255.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (4 samples, 0.01%)</title><rect x="20.3745%" y="229" width="0.0145%" height="15" fill="rgb(238,97,19)" fg:x="5614" fg:w="4"/><text x="20.6245%" y="239.50"></text></g><g><title>core::char::methods::len_utf8 (3 samples, 0.01%)</title><rect x="20.3782%" y="213" width="0.0109%" height="15" fill="rgb(240,169,18)" fg:x="5615" fg:w="3"/><text x="20.6282%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (145 samples, 0.53%)</title><rect x="19.8846%" y="373" width="0.5262%" height="15" fill="rgb(230,187,49)" fg:x="5479" fg:w="145"/><text x="20.1346%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (145 samples, 0.53%)</title><rect x="19.8846%" y="357" width="0.5262%" height="15" fill="rgb(209,44,26)" fg:x="5479" fg:w="145"/><text x="20.1346%" y="367.50"></text></g><g><title>alloc::string::String::new (6 samples, 0.02%)</title><rect x="20.3891%" y="341" width="0.0218%" height="15" fill="rgb(244,0,6)" fg:x="5618" fg:w="6"/><text x="20.6391%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (6 samples, 0.02%)</title><rect x="20.4217%" y="357" width="0.0218%" height="15" fill="rgb(248,18,21)" fg:x="5627" fg:w="6"/><text x="20.6717%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="20.4217%" y="341" width="0.0218%" height="15" fill="rgb(245,180,19)" fg:x="5627" fg:w="6"/><text x="20.6717%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (6 samples, 0.02%)</title><rect x="20.4217%" y="325" width="0.0218%" height="15" fill="rgb(252,118,36)" fg:x="5627" fg:w="6"/><text x="20.6717%" y="335.50"></text></g><g><title>core::ptr::null (4 samples, 0.01%)</title><rect x="20.4290%" y="309" width="0.0145%" height="15" fill="rgb(210,224,19)" fg:x="5629" fg:w="4"/><text x="20.6790%" y="319.50"></text></g><g><title>core::ptr::invalid (4 samples, 0.01%)</title><rect x="20.4290%" y="293" width="0.0145%" height="15" fill="rgb(218,30,24)" fg:x="5629" fg:w="4"/><text x="20.6790%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (164 samples, 0.60%)</title><rect x="19.8519%" y="405" width="0.5952%" height="15" fill="rgb(219,75,50)" fg:x="5470" fg:w="164"/><text x="20.1019%" y="415.50"></text></g><g><title>unkr::reverse::decrypt::{{closure}} (163 samples, 0.59%)</title><rect x="19.8556%" y="389" width="0.5916%" height="15" fill="rgb(234,72,50)" fg:x="5471" fg:w="163"/><text x="20.1056%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (8 samples, 0.03%)</title><rect x="20.4181%" y="373" width="0.0290%" height="15" fill="rgb(219,100,48)" fg:x="5626" fg:w="8"/><text x="20.6681%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (184 samples, 0.67%)</title><rect x="19.7830%" y="469" width="0.6678%" height="15" fill="rgb(253,5,41)" fg:x="5451" fg:w="184"/><text x="20.0330%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (183 samples, 0.66%)</title><rect x="19.7866%" y="453" width="0.6642%" height="15" fill="rgb(247,181,11)" fg:x="5452" fg:w="183"/><text x="20.0366%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (179 samples, 0.65%)</title><rect x="19.8011%" y="437" width="0.6496%" height="15" fill="rgb(222,223,25)" fg:x="5456" fg:w="179"/><text x="20.0511%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (179 samples, 0.65%)</title><rect x="19.8011%" y="421" width="0.6496%" height="15" fill="rgb(214,198,28)" fg:x="5456" fg:w="179"/><text x="20.0511%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (194 samples, 0.70%)</title><rect x="19.7612%" y="533" width="0.7041%" height="15" fill="rgb(230,46,43)" fg:x="5445" fg:w="194"/><text x="20.0112%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (193 samples, 0.70%)</title><rect x="19.7648%" y="517" width="0.7004%" height="15" fill="rgb(233,65,53)" fg:x="5446" fg:w="193"/><text x="20.0148%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (190 samples, 0.69%)</title><rect x="19.7757%" y="501" width="0.6896%" height="15" fill="rgb(221,121,27)" fg:x="5449" fg:w="190"/><text x="20.0257%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (189 samples, 0.69%)</title><rect x="19.7793%" y="485" width="0.6859%" height="15" fill="rgb(247,70,47)" fg:x="5450" fg:w="189"/><text x="20.0293%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="20.4508%" y="469" width="0.0145%" height="15" fill="rgb(228,85,35)" fg:x="5635" fg:w="4"/><text x="20.7008%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="20.4508%" y="453" width="0.0145%" height="15" fill="rgb(209,50,18)" fg:x="5635" fg:w="4"/><text x="20.7008%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="20.4508%" y="437" width="0.0145%" height="15" fill="rgb(250,19,35)" fg:x="5635" fg:w="4"/><text x="20.7008%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="20.4508%" y="421" width="0.0145%" height="15" fill="rgb(253,107,29)" fg:x="5635" fg:w="4"/><text x="20.7008%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="20.4870%" y="421" width="0.0109%" height="15" fill="rgb(252,179,29)" fg:x="5645" fg:w="3"/><text x="20.7370%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="20.4870%" y="405" width="0.0109%" height="15" fill="rgb(238,194,6)" fg:x="5645" fg:w="3"/><text x="20.7370%" y="415.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="20.4870%" y="389" width="0.0109%" height="15" fill="rgb(238,164,29)" fg:x="5645" fg:w="3"/><text x="20.7370%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="20.4653%" y="517" width="0.0544%" height="15" fill="rgb(224,25,9)" fg:x="5639" fg:w="15"/><text x="20.7153%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (14 samples, 0.05%)</title><rect x="20.4689%" y="501" width="0.0508%" height="15" fill="rgb(244,153,23)" fg:x="5640" fg:w="14"/><text x="20.7189%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.05%)</title><rect x="20.4725%" y="485" width="0.0472%" height="15" fill="rgb(212,203,14)" fg:x="5641" fg:w="13"/><text x="20.7225%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.05%)</title><rect x="20.4725%" y="469" width="0.0472%" height="15" fill="rgb(220,164,20)" fg:x="5641" fg:w="13"/><text x="20.7225%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.04%)</title><rect x="20.4798%" y="453" width="0.0399%" height="15" fill="rgb(222,203,48)" fg:x="5643" fg:w="11"/><text x="20.7298%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="20.4834%" y="437" width="0.0363%" height="15" fill="rgb(215,159,22)" fg:x="5644" fg:w="10"/><text x="20.7334%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.02%)</title><rect x="20.4979%" y="421" width="0.0218%" height="15" fill="rgb(216,183,47)" fg:x="5648" fg:w="6"/><text x="20.7479%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (18 samples, 0.07%)</title><rect x="20.4653%" y="533" width="0.0653%" height="15" fill="rgb(229,195,25)" fg:x="5639" fg:w="18"/><text x="20.7153%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (3 samples, 0.01%)</title><rect x="20.5197%" y="517" width="0.0109%" height="15" fill="rgb(224,132,51)" fg:x="5654" fg:w="3"/><text x="20.7697%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="20.5197%" y="501" width="0.0109%" height="15" fill="rgb(240,63,7)" fg:x="5654" fg:w="3"/><text x="20.7697%" y="511.50"></text></g><g><title>unkr::reverse::decrypt (214 samples, 0.78%)</title><rect x="19.7612%" y="549" width="0.7767%" height="15" fill="rgb(249,182,41)" fg:x="5445" fg:w="214"/><text x="20.0112%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="20.6250%" y="453" width="0.0145%" height="15" fill="rgb(243,47,26)" fg:x="5683" fg:w="4"/><text x="20.8750%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="20.6250%" y="437" width="0.0145%" height="15" fill="rgb(233,48,2)" fg:x="5683" fg:w="4"/><text x="20.8750%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="20.6250%" y="421" width="0.0145%" height="15" fill="rgb(244,165,34)" fg:x="5683" fg:w="4"/><text x="20.8750%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="20.6250%" y="405" width="0.0145%" height="15" fill="rgb(207,89,7)" fg:x="5683" fg:w="4"/><text x="20.8750%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="20.6250%" y="389" width="0.0145%" height="15" fill="rgb(244,117,36)" fg:x="5683" fg:w="4"/><text x="20.8750%" y="399.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="20.6250%" y="373" width="0.0145%" height="15" fill="rgb(226,144,34)" fg:x="5683" fg:w="4"/><text x="20.8750%" y="383.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="20.6286%" y="357" width="0.0109%" height="15" fill="rgb(213,23,19)" fg:x="5684" fg:w="3"/><text x="20.8786%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="20.6104%" y="533" width="0.0327%" height="15" fill="rgb(217,75,12)" fg:x="5679" fg:w="9"/><text x="20.8604%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="20.6250%" y="517" width="0.0181%" height="15" fill="rgb(224,159,17)" fg:x="5683" fg:w="5"/><text x="20.8750%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.02%)</title><rect x="20.6250%" y="501" width="0.0181%" height="15" fill="rgb(217,118,1)" fg:x="5683" fg:w="5"/><text x="20.8750%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="20.6250%" y="485" width="0.0181%" height="15" fill="rgb(232,180,48)" fg:x="5683" fg:w="5"/><text x="20.8750%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="20.6250%" y="469" width="0.0181%" height="15" fill="rgb(230,27,33)" fg:x="5683" fg:w="5"/><text x="20.8750%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (8 samples, 0.03%)</title><rect x="20.6431%" y="517" width="0.0290%" height="15" fill="rgb(205,31,21)" fg:x="5688" fg:w="8"/><text x="20.8931%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="20.6431%" y="501" width="0.0290%" height="15" fill="rgb(253,59,4)" fg:x="5688" fg:w="8"/><text x="20.8931%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="20.6540%" y="485" width="0.0181%" height="15" fill="rgb(224,201,9)" fg:x="5691" fg:w="5"/><text x="20.9040%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="20.6612%" y="469" width="0.0109%" height="15" fill="rgb(229,206,30)" fg:x="5693" fg:w="3"/><text x="20.9112%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.04%)</title><rect x="20.6431%" y="533" width="0.0399%" height="15" fill="rgb(212,67,47)" fg:x="5688" fg:w="11"/><text x="20.8931%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.01%)</title><rect x="20.6721%" y="517" width="0.0109%" height="15" fill="rgb(211,96,50)" fg:x="5696" fg:w="3"/><text x="20.9221%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="20.6721%" y="501" width="0.0109%" height="15" fill="rgb(252,114,18)" fg:x="5696" fg:w="3"/><text x="20.9221%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.01%)</title><rect x="20.6721%" y="485" width="0.0109%" height="15" fill="rgb(223,58,37)" fg:x="5696" fg:w="3"/><text x="20.9221%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (10 samples, 0.04%)</title><rect x="20.6830%" y="533" width="0.0363%" height="15" fill="rgb(237,70,4)" fg:x="5699" fg:w="10"/><text x="20.9330%" y="543.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (8 samples, 0.03%)</title><rect x="20.6903%" y="517" width="0.0290%" height="15" fill="rgb(244,85,46)" fg:x="5701" fg:w="8"/><text x="20.9403%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (16 samples, 0.06%)</title><rect x="20.8064%" y="453" width="0.0581%" height="15" fill="rgb(223,39,52)" fg:x="5733" fg:w="16"/><text x="21.0564%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="20.8282%" y="437" width="0.0363%" height="15" fill="rgb(218,200,14)" fg:x="5739" fg:w="10"/><text x="21.0782%" y="447.50"></text></g><g><title>core::ptr::invalid_mut (4 samples, 0.01%)</title><rect x="20.8645%" y="437" width="0.0145%" height="15" fill="rgb(208,171,16)" fg:x="5749" fg:w="4"/><text x="21.1145%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (34 samples, 0.12%)</title><rect x="20.7665%" y="485" width="0.1234%" height="15" fill="rgb(234,200,18)" fg:x="5722" fg:w="34"/><text x="21.0165%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (31 samples, 0.11%)</title><rect x="20.7774%" y="469" width="0.1125%" height="15" fill="rgb(228,45,11)" fg:x="5725" fg:w="31"/><text x="21.0274%" y="479.50"></text></g><g><title>core::ptr::null_mut (7 samples, 0.03%)</title><rect x="20.8645%" y="453" width="0.0254%" height="15" fill="rgb(237,182,11)" fg:x="5749" fg:w="7"/><text x="21.1145%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="20.8790%" y="437" width="0.0109%" height="15" fill="rgb(241,175,49)" fg:x="5753" fg:w="3"/><text x="21.1290%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (40 samples, 0.15%)</title><rect x="20.7520%" y="501" width="0.1452%" height="15" fill="rgb(247,38,35)" fg:x="5718" fg:w="40"/><text x="21.0020%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (41 samples, 0.15%)</title><rect x="20.7520%" y="517" width="0.1488%" height="15" fill="rgb(228,39,49)" fg:x="5718" fg:w="41"/><text x="21.0020%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.08%)</title><rect x="20.9153%" y="501" width="0.0835%" height="15" fill="rgb(226,101,26)" fg:x="5763" fg:w="23"/><text x="21.1653%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.08%)</title><rect x="20.9153%" y="485" width="0.0835%" height="15" fill="rgb(206,141,19)" fg:x="5763" fg:w="23"/><text x="21.1653%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.08%)</title><rect x="20.9153%" y="469" width="0.0835%" height="15" fill="rgb(211,200,13)" fg:x="5763" fg:w="23"/><text x="21.1653%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.07%)</title><rect x="20.9262%" y="453" width="0.0726%" height="15" fill="rgb(241,121,6)" fg:x="5766" fg:w="20"/><text x="21.1762%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.07%)</title><rect x="20.9298%" y="437" width="0.0690%" height="15" fill="rgb(234,221,29)" fg:x="5767" fg:w="19"/><text x="21.1798%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.07%)</title><rect x="20.9334%" y="421" width="0.0653%" height="15" fill="rgb(229,136,5)" fg:x="5768" fg:w="18"/><text x="21.1834%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.07%)</title><rect x="20.9334%" y="405" width="0.0653%" height="15" fill="rgb(238,36,11)" fg:x="5768" fg:w="18"/><text x="21.1834%" y="415.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.07%)</title><rect x="20.9334%" y="389" width="0.0653%" height="15" fill="rgb(251,55,41)" fg:x="5768" fg:w="18"/><text x="21.1834%" y="399.50"></text></g><g><title>realloc (18 samples, 0.07%)</title><rect x="20.9334%" y="373" width="0.0653%" height="15" fill="rgb(242,34,40)" fg:x="5768" fg:w="18"/><text x="21.1834%" y="383.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="20.9480%" y="357" width="0.0508%" height="15" fill="rgb(215,42,17)" fg:x="5772" fg:w="14"/><text x="21.1980%" y="367.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="20.9552%" y="341" width="0.0436%" height="15" fill="rgb(207,44,46)" fg:x="5774" fg:w="12"/><text x="21.2052%" y="351.50"></text></g><g><title>alloc::string::String::insert_bytes (31 samples, 0.11%)</title><rect x="20.9008%" y="517" width="0.1125%" height="15" fill="rgb(211,206,28)" fg:x="5759" fg:w="31"/><text x="21.1508%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="21.0024%" y="501" width="0.0109%" height="15" fill="rgb(237,167,16)" fg:x="5787" fg:w="3"/><text x="21.2524%" y="511.50"></text></g><g><title>core::char::methods::len_utf8 (4 samples, 0.01%)</title><rect x="21.1476%" y="485" width="0.0145%" height="15" fill="rgb(233,66,6)" fg:x="5827" fg:w="4"/><text x="21.3976%" y="495.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (61 samples, 0.22%)</title><rect x="21.0133%" y="517" width="0.2214%" height="15" fill="rgb(246,123,29)" fg:x="5790" fg:w="61"/><text x="21.2633%" y="527.50"></text></g><g><title>core::char::methods::encode_utf8_raw (59 samples, 0.21%)</title><rect x="21.0205%" y="501" width="0.2141%" height="15" fill="rgb(209,62,40)" fg:x="5792" fg:w="59"/><text x="21.2705%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (20 samples, 0.07%)</title><rect x="21.1621%" y="485" width="0.0726%" height="15" fill="rgb(218,4,25)" fg:x="5831" fg:w="20"/><text x="21.4121%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (15 samples, 0.05%)</title><rect x="21.1802%" y="469" width="0.0544%" height="15" fill="rgb(253,91,49)" fg:x="5836" fg:w="15"/><text x="21.4302%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.04%)</title><rect x="21.1911%" y="453" width="0.0436%" height="15" fill="rgb(228,155,29)" fg:x="5839" fg:w="12"/><text x="21.4411%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (11 samples, 0.04%)</title><rect x="21.1947%" y="437" width="0.0399%" height="15" fill="rgb(243,57,37)" fg:x="5840" fg:w="11"/><text x="21.4447%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (8 samples, 0.03%)</title><rect x="21.2056%" y="421" width="0.0290%" height="15" fill="rgb(244,167,17)" fg:x="5843" fg:w="8"/><text x="21.4556%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.02%)</title><rect x="21.2129%" y="405" width="0.0218%" height="15" fill="rgb(207,181,38)" fg:x="5845" fg:w="6"/><text x="21.4629%" y="415.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (4 samples, 0.01%)</title><rect x="21.2347%" y="517" width="0.0145%" height="15" fill="rgb(211,8,23)" fg:x="5851" fg:w="4"/><text x="21.4847%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.02%)</title><rect x="21.3435%" y="453" width="0.0181%" height="15" fill="rgb(235,11,44)" fg:x="5881" fg:w="5"/><text x="21.5935%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.02%)</title><rect x="21.3435%" y="437" width="0.0181%" height="15" fill="rgb(248,18,52)" fg:x="5881" fg:w="5"/><text x="21.5935%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (17 samples, 0.06%)</title><rect x="21.3036%" y="501" width="0.0617%" height="15" fill="rgb(208,4,7)" fg:x="5870" fg:w="17"/><text x="21.5536%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (17 samples, 0.06%)</title><rect x="21.3036%" y="485" width="0.0617%" height="15" fill="rgb(240,17,39)" fg:x="5870" fg:w="17"/><text x="21.5536%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.03%)</title><rect x="21.3399%" y="469" width="0.0254%" height="15" fill="rgb(207,170,3)" fg:x="5880" fg:w="7"/><text x="21.5899%" y="479.50"></text></g><g><title>alloc::string::String::insert (183 samples, 0.66%)</title><rect x="20.7193%" y="533" width="0.6642%" height="15" fill="rgb(236,100,52)" fg:x="5709" fg:w="183"/><text x="20.9693%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (37 samples, 0.13%)</title><rect x="21.2492%" y="517" width="0.1343%" height="15" fill="rgb(246,78,51)" fg:x="5855" fg:w="37"/><text x="21.4992%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (5 samples, 0.02%)</title><rect x="21.3653%" y="501" width="0.0181%" height="15" fill="rgb(211,17,15)" fg:x="5887" fg:w="5"/><text x="21.6153%" y="511.50"></text></g><g><title>alloc::string::String::len (3 samples, 0.01%)</title><rect x="21.3835%" y="533" width="0.0109%" height="15" fill="rgb(209,59,46)" fg:x="5892" fg:w="3"/><text x="21.6335%" y="543.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.01%)</title><rect x="21.4452%" y="501" width="0.0109%" height="15" fill="rgb(210,92,25)" fg:x="5909" fg:w="3"/><text x="21.6952%" y="511.50"></text></g><g><title>core::ptr::read (10 samples, 0.04%)</title><rect x="21.4742%" y="485" width="0.0363%" height="15" fill="rgb(238,174,52)" fg:x="5917" fg:w="10"/><text x="21.7242%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (33 samples, 0.12%)</title><rect x="21.3944%" y="533" width="0.1198%" height="15" fill="rgb(230,73,7)" fg:x="5895" fg:w="33"/><text x="21.6444%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (29 samples, 0.11%)</title><rect x="21.4089%" y="517" width="0.1052%" height="15" fill="rgb(243,124,40)" fg:x="5899" fg:w="29"/><text x="21.6589%" y="527.50"></text></g><g><title>core::mem::replace (15 samples, 0.05%)</title><rect x="21.4597%" y="501" width="0.0544%" height="15" fill="rgb(244,170,11)" fg:x="5913" fg:w="15"/><text x="21.7097%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="21.5468%" y="453" width="0.0290%" height="15" fill="rgb(207,114,54)" fg:x="5937" fg:w="8"/><text x="21.7968%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="21.5540%" y="437" width="0.0218%" height="15" fill="rgb(205,42,20)" fg:x="5939" fg:w="6"/><text x="21.8040%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (16 samples, 0.06%)</title><rect x="21.5286%" y="485" width="0.0581%" height="15" fill="rgb(230,30,28)" fg:x="5932" fg:w="16"/><text x="21.7786%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (16 samples, 0.06%)</title><rect x="21.5286%" y="469" width="0.0581%" height="15" fill="rgb(205,73,54)" fg:x="5932" fg:w="16"/><text x="21.7786%" y="479.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.01%)</title><rect x="21.5758%" y="453" width="0.0109%" height="15" fill="rgb(254,227,23)" fg:x="5945" fg:w="3"/><text x="21.8258%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.07%)</title><rect x="21.5286%" y="501" width="0.0653%" height="15" fill="rgb(228,202,34)" fg:x="5932" fg:w="18"/><text x="21.7786%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="21.6012%" y="469" width="0.0145%" height="15" fill="rgb(222,225,37)" fg:x="5952" fg:w="4"/><text x="21.8512%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="21.6048%" y="453" width="0.0109%" height="15" fill="rgb(221,14,54)" fg:x="5953" fg:w="3"/><text x="21.8548%" y="463.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="21.6048%" y="437" width="0.0109%" height="15" fill="rgb(254,102,2)" fg:x="5953" fg:w="3"/><text x="21.8548%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.03%)</title><rect x="21.6266%" y="453" width="0.0290%" height="15" fill="rgb(232,104,17)" fg:x="5959" fg:w="8"/><text x="21.8766%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (6 samples, 0.02%)</title><rect x="21.6339%" y="437" width="0.0218%" height="15" fill="rgb(250,220,14)" fg:x="5961" fg:w="6"/><text x="21.8839%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (17 samples, 0.06%)</title><rect x="21.6557%" y="453" width="0.0617%" height="15" fill="rgb(241,158,9)" fg:x="5967" fg:w="17"/><text x="21.9057%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (17 samples, 0.06%)</title><rect x="21.6557%" y="437" width="0.0617%" height="15" fill="rgb(246,9,43)" fg:x="5967" fg:w="17"/><text x="21.9057%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (58 samples, 0.21%)</title><rect x="21.5141%" y="533" width="0.2105%" height="15" fill="rgb(206,73,33)" fg:x="5928" fg:w="58"/><text x="21.7641%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (57 samples, 0.21%)</title><rect x="21.5177%" y="517" width="0.2069%" height="15" fill="rgb(222,79,8)" fg:x="5929" fg:w="57"/><text x="21.7677%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (36 samples, 0.13%)</title><rect x="21.5940%" y="501" width="0.1307%" height="15" fill="rgb(234,8,54)" fg:x="5950" fg:w="36"/><text x="21.8440%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.13%)</title><rect x="21.5976%" y="485" width="0.1270%" height="15" fill="rgb(209,134,38)" fg:x="5951" fg:w="35"/><text x="21.8476%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (30 samples, 0.11%)</title><rect x="21.6157%" y="469" width="0.1089%" height="15" fill="rgb(230,127,29)" fg:x="5956" fg:w="30"/><text x="21.8657%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.05%)</title><rect x="21.7536%" y="437" width="0.0472%" height="15" fill="rgb(242,44,41)" fg:x="5994" fg:w="13"/><text x="22.0036%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.05%)</title><rect x="21.7536%" y="421" width="0.0472%" height="15" fill="rgb(222,56,43)" fg:x="5994" fg:w="13"/><text x="22.0036%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.03%)</title><rect x="21.7682%" y="405" width="0.0327%" height="15" fill="rgb(238,39,47)" fg:x="5998" fg:w="9"/><text x="22.0182%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="21.7718%" y="389" width="0.0290%" height="15" fill="rgb(226,79,43)" fg:x="5999" fg:w="8"/><text x="22.0218%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="21.7500%" y="453" width="0.0544%" height="15" fill="rgb(242,105,53)" fg:x="5993" fg:w="15"/><text x="22.0000%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="21.8153%" y="421" width="0.0290%" height="15" fill="rgb(251,132,46)" fg:x="6011" fg:w="8"/><text x="22.0653%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.03%)</title><rect x="21.8190%" y="405" width="0.0254%" height="15" fill="rgb(231,77,14)" fg:x="6012" fg:w="7"/><text x="22.0690%" y="415.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="21.8226%" y="389" width="0.0218%" height="15" fill="rgb(240,135,9)" fg:x="6013" fg:w="6"/><text x="22.0726%" y="399.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="21.8299%" y="373" width="0.0145%" height="15" fill="rgb(248,109,14)" fg:x="6015" fg:w="4"/><text x="22.0799%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.05%)</title><rect x="21.8625%" y="405" width="0.0508%" height="15" fill="rgb(227,146,52)" fg:x="6024" fg:w="14"/><text x="22.1125%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (4 samples, 0.01%)</title><rect x="21.8988%" y="389" width="0.0145%" height="15" fill="rgb(232,54,3)" fg:x="6034" fg:w="4"/><text x="22.1488%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.04%)</title><rect x="21.9133%" y="405" width="0.0399%" height="15" fill="rgb(229,201,43)" fg:x="6038" fg:w="11"/><text x="22.1633%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (11 samples, 0.04%)</title><rect x="21.9133%" y="389" width="0.0399%" height="15" fill="rgb(252,161,33)" fg:x="6038" fg:w="11"/><text x="22.1633%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (3 samples, 0.01%)</title><rect x="21.9424%" y="373" width="0.0109%" height="15" fill="rgb(226,146,40)" fg:x="6046" fg:w="3"/><text x="22.1924%" y="383.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_usize (3 samples, 0.01%)</title><rect x="21.9424%" y="357" width="0.0109%" height="15" fill="rgb(219,47,25)" fg:x="6046" fg:w="3"/><text x="22.1924%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.24%)</title><rect x="21.7246%" y="517" width="0.2432%" height="15" fill="rgb(250,135,13)" fg:x="5986" fg:w="67"/><text x="21.9746%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (66 samples, 0.24%)</title><rect x="21.7282%" y="501" width="0.2395%" height="15" fill="rgb(219,229,18)" fg:x="5987" fg:w="66"/><text x="21.9782%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (63 samples, 0.23%)</title><rect x="21.7391%" y="485" width="0.2286%" height="15" fill="rgb(217,152,27)" fg:x="5990" fg:w="63"/><text x="21.9891%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (63 samples, 0.23%)</title><rect x="21.7391%" y="469" width="0.2286%" height="15" fill="rgb(225,71,47)" fg:x="5990" fg:w="63"/><text x="21.9891%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (45 samples, 0.16%)</title><rect x="21.8045%" y="453" width="0.1633%" height="15" fill="rgb(220,139,14)" fg:x="6008" fg:w="45"/><text x="22.0545%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.16%)</title><rect x="21.8045%" y="437" width="0.1633%" height="15" fill="rgb(247,54,32)" fg:x="6008" fg:w="45"/><text x="22.0545%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (34 samples, 0.12%)</title><rect x="21.8444%" y="421" width="0.1234%" height="15" fill="rgb(252,131,39)" fg:x="6019" fg:w="34"/><text x="22.0944%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (4 samples, 0.01%)</title><rect x="21.9533%" y="405" width="0.0145%" height="15" fill="rgb(210,108,39)" fg:x="6049" fg:w="4"/><text x="22.2033%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="21.9787%" y="485" width="0.0327%" height="15" fill="rgb(205,23,29)" fg:x="6056" fg:w="9"/><text x="22.2287%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="21.9895%" y="469" width="0.0218%" height="15" fill="rgb(246,139,46)" fg:x="6059" fg:w="6"/><text x="22.2395%" y="479.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="21.9932%" y="453" width="0.0181%" height="15" fill="rgb(250,81,26)" fg:x="6060" fg:w="5"/><text x="22.2432%" y="463.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="21.9932%" y="437" width="0.0181%" height="15" fill="rgb(214,104,7)" fg:x="6060" fg:w="5"/><text x="22.2432%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="22.0367%" y="469" width="0.0109%" height="15" fill="rgb(233,189,8)" fg:x="6072" fg:w="3"/><text x="22.2867%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (95 samples, 0.34%)</title><rect x="21.7246%" y="533" width="0.3448%" height="15" fill="rgb(228,141,17)" fg:x="5986" fg:w="95"/><text x="21.9746%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (28 samples, 0.10%)</title><rect x="21.9678%" y="517" width="0.1016%" height="15" fill="rgb(247,157,1)" fg:x="6053" fg:w="28"/><text x="22.2178%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.10%)</title><rect x="21.9714%" y="501" width="0.0980%" height="15" fill="rgb(249,225,5)" fg:x="6054" fg:w="27"/><text x="22.2214%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.06%)</title><rect x="22.0113%" y="485" width="0.0581%" height="15" fill="rgb(242,55,13)" fg:x="6065" fg:w="16"/><text x="22.2613%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (6 samples, 0.02%)</title><rect x="22.0476%" y="469" width="0.0218%" height="15" fill="rgb(230,49,50)" fg:x="6075" fg:w="6"/><text x="22.2976%" y="479.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.05%)</title><rect x="22.4468%" y="517" width="0.0544%" height="15" fill="rgb(241,111,38)" fg:x="6185" fg:w="15"/><text x="22.6968%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (28 samples, 0.10%)</title><rect x="22.7408%" y="469" width="0.1016%" height="15" fill="rgb(252,155,4)" fg:x="6266" fg:w="28"/><text x="22.9908%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (17 samples, 0.06%)</title><rect x="22.7807%" y="453" width="0.0617%" height="15" fill="rgb(212,69,32)" fg:x="6277" fg:w="17"/><text x="23.0307%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (87 samples, 0.32%)</title><rect x="23.0856%" y="453" width="0.3157%" height="15" fill="rgb(243,107,47)" fg:x="6361" fg:w="87"/><text x="23.3356%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (74 samples, 0.27%)</title><rect x="23.1328%" y="437" width="0.2686%" height="15" fill="rgb(247,130,12)" fg:x="6374" fg:w="74"/><text x="23.3828%" y="447.50"></text></g><g><title>core::ptr::invalid_mut (34 samples, 0.12%)</title><rect x="23.4013%" y="437" width="0.1234%" height="15" fill="rgb(233,74,16)" fg:x="6448" fg:w="34"/><text x="23.6513%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (250 samples, 0.91%)</title><rect x="22.6646%" y="485" width="0.9073%" height="15" fill="rgb(208,58,18)" fg:x="6245" fg:w="250"/><text x="22.9146%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (201 samples, 0.73%)</title><rect x="22.8424%" y="469" width="0.7295%" height="15" fill="rgb(242,225,1)" fg:x="6294" fg:w="201"/><text x="23.0924%" y="479.50"></text></g><g><title>core::ptr::null_mut (47 samples, 0.17%)</title><rect x="23.4013%" y="453" width="0.1706%" height="15" fill="rgb(249,39,40)" fg:x="6448" fg:w="47"/><text x="23.6513%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (13 samples, 0.05%)</title><rect x="23.5247%" y="437" width="0.0472%" height="15" fill="rgb(207,72,44)" fg:x="6482" fg:w="13"/><text x="23.7747%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (289 samples, 1.05%)</title><rect x="22.5557%" y="501" width="1.0488%" height="15" fill="rgb(215,193,12)" fg:x="6215" fg:w="289"/><text x="22.8057%" y="511.50"></text></g><g><title>core::slice::raw::from_raw_parts (9 samples, 0.03%)</title><rect x="23.5719%" y="485" width="0.0327%" height="15" fill="rgb(248,41,39)" fg:x="6495" fg:w="9"/><text x="23.8219%" y="495.50"></text></g><g><title>core::ptr::slice_from_raw_parts (9 samples, 0.03%)</title><rect x="23.5719%" y="469" width="0.0327%" height="15" fill="rgb(253,85,4)" fg:x="6495" fg:w="9"/><text x="23.8219%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.03%)</title><rect x="23.5755%" y="453" width="0.0290%" height="15" fill="rgb(243,70,31)" fg:x="6496" fg:w="8"/><text x="23.8255%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (307 samples, 1.11%)</title><rect x="22.5085%" y="517" width="1.1142%" height="15" fill="rgb(253,195,26)" fg:x="6202" fg:w="307"/><text x="22.7585%" y="527.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (5 samples, 0.02%)</title><rect x="23.6046%" y="501" width="0.0181%" height="15" fill="rgb(243,42,11)" fg:x="6504" fg:w="5"/><text x="23.8546%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.04%)</title><rect x="23.6263%" y="501" width="0.0399%" height="15" fill="rgb(239,66,17)" fg:x="6510" fg:w="11"/><text x="23.8763%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.03%)</title><rect x="23.6336%" y="485" width="0.0327%" height="15" fill="rgb(217,132,21)" fg:x="6512" fg:w="9"/><text x="23.8836%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.05%)</title><rect x="23.6227%" y="517" width="0.0472%" height="15" fill="rgb(252,202,21)" fg:x="6509" fg:w="13"/><text x="23.8727%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (3 samples, 0.01%)</title><rect x="23.6699%" y="517" width="0.0109%" height="15" fill="rgb(233,98,36)" fg:x="6522" fg:w="3"/><text x="23.9199%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (5 samples, 0.02%)</title><rect x="23.8695%" y="501" width="0.0181%" height="15" fill="rgb(216,153,54)" fg:x="6577" fg:w="5"/><text x="24.1195%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.01%)</title><rect x="24.1998%" y="469" width="0.0109%" height="15" fill="rgb(250,99,7)" fg:x="6668" fg:w="3"/><text x="24.4498%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.03%)</title><rect x="24.3123%" y="453" width="0.0254%" height="15" fill="rgb(207,56,50)" fg:x="6699" fg:w="7"/><text x="24.5623%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="24.3268%" y="437" width="0.0109%" height="15" fill="rgb(244,61,34)" fg:x="6703" fg:w="3"/><text x="24.5768%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (17 samples, 0.06%)</title><rect x="24.3377%" y="453" width="0.0617%" height="15" fill="rgb(241,50,38)" fg:x="6706" fg:w="17"/><text x="24.5877%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (16 samples, 0.06%)</title><rect x="24.3413%" y="437" width="0.0581%" height="15" fill="rgb(212,166,30)" fg:x="6707" fg:w="16"/><text x="24.5913%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (3 samples, 0.01%)</title><rect x="24.3885%" y="421" width="0.0109%" height="15" fill="rgb(249,127,32)" fg:x="6720" fg:w="3"/><text x="24.6385%" y="431.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (4 samples, 0.01%)</title><rect x="24.3994%" y="437" width="0.0145%" height="15" fill="rgb(209,103,0)" fg:x="6723" fg:w="4"/><text x="24.6494%" y="447.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (5 samples, 0.02%)</title><rect x="24.3994%" y="453" width="0.0181%" height="15" fill="rgb(238,209,51)" fg:x="6723" fg:w="5"/><text x="24.6494%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (66 samples, 0.24%)</title><rect x="24.2106%" y="469" width="0.2395%" height="15" fill="rgb(237,56,23)" fg:x="6671" fg:w="66"/><text x="24.4606%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (9 samples, 0.03%)</title><rect x="24.4175%" y="453" width="0.0327%" height="15" fill="rgb(215,153,46)" fg:x="6728" fg:w="9"/><text x="24.6675%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (6 samples, 0.02%)</title><rect x="24.5264%" y="453" width="0.0218%" height="15" fill="rgb(224,49,31)" fg:x="6758" fg:w="6"/><text x="24.7764%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.01%)</title><rect x="24.5336%" y="437" width="0.0145%" height="15" fill="rgb(250,18,42)" fg:x="6760" fg:w="4"/><text x="24.7836%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (39 samples, 0.14%)</title><rect x="24.4502%" y="469" width="0.1415%" height="15" fill="rgb(215,176,39)" fg:x="6737" fg:w="39"/><text x="24.7002%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (12 samples, 0.04%)</title><rect x="24.5482%" y="453" width="0.0436%" height="15" fill="rgb(223,77,29)" fg:x="6764" fg:w="12"/><text x="24.7982%" y="463.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.11%)</title><rect x="24.7804%" y="421" width="0.1089%" height="15" fill="rgb(234,94,52)" fg:x="6828" fg:w="30"/><text x="25.0304%" y="431.50"></text></g><g><title>malloc (24 samples, 0.09%)</title><rect x="24.8022%" y="405" width="0.0871%" height="15" fill="rgb(220,154,50)" fg:x="6834" fg:w="24"/><text x="25.0522%" y="415.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="24.8276%" y="389" width="0.0617%" height="15" fill="rgb(212,11,10)" fg:x="6841" fg:w="17"/><text x="25.0776%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (19 samples, 0.07%)</title><rect x="24.9075%" y="389" width="0.0690%" height="15" fill="rgb(205,166,19)" fg:x="6863" fg:w="19"/><text x="25.1575%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (13 samples, 0.05%)</title><rect x="24.9292%" y="373" width="0.0472%" height="15" fill="rgb(244,198,16)" fg:x="6869" fg:w="13"/><text x="25.1792%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (27 samples, 0.10%)</title><rect x="24.8929%" y="421" width="0.0980%" height="15" fill="rgb(219,69,12)" fg:x="6859" fg:w="27"/><text x="25.1429%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (25 samples, 0.09%)</title><rect x="24.9002%" y="405" width="0.0907%" height="15" fill="rgb(245,30,7)" fg:x="6861" fg:w="25"/><text x="25.1502%" y="415.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.01%)</title><rect x="24.9764%" y="389" width="0.0145%" height="15" fill="rgb(218,221,48)" fg:x="6882" fg:w="4"/><text x="25.2264%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="24.9764%" y="373" width="0.0145%" height="15" fill="rgb(216,66,15)" fg:x="6882" fg:w="4"/><text x="25.2264%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.36%)</title><rect x="24.6824%" y="453" width="0.3557%" height="15" fill="rgb(226,122,50)" fg:x="6801" fg:w="98"/><text x="24.9324%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.34%)</title><rect x="24.6970%" y="437" width="0.3411%" height="15" fill="rgb(239,156,16)" fg:x="6805" fg:w="94"/><text x="24.9470%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (13 samples, 0.05%)</title><rect x="24.9909%" y="421" width="0.0472%" height="15" fill="rgb(224,27,38)" fg:x="6886" fg:w="13"/><text x="25.2409%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.03%)</title><rect x="25.0054%" y="405" width="0.0327%" height="15" fill="rgb(224,39,27)" fg:x="6890" fg:w="9"/><text x="25.2554%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.02%)</title><rect x="25.0163%" y="389" width="0.0218%" height="15" fill="rgb(215,92,29)" fg:x="6893" fg:w="6"/><text x="25.2663%" y="399.50"></text></g><g><title>__rdl_realloc (3 samples, 0.01%)</title><rect x="25.1325%" y="405" width="0.0109%" height="15" fill="rgb(207,159,16)" fg:x="6925" fg:w="3"/><text x="25.3825%" y="415.50"></text></g><g><title>alloc::alloc::realloc (101 samples, 0.37%)</title><rect x="25.1216%" y="421" width="0.3666%" height="15" fill="rgb(238,163,47)" fg:x="6922" fg:w="101"/><text x="25.3716%" y="431.50"></text></g><g><title>realloc (93 samples, 0.34%)</title><rect x="25.1506%" y="405" width="0.3375%" height="15" fill="rgb(219,91,49)" fg:x="6930" fg:w="93"/><text x="25.4006%" y="415.50"></text></g><g><title>[libc.so.6] (63 samples, 0.23%)</title><rect x="25.2595%" y="389" width="0.2286%" height="15" fill="rgb(227,167,31)" fg:x="6960" fg:w="63"/><text x="25.5095%" y="399.50"></text></g><g><title>[libc.so.6] (51 samples, 0.19%)</title><rect x="25.3030%" y="373" width="0.1851%" height="15" fill="rgb(234,80,54)" fg:x="6972" fg:w="51"/><text x="25.5530%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::size (4 samples, 0.01%)</title><rect x="25.4954%" y="421" width="0.0145%" height="15" fill="rgb(212,114,2)" fg:x="7025" fg:w="4"/><text x="25.7454%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="25.5353%" y="389" width="0.0145%" height="15" fill="rgb(234,50,24)" fg:x="7036" fg:w="4"/><text x="25.7853%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="25.5389%" y="373" width="0.0109%" height="15" fill="rgb(221,68,8)" fg:x="7037" fg:w="3"/><text x="25.7889%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="25.5099%" y="421" width="0.0436%" height="15" fill="rgb(254,180,31)" fg:x="7029" fg:w="12"/><text x="25.7599%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.03%)</title><rect x="25.5281%" y="405" width="0.0254%" height="15" fill="rgb(247,130,50)" fg:x="7034" fg:w="7"/><text x="25.7781%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (149 samples, 0.54%)</title><rect x="25.0381%" y="453" width="0.5408%" height="15" fill="rgb(211,109,4)" fg:x="6899" fg:w="149"/><text x="25.2881%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (145 samples, 0.53%)</title><rect x="25.0526%" y="437" width="0.5262%" height="15" fill="rgb(238,50,21)" fg:x="6903" fg:w="145"/><text x="25.3026%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (7 samples, 0.03%)</title><rect x="25.5535%" y="421" width="0.0254%" height="15" fill="rgb(225,57,45)" fg:x="7041" fg:w="7"/><text x="25.8035%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.01%)</title><rect x="25.5680%" y="405" width="0.0109%" height="15" fill="rgb(209,196,50)" fg:x="7045" fg:w="3"/><text x="25.8180%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.03%)</title><rect x="25.5789%" y="453" width="0.0290%" height="15" fill="rgb(242,140,13)" fg:x="7048" fg:w="8"/><text x="25.8289%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (351 samples, 1.27%)</title><rect x="24.5917%" y="469" width="1.2739%" height="15" fill="rgb(217,111,7)" fg:x="6776" fg:w="351"/><text x="24.8417%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (70 samples, 0.25%)</title><rect x="25.6115%" y="453" width="0.2540%" height="15" fill="rgb(253,193,51)" fg:x="7057" fg:w="70"/><text x="25.8615%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (3 samples, 0.01%)</title><rect x="26.0616%" y="437" width="0.0109%" height="15" fill="rgb(252,70,29)" fg:x="7181" fg:w="3"/><text x="26.3116%" y="447.50"></text></g><g><title>core::mem::valid_align::ValidAlign::new_unchecked (3 samples, 0.01%)</title><rect x="26.0616%" y="421" width="0.0109%" height="15" fill="rgb(232,127,12)" fg:x="7181" fg:w="3"/><text x="26.3116%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (51 samples, 0.19%)</title><rect x="25.8946%" y="453" width="0.1851%" height="15" fill="rgb(211,180,21)" fg:x="7135" fg:w="51"/><text x="26.1446%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (60 samples, 0.22%)</title><rect x="25.8656%" y="469" width="0.2178%" height="15" fill="rgb(229,72,13)" fg:x="7127" fg:w="60"/><text x="26.1156%" y="479.50"></text></g><g><title>core::cmp::max (82 samples, 0.30%)</title><rect x="26.0833%" y="469" width="0.2976%" height="15" fill="rgb(240,211,49)" fg:x="7187" fg:w="82"/><text x="26.3333%" y="479.50"></text></g><g><title>core::cmp::Ord::max (81 samples, 0.29%)</title><rect x="26.0870%" y="453" width="0.2940%" height="15" fill="rgb(219,149,40)" fg:x="7188" fg:w="81"/><text x="26.3370%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (54 samples, 0.20%)</title><rect x="26.1849%" y="437" width="0.1960%" height="15" fill="rgb(210,127,46)" fg:x="7215" fg:w="54"/><text x="26.4349%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (706 samples, 2.56%)</title><rect x="23.9747%" y="485" width="2.5622%" height="15" fill="rgb(220,106,7)" fg:x="6606" fg:w="706"/><text x="24.2247%" y="495.50">al..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (43 samples, 0.16%)</title><rect x="26.3809%" y="469" width="0.1561%" height="15" fill="rgb(249,31,22)" fg:x="7269" fg:w="43"/><text x="26.6309%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (30 samples, 0.11%)</title><rect x="26.4281%" y="453" width="0.1089%" height="15" fill="rgb(253,1,49)" fg:x="7282" fg:w="30"/><text x="26.6781%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (743 samples, 2.70%)</title><rect x="23.8876%" y="501" width="2.6965%" height="15" fill="rgb(227,144,33)" fg:x="6582" fg:w="743"/><text x="24.1376%" y="511.50">al..</text></g><g><title>alloc::raw_vec::handle_reserve (13 samples, 0.05%)</title><rect x="26.5370%" y="485" width="0.0472%" height="15" fill="rgb(249,163,44)" fg:x="7312" fg:w="13"/><text x="26.7870%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.05%)</title><rect x="26.5370%" y="469" width="0.0472%" height="15" fill="rgb(234,15,39)" fg:x="7312" fg:w="13"/><text x="26.7870%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (32 samples, 0.12%)</title><rect x="26.6132%" y="485" width="0.1161%" height="15" fill="rgb(207,66,16)" fg:x="7333" fg:w="32"/><text x="26.8632%" y="495.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (16 samples, 0.06%)</title><rect x="26.6713%" y="469" width="0.0581%" height="15" fill="rgb(233,112,24)" fg:x="7349" fg:w="16"/><text x="26.9213%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (10 samples, 0.04%)</title><rect x="26.6930%" y="453" width="0.0363%" height="15" fill="rgb(230,90,22)" fg:x="7355" fg:w="10"/><text x="26.9430%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (109 samples, 0.40%)</title><rect x="26.8781%" y="469" width="0.3956%" height="15" fill="rgb(229,61,13)" fg:x="7406" fg:w="109"/><text x="27.1281%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (90 samples, 0.33%)</title><rect x="26.9471%" y="453" width="0.3266%" height="15" fill="rgb(225,57,24)" fg:x="7425" fg:w="90"/><text x="27.1971%" y="463.50"></text></g><g><title>core::ptr::invalid_mut (23 samples, 0.08%)</title><rect x="27.2773%" y="453" width="0.0835%" height="15" fill="rgb(208,169,48)" fg:x="7516" fg:w="23"/><text x="27.5273%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (215 samples, 0.78%)</title><rect x="26.5842%" y="501" width="0.7803%" height="15" fill="rgb(244,218,51)" fg:x="7325" fg:w="215"/><text x="26.8342%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (175 samples, 0.64%)</title><rect x="26.7293%" y="485" width="0.6351%" height="15" fill="rgb(214,148,10)" fg:x="7365" fg:w="175"/><text x="26.9793%" y="495.50"></text></g><g><title>core::ptr::null_mut (25 samples, 0.09%)</title><rect x="27.2737%" y="469" width="0.0907%" height="15" fill="rgb(225,174,27)" fg:x="7515" fg:w="25"/><text x="27.5237%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.03%)</title><rect x="27.3644%" y="501" width="0.0290%" height="15" fill="rgb(230,96,26)" fg:x="7540" fg:w="8"/><text x="27.6144%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="27.3717%" y="485" width="0.0218%" height="15" fill="rgb(232,10,30)" fg:x="7542" fg:w="6"/><text x="27.6217%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,027 samples, 3.73%)</title><rect x="23.6808%" y="517" width="3.7272%" height="15" fill="rgb(222,8,50)" fg:x="6525" fg:w="1027"/><text x="23.9308%" y="527.50">allo..</text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="27.3935%" y="501" width="0.0145%" height="15" fill="rgb(213,81,27)" fg:x="7548" fg:w="4"/><text x="27.6435%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="27.4080%" y="517" width="0.0218%" height="15" fill="rgb(245,50,10)" fg:x="7552" fg:w="6"/><text x="27.6580%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (32 samples, 0.12%)</title><rect x="27.7927%" y="485" width="0.1161%" height="15" fill="rgb(216,100,18)" fg:x="7658" fg:w="32"/><text x="28.0427%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (15 samples, 0.05%)</title><rect x="27.8544%" y="469" width="0.0544%" height="15" fill="rgb(236,147,54)" fg:x="7675" fg:w="15"/><text x="28.1044%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (17 samples, 0.06%)</title><rect x="27.9125%" y="485" width="0.0617%" height="15" fill="rgb(205,143,26)" fg:x="7691" fg:w="17"/><text x="28.1625%" y="495.50"></text></g><g><title>core::ptr::read (63 samples, 0.23%)</title><rect x="28.1302%" y="469" width="0.2286%" height="15" fill="rgb(236,26,9)" fg:x="7751" fg:w="63"/><text x="28.3802%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (260 samples, 0.94%)</title><rect x="27.4298%" y="517" width="0.9436%" height="15" fill="rgb(221,165,53)" fg:x="7558" fg:w="260"/><text x="27.6798%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (243 samples, 0.88%)</title><rect x="27.4915%" y="501" width="0.8819%" height="15" fill="rgb(214,110,17)" fg:x="7575" fg:w="243"/><text x="27.7415%" y="511.50"></text></g><g><title>core::mem::replace (110 samples, 0.40%)</title><rect x="27.9742%" y="485" width="0.3992%" height="15" fill="rgb(237,197,12)" fg:x="7708" fg:w="110"/><text x="28.2242%" y="495.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="28.3589%" y="469" width="0.0145%" height="15" fill="rgb(205,84,17)" fg:x="7814" fg:w="4"/><text x="28.6089%" y="479.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.01%)</title><rect x="28.4133%" y="485" width="0.0109%" height="15" fill="rgb(237,18,45)" fg:x="7829" fg:w="3"/><text x="28.6633%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.01%)</title><rect x="28.4605%" y="437" width="0.0145%" height="15" fill="rgb(221,87,14)" fg:x="7842" fg:w="4"/><text x="28.7105%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.01%)</title><rect x="28.4641%" y="421" width="0.0109%" height="15" fill="rgb(238,186,15)" fg:x="7843" fg:w="3"/><text x="28.7141%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (7 samples, 0.03%)</title><rect x="28.4750%" y="437" width="0.0254%" height="15" fill="rgb(208,115,11)" fg:x="7846" fg:w="7"/><text x="28.7250%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.03%)</title><rect x="28.4750%" y="421" width="0.0254%" height="15" fill="rgb(254,175,0)" fg:x="7846" fg:w="7"/><text x="28.7250%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="28.4823%" y="405" width="0.0181%" height="15" fill="rgb(227,24,42)" fg:x="7848" fg:w="5"/><text x="28.7323%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="28.4823%" y="389" width="0.0181%" height="15" fill="rgb(223,211,37)" fg:x="7848" fg:w="5"/><text x="28.7323%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (19 samples, 0.07%)</title><rect x="28.6782%" y="357" width="0.0690%" height="15" fill="rgb(235,49,27)" fg:x="7902" fg:w="19"/><text x="28.9282%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (27 samples, 0.10%)</title><rect x="28.6637%" y="373" width="0.0980%" height="15" fill="rgb(254,97,51)" fg:x="7898" fg:w="27"/><text x="28.9137%" y="383.50"></text></g><g><title>core::ptr::null (4 samples, 0.01%)</title><rect x="28.7472%" y="357" width="0.0145%" height="15" fill="rgb(249,51,40)" fg:x="7921" fg:w="4"/><text x="28.9972%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="28.7472%" y="341" width="0.0145%" height="15" fill="rgb(210,128,45)" fg:x="7921" fg:w="4"/><text x="28.9972%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (37 samples, 0.13%)</title><rect x="28.8089%" y="357" width="0.1343%" height="15" fill="rgb(224,137,50)" fg:x="7938" fg:w="37"/><text x="29.0589%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (26 samples, 0.09%)</title><rect x="28.8488%" y="341" width="0.0944%" height="15" fill="rgb(242,15,9)" fg:x="7949" fg:w="26"/><text x="29.0988%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (57 samples, 0.21%)</title><rect x="28.7617%" y="373" width="0.2069%" height="15" fill="rgb(233,187,41)" fg:x="7925" fg:w="57"/><text x="29.0117%" y="383.50"></text></g><g><title>core::ptr::null_mut (7 samples, 0.03%)</title><rect x="28.9432%" y="357" width="0.0254%" height="15" fill="rgb(227,2,29)" fg:x="7975" fg:w="7"/><text x="29.1932%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.02%)</title><rect x="28.9504%" y="341" width="0.0181%" height="15" fill="rgb(222,70,3)" fg:x="7977" fg:w="5"/><text x="29.2004%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.01%)</title><rect x="28.9867%" y="357" width="0.0109%" height="15" fill="rgb(213,11,42)" fg:x="7987" fg:w="3"/><text x="29.2367%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.01%)</title><rect x="28.9867%" y="341" width="0.0109%" height="15" fill="rgb(225,150,9)" fg:x="7987" fg:w="3"/><text x="29.2367%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.38%)</title><rect x="28.6347%" y="389" width="0.3774%" height="15" fill="rgb(230,162,45)" fg:x="7890" fg:w="104"/><text x="28.8847%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (12 samples, 0.04%)</title><rect x="28.9686%" y="373" width="0.0436%" height="15" fill="rgb(222,14,52)" fg:x="7982" fg:w="12"/><text x="29.2186%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.01%)</title><rect x="28.9976%" y="357" width="0.0145%" height="15" fill="rgb(254,198,14)" fg:x="7990" fg:w="4"/><text x="29.2476%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.03%)</title><rect x="29.0593%" y="373" width="0.0327%" height="15" fill="rgb(220,217,30)" fg:x="8007" fg:w="9"/><text x="29.3093%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (9 samples, 0.03%)</title><rect x="29.0593%" y="357" width="0.0327%" height="15" fill="rgb(215,146,41)" fg:x="8007" fg:w="9"/><text x="29.3093%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (22 samples, 0.08%)</title><rect x="29.2553%" y="293" width="0.0798%" height="15" fill="rgb(217,27,36)" fg:x="8061" fg:w="22"/><text x="29.5053%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (12 samples, 0.04%)</title><rect x="29.2916%" y="277" width="0.0436%" height="15" fill="rgb(219,218,39)" fg:x="8071" fg:w="12"/><text x="29.5416%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (11 samples, 0.04%)</title><rect x="29.3351%" y="277" width="0.0399%" height="15" fill="rgb(219,4,42)" fg:x="8083" fg:w="11"/><text x="29.5851%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (55 samples, 0.20%)</title><rect x="29.2117%" y="325" width="0.1996%" height="15" fill="rgb(249,119,36)" fg:x="8049" fg:w="55"/><text x="29.4617%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (54 samples, 0.20%)</title><rect x="29.2154%" y="309" width="0.1960%" height="15" fill="rgb(209,23,33)" fg:x="8050" fg:w="54"/><text x="29.4654%" y="319.50"></text></g><g><title>core::ptr::null_mut (21 samples, 0.08%)</title><rect x="29.3351%" y="293" width="0.0762%" height="15" fill="rgb(211,10,0)" fg:x="8083" fg:w="21"/><text x="29.5851%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (10 samples, 0.04%)</title><rect x="29.3750%" y="277" width="0.0363%" height="15" fill="rgb(208,99,37)" fg:x="8094" fg:w="10"/><text x="29.6250%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 0.21%)</title><rect x="29.2081%" y="341" width="0.2105%" height="15" fill="rgb(213,132,31)" fg:x="8048" fg:w="58"/><text x="29.4581%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (75 samples, 0.27%)</title><rect x="29.1718%" y="357" width="0.2722%" height="15" fill="rgb(243,129,40)" fg:x="8038" fg:w="75"/><text x="29.4218%" y="367.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (7 samples, 0.03%)</title><rect x="29.4186%" y="341" width="0.0254%" height="15" fill="rgb(210,66,33)" fg:x="8106" fg:w="7"/><text x="29.6686%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="29.4585%" y="325" width="0.0145%" height="15" fill="rgb(209,189,4)" fg:x="8117" fg:w="4"/><text x="29.7085%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (46 samples, 0.17%)</title><rect x="29.4948%" y="309" width="0.1669%" height="15" fill="rgb(214,107,37)" fg:x="8127" fg:w="46"/><text x="29.7448%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (32 samples, 0.12%)</title><rect x="29.5456%" y="293" width="0.1161%" height="15" fill="rgb(245,88,54)" fg:x="8141" fg:w="32"/><text x="29.7956%" y="303.50"></text></g><g><title>core::ptr::invalid_mut (6 samples, 0.02%)</title><rect x="29.6618%" y="293" width="0.0218%" height="15" fill="rgb(205,146,20)" fg:x="8173" fg:w="6"/><text x="29.9118%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (68 samples, 0.25%)</title><rect x="29.4440%" y="341" width="0.2468%" height="15" fill="rgb(220,161,25)" fg:x="8113" fg:w="68"/><text x="29.6940%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (60 samples, 0.22%)</title><rect x="29.4730%" y="325" width="0.2178%" height="15" fill="rgb(215,152,15)" fg:x="8121" fg:w="60"/><text x="29.7230%" y="335.50"></text></g><g><title>core::ptr::null_mut (8 samples, 0.03%)</title><rect x="29.6618%" y="309" width="0.0290%" height="15" fill="rgb(233,192,44)" fg:x="8173" fg:w="8"/><text x="29.9118%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (70 samples, 0.25%)</title><rect x="29.4440%" y="357" width="0.2540%" height="15" fill="rgb(240,170,46)" fg:x="8113" fg:w="70"/><text x="29.6940%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.01%)</title><rect x="29.8614%" y="213" width="0.0109%" height="15" fill="rgb(207,104,33)" fg:x="8228" fg:w="3"/><text x="30.1114%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (25 samples, 0.09%)</title><rect x="29.8940%" y="197" width="0.0907%" height="15" fill="rgb(219,21,39)" fg:x="8237" fg:w="25"/><text x="30.1440%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (17 samples, 0.06%)</title><rect x="29.9231%" y="181" width="0.0617%" height="15" fill="rgb(214,133,29)" fg:x="8245" fg:w="17"/><text x="30.1731%" y="191.50"></text></g><g><title>core::ptr::invalid_mut (15 samples, 0.05%)</title><rect x="29.9848%" y="181" width="0.0544%" height="15" fill="rgb(226,93,6)" fg:x="8262" fg:w="15"/><text x="30.2348%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (63 samples, 0.23%)</title><rect x="29.8541%" y="229" width="0.2286%" height="15" fill="rgb(252,222,34)" fg:x="8226" fg:w="63"/><text x="30.1041%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (58 samples, 0.21%)</title><rect x="29.8723%" y="213" width="0.2105%" height="15" fill="rgb(252,92,48)" fg:x="8231" fg:w="58"/><text x="30.1223%" y="223.50"></text></g><g><title>core::ptr::null_mut (27 samples, 0.10%)</title><rect x="29.9848%" y="197" width="0.0980%" height="15" fill="rgb(245,223,24)" fg:x="8262" fg:w="27"/><text x="30.2348%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (12 samples, 0.04%)</title><rect x="30.0392%" y="181" width="0.0436%" height="15" fill="rgb(205,176,3)" fg:x="8277" fg:w="12"/><text x="30.2892%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="30.2243%" y="181" width="0.0181%" height="15" fill="rgb(235,151,15)" fg:x="8328" fg:w="5"/><text x="30.4743%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array (26 samples, 0.09%)</title><rect x="30.2424%" y="181" width="0.0944%" height="15" fill="rgb(237,209,11)" fg:x="8333" fg:w="26"/><text x="30.4924%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (24 samples, 0.09%)</title><rect x="30.2497%" y="165" width="0.0871%" height="15" fill="rgb(243,227,24)" fg:x="8335" fg:w="24"/><text x="30.4997%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (10 samples, 0.04%)</title><rect x="30.3441%" y="181" width="0.0363%" height="15" fill="rgb(239,193,16)" fg:x="8361" fg:w="10"/><text x="30.5941%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (84 samples, 0.30%)</title><rect x="30.0864%" y="229" width="0.3049%" height="15" fill="rgb(231,27,9)" fg:x="8290" fg:w="84"/><text x="30.3364%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (82 samples, 0.30%)</title><rect x="30.0936%" y="213" width="0.2976%" height="15" fill="rgb(219,169,10)" fg:x="8292" fg:w="82"/><text x="30.3436%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.29%)</title><rect x="30.0973%" y="197" width="0.2940%" height="15" fill="rgb(244,229,43)" fg:x="8293" fg:w="81"/><text x="30.3473%" y="207.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (3 samples, 0.01%)</title><rect x="30.3803%" y="181" width="0.0109%" height="15" fill="rgb(254,38,20)" fg:x="8371" fg:w="3"/><text x="30.6303%" y="191.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (210 samples, 0.76%)</title><rect x="29.7089%" y="309" width="0.7621%" height="15" fill="rgb(250,47,30)" fg:x="8186" fg:w="210"/><text x="29.9589%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (204 samples, 0.74%)</title><rect x="29.7307%" y="293" width="0.7404%" height="15" fill="rgb(224,124,36)" fg:x="8192" fg:w="204"/><text x="29.9807%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (204 samples, 0.74%)</title><rect x="29.7307%" y="277" width="0.7404%" height="15" fill="rgb(246,68,51)" fg:x="8192" fg:w="204"/><text x="29.9807%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (199 samples, 0.72%)</title><rect x="29.7489%" y="261" width="0.7222%" height="15" fill="rgb(253,43,49)" fg:x="8197" fg:w="199"/><text x="29.9989%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (198 samples, 0.72%)</title><rect x="29.7525%" y="245" width="0.7186%" height="15" fill="rgb(219,54,36)" fg:x="8198" fg:w="198"/><text x="30.0025%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (22 samples, 0.08%)</title><rect x="30.3912%" y="229" width="0.0798%" height="15" fill="rgb(227,133,34)" fg:x="8374" fg:w="22"/><text x="30.6412%" y="239.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (3 samples, 0.01%)</title><rect x="30.4711%" y="309" width="0.0109%" height="15" fill="rgb(247,227,15)" fg:x="8396" fg:w="3"/><text x="30.7211%" y="319.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (222 samples, 0.81%)</title><rect x="29.6980%" y="357" width="0.8057%" height="15" fill="rgb(229,96,14)" fg:x="8183" fg:w="222"/><text x="29.9480%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (219 samples, 0.79%)</title><rect x="29.7089%" y="341" width="0.7948%" height="15" fill="rgb(220,79,17)" fg:x="8186" fg:w="219"/><text x="29.9589%" y="351.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (219 samples, 0.79%)</title><rect x="29.7089%" y="325" width="0.7948%" height="15" fill="rgb(205,131,53)" fg:x="8186" fg:w="219"/><text x="29.9589%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (6 samples, 0.02%)</title><rect x="30.4820%" y="309" width="0.0218%" height="15" fill="rgb(209,50,29)" fg:x="8399" fg:w="6"/><text x="30.7320%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.06%)</title><rect x="30.5437%" y="293" width="0.0617%" height="15" fill="rgb(245,86,46)" fg:x="8416" fg:w="17"/><text x="30.7937%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.06%)</title><rect x="30.5437%" y="277" width="0.0617%" height="15" fill="rgb(235,66,46)" fg:x="8416" fg:w="17"/><text x="30.7937%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (14 samples, 0.05%)</title><rect x="30.6816%" y="245" width="0.0508%" height="15" fill="rgb(232,148,31)" fg:x="8454" fg:w="14"/><text x="30.9316%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="30.7977%" y="213" width="0.0181%" height="15" fill="rgb(217,149,8)" fg:x="8486" fg:w="5"/><text x="31.0477%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.03%)</title><rect x="30.8159%" y="213" width="0.0327%" height="15" fill="rgb(209,183,11)" fg:x="8491" fg:w="9"/><text x="31.0659%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (16 samples, 0.06%)</title><rect x="30.8485%" y="213" width="0.0581%" height="15" fill="rgb(208,55,20)" fg:x="8500" fg:w="16"/><text x="31.0985%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (5 samples, 0.02%)</title><rect x="30.8884%" y="197" width="0.0181%" height="15" fill="rgb(218,39,14)" fg:x="8511" fg:w="5"/><text x="31.1384%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (4 samples, 0.01%)</title><rect x="31.0772%" y="181" width="0.0145%" height="15" fill="rgb(216,169,33)" fg:x="8563" fg:w="4"/><text x="31.3272%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (46 samples, 0.17%)</title><rect x="30.9284%" y="197" width="0.1669%" height="15" fill="rgb(233,80,24)" fg:x="8522" fg:w="46"/><text x="31.1784%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array (53 samples, 0.19%)</title><rect x="30.9066%" y="213" width="0.1923%" height="15" fill="rgb(213,179,31)" fg:x="8516" fg:w="53"/><text x="31.1566%" y="223.50"></text></g><g><title>core::cmp::max (49 samples, 0.18%)</title><rect x="31.0989%" y="213" width="0.1778%" height="15" fill="rgb(209,19,5)" fg:x="8569" fg:w="49"/><text x="31.3489%" y="223.50"></text></g><g><title>core::cmp::Ord::max (49 samples, 0.18%)</title><rect x="31.0989%" y="197" width="0.1778%" height="15" fill="rgb(219,18,35)" fg:x="8569" fg:w="49"/><text x="31.3489%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (25 samples, 0.09%)</title><rect x="31.1860%" y="181" width="0.0907%" height="15" fill="rgb(209,169,16)" fg:x="8593" fg:w="25"/><text x="31.4360%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (159 samples, 0.58%)</title><rect x="30.7614%" y="229" width="0.5770%" height="15" fill="rgb(245,90,51)" fg:x="8476" fg:w="159"/><text x="31.0114%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (17 samples, 0.06%)</title><rect x="31.2768%" y="213" width="0.0617%" height="15" fill="rgb(220,99,45)" fg:x="8618" fg:w="17"/><text x="31.5268%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.02%)</title><rect x="31.3203%" y="197" width="0.0181%" height="15" fill="rgb(249,89,25)" fg:x="8630" fg:w="5"/><text x="31.5703%" y="207.50"></text></g><g><title>alloc::string::String::reserve (215 samples, 0.78%)</title><rect x="30.6054%" y="293" width="0.7803%" height="15" fill="rgb(239,193,0)" fg:x="8433" fg:w="215"/><text x="30.8554%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (215 samples, 0.78%)</title><rect x="30.6054%" y="277" width="0.7803%" height="15" fill="rgb(231,126,1)" fg:x="8433" fg:w="215"/><text x="30.8554%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (215 samples, 0.78%)</title><rect x="30.6054%" y="261" width="0.7803%" height="15" fill="rgb(243,166,3)" fg:x="8433" fg:w="215"/><text x="30.8554%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (180 samples, 0.65%)</title><rect x="30.7324%" y="245" width="0.6533%" height="15" fill="rgb(223,22,34)" fg:x="8468" fg:w="180"/><text x="30.9824%" y="255.50"></text></g><g><title>alloc::raw_vec::handle_reserve (13 samples, 0.05%)</title><rect x="31.3385%" y="229" width="0.0472%" height="15" fill="rgb(251,52,51)" fg:x="8635" fg:w="13"/><text x="31.5885%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 0.04%)</title><rect x="31.3457%" y="213" width="0.0399%" height="15" fill="rgb(221,165,28)" fg:x="8637" fg:w="11"/><text x="31.5957%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_fold (6 samples, 0.02%)</title><rect x="31.4546%" y="245" width="0.0218%" height="15" fill="rgb(218,121,47)" fg:x="8667" fg:w="6"/><text x="31.7046%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (29 samples, 0.11%)</title><rect x="32.1732%" y="197" width="0.1052%" height="15" fill="rgb(209,120,9)" fg:x="8865" fg:w="29"/><text x="32.4232%" y="207.50"></text></g><g><title>core::ptr::invalid (7 samples, 0.03%)</title><rect x="32.2821%" y="181" width="0.0254%" height="15" fill="rgb(236,68,12)" fg:x="8895" fg:w="7"/><text x="32.5321%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (63 samples, 0.23%)</title><rect x="32.1260%" y="213" width="0.2286%" height="15" fill="rgb(225,194,26)" fg:x="8852" fg:w="63"/><text x="32.3760%" y="223.50"></text></g><g><title>core::ptr::null (21 samples, 0.08%)</title><rect x="32.2784%" y="197" width="0.0762%" height="15" fill="rgb(231,84,39)" fg:x="8894" fg:w="21"/><text x="32.5284%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (13 samples, 0.05%)</title><rect x="32.3075%" y="181" width="0.0472%" height="15" fill="rgb(210,11,45)" fg:x="8902" fg:w="13"/><text x="32.5575%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (107 samples, 0.39%)</title><rect x="32.4853%" y="197" width="0.3883%" height="15" fill="rgb(224,54,52)" fg:x="8951" fg:w="107"/><text x="32.7353%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (85 samples, 0.31%)</title><rect x="32.5651%" y="181" width="0.3085%" height="15" fill="rgb(238,102,14)" fg:x="8973" fg:w="85"/><text x="32.8151%" y="191.50"></text></g><g><title>core::ptr::invalid_mut (5 samples, 0.02%)</title><rect x="32.8954%" y="181" width="0.0181%" height="15" fill="rgb(243,160,52)" fg:x="9064" fg:w="5"/><text x="33.1454%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (161 samples, 0.58%)</title><rect x="32.3546%" y="213" width="0.5843%" height="15" fill="rgb(216,114,19)" fg:x="8915" fg:w="161"/><text x="32.6046%" y="223.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.07%)</title><rect x="32.8736%" y="197" width="0.0653%" height="15" fill="rgb(244,166,37)" fg:x="9058" fg:w="18"/><text x="33.1236%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (7 samples, 0.03%)</title><rect x="32.9136%" y="181" width="0.0254%" height="15" fill="rgb(246,29,44)" fg:x="9069" fg:w="7"/><text x="33.1636%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.02%)</title><rect x="32.9716%" y="197" width="0.0218%" height="15" fill="rgb(215,56,53)" fg:x="9085" fg:w="6"/><text x="33.2216%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="32.9716%" y="181" width="0.0218%" height="15" fill="rgb(217,60,2)" fg:x="9085" fg:w="6"/><text x="33.2216%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (263 samples, 0.95%)</title><rect x="32.0643%" y="229" width="0.9545%" height="15" fill="rgb(207,26,24)" fg:x="8835" fg:w="263"/><text x="32.3143%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (22 samples, 0.08%)</title><rect x="32.9390%" y="213" width="0.0798%" height="15" fill="rgb(252,210,15)" fg:x="9076" fg:w="22"/><text x="33.1890%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.03%)</title><rect x="32.9934%" y="197" width="0.0254%" height="15" fill="rgb(253,209,26)" fg:x="9091" fg:w="7"/><text x="33.2434%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.02%)</title><rect x="33.7047%" y="133" width="0.0218%" height="15" fill="rgb(238,170,14)" fg:x="9287" fg:w="6"/><text x="33.9547%" y="143.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="33.7120%" y="117" width="0.0145%" height="15" fill="rgb(216,178,15)" fg:x="9289" fg:w="4"/><text x="33.9620%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (58 samples, 0.21%)</title><rect x="33.8209%" y="117" width="0.2105%" height="15" fill="rgb(250,197,2)" fg:x="9319" fg:w="58"/><text x="34.0709%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (25 samples, 0.09%)</title><rect x="33.9406%" y="101" width="0.0907%" height="15" fill="rgb(212,70,42)" fg:x="9352" fg:w="25"/><text x="34.1906%" y="111.50"></text></g><g><title>core::ptr::invalid_mut (17 samples, 0.06%)</title><rect x="34.0531%" y="101" width="0.0617%" height="15" fill="rgb(227,213,9)" fg:x="9383" fg:w="17"/><text x="34.3031%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (134 samples, 0.49%)</title><rect x="33.6938%" y="149" width="0.4863%" height="15" fill="rgb(245,99,25)" fg:x="9284" fg:w="134"/><text x="33.9438%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (125 samples, 0.45%)</title><rect x="33.7265%" y="133" width="0.4537%" height="15" fill="rgb(250,82,29)" fg:x="9293" fg:w="125"/><text x="33.9765%" y="143.50"></text></g><g><title>core::ptr::null_mut (41 samples, 0.15%)</title><rect x="34.0314%" y="117" width="0.1488%" height="15" fill="rgb(241,226,54)" fg:x="9377" fg:w="41"/><text x="34.2814%" y="127.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.07%)</title><rect x="34.1148%" y="101" width="0.0653%" height="15" fill="rgb(221,99,41)" fg:x="9400" fg:w="18"/><text x="34.3648%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.01%)</title><rect x="34.1802%" y="149" width="0.0145%" height="15" fill="rgb(213,90,21)" fg:x="9418" fg:w="4"/><text x="34.4302%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (194 samples, 0.70%)</title><rect x="33.5269%" y="165" width="0.7041%" height="15" fill="rgb(205,208,24)" fg:x="9238" fg:w="194"/><text x="33.7769%" y="175.50"></text></g><g><title>core::ptr::write (10 samples, 0.04%)</title><rect x="34.1947%" y="149" width="0.0363%" height="15" fill="rgb(246,31,12)" fg:x="9422" fg:w="10"/><text x="34.4447%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (347 samples, 1.26%)</title><rect x="33.1676%" y="213" width="1.2593%" height="15" fill="rgb(213,154,6)" fg:x="9139" fg:w="347"/><text x="33.4176%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (342 samples, 1.24%)</title><rect x="33.1857%" y="197" width="1.2412%" height="15" fill="rgb(222,163,29)" fg:x="9144" fg:w="342"/><text x="33.4357%" y="207.50"></text></g><g><title>alloc::string::String::push (324 samples, 1.18%)</title><rect x="33.2511%" y="181" width="1.1759%" height="15" fill="rgb(227,201,8)" fg:x="9162" fg:w="324"/><text x="33.5011%" y="191.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (54 samples, 0.20%)</title><rect x="34.2310%" y="165" width="0.1960%" height="15" fill="rgb(233,9,32)" fg:x="9432" fg:w="54"/><text x="34.4810%" y="175.50"></text></g><g><title>core::char::methods::len_utf8 (50 samples, 0.18%)</title><rect x="34.2455%" y="149" width="0.1815%" height="15" fill="rgb(217,54,24)" fg:x="9436" fg:w="50"/><text x="34.4955%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (842 samples, 3.06%)</title><rect x="31.4256%" y="261" width="3.0558%" height="15" fill="rgb(235,192,0)" fg:x="8659" fg:w="842"/><text x="31.6756%" y="271.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (828 samples, 3.01%)</title><rect x="31.4764%" y="245" width="3.0050%" height="15" fill="rgb(235,45,9)" fg:x="8673" fg:w="828"/><text x="31.7264%" y="255.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (403 samples, 1.46%)</title><rect x="33.0188%" y="229" width="1.4626%" height="15" fill="rgb(246,42,40)" fg:x="9098" fg:w="403"/><text x="33.2688%" y="239.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15 samples, 0.05%)</title><rect x="34.4269%" y="213" width="0.0544%" height="15" fill="rgb(248,111,24)" fg:x="9486" fg:w="15"/><text x="34.6769%" y="223.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for char&gt;::clone (6 samples, 0.02%)</title><rect x="34.4596%" y="197" width="0.0218%" height="15" fill="rgb(249,65,22)" fg:x="9495" fg:w="6"/><text x="34.7096%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;char&gt;&gt;::extend (1,097 samples, 3.98%)</title><rect x="30.5291%" y="325" width="3.9813%" height="15" fill="rgb(238,111,51)" fg:x="8412" fg:w="1097"/><text x="30.7791%" y="335.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1,096 samples, 3.98%)</title><rect x="30.5328%" y="309" width="3.9776%" height="15" fill="rgb(250,118,22)" fg:x="8413" fg:w="1096"/><text x="30.7828%" y="319.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (861 samples, 3.12%)</title><rect x="31.3856%" y="293" width="3.1248%" height="15" fill="rgb(234,84,26)" fg:x="8648" fg:w="861"/><text x="31.6356%" y="303.50">cor..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (861 samples, 3.12%)</title><rect x="31.3856%" y="277" width="3.1248%" height="15" fill="rgb(243,172,12)" fg:x="8648" fg:w="861"/><text x="31.6356%" y="287.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::map (8 samples, 0.03%)</title><rect x="34.4814%" y="261" width="0.0290%" height="15" fill="rgb(236,150,49)" fg:x="9501" fg:w="8"/><text x="34.7314%" y="271.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (3 samples, 0.01%)</title><rect x="34.4995%" y="245" width="0.0109%" height="15" fill="rgb(225,197,26)" fg:x="9506" fg:w="3"/><text x="34.7495%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,192 samples, 4.33%)</title><rect x="30.5037%" y="357" width="4.3261%" height="15" fill="rgb(214,17,42)" fg:x="8405" fg:w="1192"/><text x="30.7537%" y="367.50">core:..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;char&gt;&gt;::from_iter (1,189 samples, 4.32%)</title><rect x="30.5146%" y="341" width="4.3152%" height="15" fill="rgb(224,165,40)" fg:x="8408" fg:w="1189"/><text x="30.7646%" y="351.50">&lt;allo..</text></g><g><title>alloc::string::String::new (88 samples, 0.32%)</title><rect x="34.5104%" y="325" width="0.3194%" height="15" fill="rgb(246,100,4)" fg:x="9509" fg:w="88"/><text x="34.7604%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.03%)</title><rect x="34.8879%" y="293" width="0.0290%" height="15" fill="rgb(222,103,0)" fg:x="9613" fg:w="8"/><text x="35.1379%" y="303.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="34.8951%" y="277" width="0.0218%" height="15" fill="rgb(227,189,26)" fg:x="9615" fg:w="6"/><text x="35.1451%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="34.9024%" y="261" width="0.0145%" height="15" fill="rgb(214,202,17)" fg:x="9617" fg:w="4"/><text x="35.1524%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (18 samples, 0.07%)</title><rect x="34.9604%" y="277" width="0.0653%" height="15" fill="rgb(229,111,3)" fg:x="9633" fg:w="18"/><text x="35.2104%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.05%)</title><rect x="34.9713%" y="261" width="0.0544%" height="15" fill="rgb(229,172,15)" fg:x="9636" fg:w="15"/><text x="35.2213%" y="271.50"></text></g><g><title>core::ptr::invalid_mut (15 samples, 0.05%)</title><rect x="35.0258%" y="261" width="0.0544%" height="15" fill="rgb(230,224,35)" fg:x="9651" fg:w="15"/><text x="35.2758%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (55 samples, 0.20%)</title><rect x="34.8842%" y="309" width="0.1996%" height="15" fill="rgb(251,141,6)" fg:x="9612" fg:w="55"/><text x="35.1342%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (46 samples, 0.17%)</title><rect x="34.9169%" y="293" width="0.1669%" height="15" fill="rgb(225,208,6)" fg:x="9621" fg:w="46"/><text x="35.1669%" y="303.50"></text></g><g><title>core::ptr::null_mut (16 samples, 0.06%)</title><rect x="35.0258%" y="277" width="0.0581%" height="15" fill="rgb(246,181,16)" fg:x="9651" fg:w="16"/><text x="35.2758%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.23%)</title><rect x="34.8552%" y="325" width="0.2323%" height="15" fill="rgb(227,129,36)" fg:x="9604" fg:w="64"/><text x="35.1052%" y="335.50"></text></g><g><title>cfree (18 samples, 0.07%)</title><rect x="35.1637%" y="261" width="0.0653%" height="15" fill="rgb(248,117,24)" fg:x="9689" fg:w="18"/><text x="35.4137%" y="271.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="35.1746%" y="245" width="0.0544%" height="15" fill="rgb(214,185,35)" fg:x="9692" fg:w="15"/><text x="35.4246%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.09%)</title><rect x="35.1455%" y="293" width="0.0907%" height="15" fill="rgb(236,150,34)" fg:x="9684" fg:w="25"/><text x="35.3955%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.08%)</title><rect x="35.1564%" y="277" width="0.0798%" height="15" fill="rgb(243,228,27)" fg:x="9687" fg:w="22"/><text x="35.4064%" y="287.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.11%)</title><rect x="35.3996%" y="277" width="0.1052%" height="15" fill="rgb(245,77,44)" fg:x="9754" fg:w="29"/><text x="35.6496%" y="287.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (14 samples, 0.05%)</title><rect x="35.4540%" y="261" width="0.0508%" height="15" fill="rgb(235,214,42)" fg:x="9769" fg:w="14"/><text x="35.7040%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.02%)</title><rect x="35.4867%" y="245" width="0.0181%" height="15" fill="rgb(221,74,3)" fg:x="9778" fg:w="5"/><text x="35.7367%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (5 samples, 0.02%)</title><rect x="35.5956%" y="245" width="0.0181%" height="15" fill="rgb(206,121,29)" fg:x="9808" fg:w="5"/><text x="35.8456%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (31 samples, 0.11%)</title><rect x="35.5048%" y="277" width="0.1125%" height="15" fill="rgb(249,131,53)" fg:x="9783" fg:w="31"/><text x="35.7548%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (30 samples, 0.11%)</title><rect x="35.5085%" y="261" width="0.1089%" height="15" fill="rgb(236,170,29)" fg:x="9784" fg:w="30"/><text x="35.7585%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (221 samples, 0.80%)</title><rect x="34.8298%" y="357" width="0.8021%" height="15" fill="rgb(247,96,15)" fg:x="9597" fg:w="221"/><text x="35.0798%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (217 samples, 0.79%)</title><rect x="34.8443%" y="341" width="0.7875%" height="15" fill="rgb(211,210,7)" fg:x="9601" fg:w="217"/><text x="35.0943%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (150 samples, 0.54%)</title><rect x="35.0875%" y="325" width="0.5444%" height="15" fill="rgb(240,88,50)" fg:x="9668" fg:w="150"/><text x="35.3375%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.53%)</title><rect x="35.1020%" y="309" width="0.5299%" height="15" fill="rgb(209,229,26)" fg:x="9672" fg:w="146"/><text x="35.3520%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (109 samples, 0.40%)</title><rect x="35.2363%" y="293" width="0.3956%" height="15" fill="rgb(210,68,23)" fg:x="9709" fg:w="109"/><text x="35.4863%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.03%)</title><rect x="35.7407%" y="309" width="0.0327%" height="15" fill="rgb(229,180,13)" fg:x="9848" fg:w="9"/><text x="35.9907%" y="319.50"></text></g><g><title>core::ptr::invalid (7 samples, 0.03%)</title><rect x="35.7770%" y="293" width="0.0254%" height="15" fill="rgb(236,53,44)" fg:x="9858" fg:w="7"/><text x="36.0270%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (30 samples, 0.11%)</title><rect x="35.7081%" y="325" width="0.1089%" height="15" fill="rgb(244,214,29)" fg:x="9839" fg:w="30"/><text x="35.9581%" y="335.50"></text></g><g><title>core::ptr::null (12 samples, 0.04%)</title><rect x="35.7734%" y="309" width="0.0436%" height="15" fill="rgb(220,75,29)" fg:x="9857" fg:w="12"/><text x="36.0234%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="35.8024%" y="293" width="0.0145%" height="15" fill="rgb(214,183,37)" fg:x="9865" fg:w="4"/><text x="36.0524%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (52 samples, 0.19%)</title><rect x="35.6319%" y="357" width="0.1887%" height="15" fill="rgb(239,117,29)" fg:x="9818" fg:w="52"/><text x="35.8819%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (46 samples, 0.17%)</title><rect x="35.6536%" y="341" width="0.1669%" height="15" fill="rgb(237,171,35)" fg:x="9824" fg:w="46"/><text x="35.9036%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (26 samples, 0.09%)</title><rect x="36.0928%" y="213" width="0.0944%" height="15" fill="rgb(229,178,53)" fg:x="9945" fg:w="26"/><text x="36.3428%" y="223.50"></text></g><g><title>core::ptr::invalid (5 samples, 0.02%)</title><rect x="36.1871%" y="197" width="0.0181%" height="15" fill="rgb(210,102,19)" fg:x="9971" fg:w="5"/><text x="36.4371%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (38 samples, 0.14%)</title><rect x="36.0710%" y="229" width="0.1379%" height="15" fill="rgb(235,127,22)" fg:x="9939" fg:w="38"/><text x="36.3210%" y="239.50"></text></g><g><title>core::ptr::null (6 samples, 0.02%)</title><rect x="36.1871%" y="213" width="0.0218%" height="15" fill="rgb(244,31,31)" fg:x="9971" fg:w="6"/><text x="36.4371%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (48 samples, 0.17%)</title><rect x="36.0456%" y="261" width="0.1742%" height="15" fill="rgb(231,43,21)" fg:x="9932" fg:w="48"/><text x="36.2956%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (45 samples, 0.16%)</title><rect x="36.0565%" y="245" width="0.1633%" height="15" fill="rgb(217,131,35)" fg:x="9935" fg:w="45"/><text x="36.3065%" y="255.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqPattern&lt;C&gt; as core::str::pattern::Pattern&gt;::into_searcher (88 samples, 0.32%)</title><rect x="35.9331%" y="309" width="0.3194%" height="15" fill="rgb(221,149,4)" fg:x="9901" fg:w="88"/><text x="36.1831%" y="319.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (69 samples, 0.25%)</title><rect x="36.0020%" y="293" width="0.2504%" height="15" fill="rgb(232,170,28)" fg:x="9920" fg:w="69"/><text x="36.2520%" y="303.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (65 samples, 0.24%)</title><rect x="36.0165%" y="277" width="0.2359%" height="15" fill="rgb(238,56,10)" fg:x="9924" fg:w="65"/><text x="36.2665%" y="287.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (9 samples, 0.03%)</title><rect x="36.2198%" y="261" width="0.0327%" height="15" fill="rgb(235,196,14)" fg:x="9980" fg:w="9"/><text x="36.4698%" y="271.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (150 samples, 0.54%)</title><rect x="35.9149%" y="325" width="0.5444%" height="15" fill="rgb(216,45,48)" fg:x="9896" fg:w="150"/><text x="36.1649%" y="335.50"></text></g><g><title>[libc.so.6] (57 samples, 0.21%)</title><rect x="36.2524%" y="309" width="0.2069%" height="15" fill="rgb(238,213,17)" fg:x="9989" fg:w="57"/><text x="36.5024%" y="319.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (41 samples, 0.15%)</title><rect x="36.5319%" y="277" width="0.1488%" height="15" fill="rgb(212,13,2)" fg:x="10066" fg:w="41"/><text x="36.7819%" y="287.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end::{{closure}} (28 samples, 0.10%)</title><rect x="36.5791%" y="261" width="0.1016%" height="15" fill="rgb(240,114,20)" fg:x="10079" fg:w="28"/><text x="36.8291%" y="271.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (21 samples, 0.08%)</title><rect x="36.6045%" y="245" width="0.0762%" height="15" fill="rgb(228,41,40)" fg:x="10086" fg:w="21"/><text x="36.8545%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (8 samples, 0.03%)</title><rect x="36.7605%" y="261" width="0.0290%" height="15" fill="rgb(244,132,35)" fg:x="10129" fg:w="8"/><text x="37.0105%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (4 samples, 0.01%)</title><rect x="36.7896%" y="261" width="0.0145%" height="15" fill="rgb(253,189,4)" fg:x="10137" fg:w="4"/><text x="37.0396%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (37 samples, 0.13%)</title><rect x="36.6807%" y="277" width="0.1343%" height="15" fill="rgb(224,37,19)" fg:x="10107" fg:w="37"/><text x="36.9307%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.08%)</title><rect x="36.9166%" y="245" width="0.0835%" height="15" fill="rgb(235,223,18)" fg:x="10172" fg:w="23"/><text x="37.1666%" y="255.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back::{{closure}} (8 samples, 0.03%)</title><rect x="36.9710%" y="229" width="0.0290%" height="15" fill="rgb(235,163,25)" fg:x="10187" fg:w="8"/><text x="37.2210%" y="239.50"></text></g><g><title>core::char::from_u32_unchecked (4 samples, 0.01%)</title><rect x="36.9856%" y="213" width="0.0145%" height="15" fill="rgb(217,145,28)" fg:x="10191" fg:w="4"/><text x="37.2356%" y="223.50"></text></g><g><title>core::char::convert::from_u32_unchecked (4 samples, 0.01%)</title><rect x="36.9856%" y="197" width="0.0145%" height="15" fill="rgb(223,223,32)" fg:x="10191" fg:w="4"/><text x="37.2356%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (29 samples, 0.11%)</title><rect x="37.1235%" y="197" width="0.1052%" height="15" fill="rgb(227,189,39)" fg:x="10229" fg:w="29"/><text x="37.3735%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (33 samples, 0.12%)</title><rect x="37.1126%" y="213" width="0.1198%" height="15" fill="rgb(248,10,22)" fg:x="10226" fg:w="33"/><text x="37.3626%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (40 samples, 0.15%)</title><rect x="37.2977%" y="197" width="0.1452%" height="15" fill="rgb(248,46,39)" fg:x="10277" fg:w="40"/><text x="37.5477%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (25 samples, 0.09%)</title><rect x="37.3521%" y="181" width="0.0907%" height="15" fill="rgb(248,113,48)" fg:x="10292" fg:w="25"/><text x="37.6021%" y="191.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.03%)</title><rect x="37.4465%" y="181" width="0.0327%" height="15" fill="rgb(245,16,25)" fg:x="10318" fg:w="9"/><text x="37.6965%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (71 samples, 0.26%)</title><rect x="37.2323%" y="213" width="0.2577%" height="15" fill="rgb(249,152,16)" fg:x="10259" fg:w="71"/><text x="37.4823%" y="223.50"></text></g><g><title>core::ptr::null_mut (13 samples, 0.05%)</title><rect x="37.4428%" y="197" width="0.0472%" height="15" fill="rgb(250,16,1)" fg:x="10317" fg:w="13"/><text x="37.6928%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="37.4791%" y="181" width="0.0109%" height="15" fill="rgb(249,138,3)" fg:x="10327" fg:w="3"/><text x="37.7291%" y="191.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (170 samples, 0.62%)</title><rect x="36.8985%" y="261" width="0.6170%" height="15" fill="rgb(227,71,41)" fg:x="10167" fg:w="170"/><text x="37.1485%" y="271.50"></text></g><g><title>core::str::validations::next_code_point_reverse (142 samples, 0.52%)</title><rect x="37.0001%" y="245" width="0.5154%" height="15" fill="rgb(209,184,23)" fg:x="10195" fg:w="142"/><text x="37.2501%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (119 samples, 0.43%)</title><rect x="37.0835%" y="229" width="0.4319%" height="15" fill="rgb(223,215,31)" fg:x="10218" fg:w="119"/><text x="37.3335%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::pre_dec_end (7 samples, 0.03%)</title><rect x="37.4900%" y="213" width="0.0254%" height="15" fill="rgb(210,146,28)" fg:x="10330" fg:w="7"/><text x="37.7400%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (8 samples, 0.03%)</title><rect x="37.7949%" y="213" width="0.0290%" height="15" fill="rgb(209,183,41)" fg:x="10414" fg:w="8"/><text x="38.0449%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (11 samples, 0.04%)</title><rect x="37.8239%" y="213" width="0.0399%" height="15" fill="rgb(209,224,45)" fg:x="10422" fg:w="11"/><text x="38.0739%" y="223.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (393 samples, 1.43%)</title><rect x="36.4593%" y="325" width="1.4263%" height="15" fill="rgb(224,209,51)" fg:x="10046" fg:w="393"/><text x="36.7093%" y="335.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (393 samples, 1.43%)</title><rect x="36.4593%" y="309" width="1.4263%" height="15" fill="rgb(223,17,39)" fg:x="10046" fg:w="393"/><text x="36.7093%" y="319.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (386 samples, 1.40%)</title><rect x="36.4847%" y="293" width="1.4009%" height="15" fill="rgb(234,204,37)" fg:x="10053" fg:w="386"/><text x="36.7347%" y="303.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (295 samples, 1.07%)</title><rect x="36.8150%" y="277" width="1.0706%" height="15" fill="rgb(236,120,5)" fg:x="10144" fg:w="295"/><text x="37.0650%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (102 samples, 0.37%)</title><rect x="37.5154%" y="261" width="0.3702%" height="15" fill="rgb(248,97,27)" fg:x="10337" fg:w="102"/><text x="37.7654%" y="271.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back::{{closure}} (72 samples, 0.26%)</title><rect x="37.6243%" y="245" width="0.2613%" height="15" fill="rgb(240,66,17)" fg:x="10367" fg:w="72"/><text x="37.8743%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (51 samples, 0.19%)</title><rect x="37.7005%" y="229" width="0.1851%" height="15" fill="rgb(210,79,3)" fg:x="10388" fg:w="51"/><text x="37.9505%" y="239.50"></text></g><g><title>core::slice::iter::size_from_ptr (4 samples, 0.01%)</title><rect x="37.8711%" y="213" width="0.0145%" height="15" fill="rgb(214,176,27)" fg:x="10435" fg:w="4"/><text x="38.1211%" y="223.50"></text></g><g><title>core::mem::size_of (4 samples, 0.01%)</title><rect x="37.8711%" y="197" width="0.0145%" height="15" fill="rgb(235,185,3)" fg:x="10435" fg:w="4"/><text x="38.1211%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.02%)</title><rect x="37.9400%" y="293" width="0.0218%" height="15" fill="rgb(227,24,12)" fg:x="10454" fg:w="6"/><text x="38.1900%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,486 samples, 9.02%)</title><rect x="29.0121%" y="389" width="9.0223%" height="15" fill="rgb(252,169,48)" fg:x="7994" fg:w="2486"/><text x="29.2621%" y="399.50">core::iter::a..</text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (2,464 samples, 8.94%)</title><rect x="29.0920%" y="373" width="8.9424%" height="15" fill="rgb(212,65,1)" fg:x="8016" fg:w="2464"/><text x="29.3420%" y="383.50">unkr::transpo..</text></g><g><title>core::str::&lt;impl str&gt;::trim_end (610 samples, 2.21%)</title><rect x="35.8206%" y="357" width="2.2138%" height="15" fill="rgb(242,39,24)" fg:x="9870" fg:w="610"/><text x="36.0706%" y="367.50">c..</text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (595 samples, 2.16%)</title><rect x="35.8750%" y="341" width="2.1594%" height="15" fill="rgb(249,32,23)" fg:x="9885" fg:w="595"/><text x="36.1250%" y="351.50">c..</text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (41 samples, 0.15%)</title><rect x="37.8856%" y="325" width="0.1488%" height="15" fill="rgb(251,195,23)" fg:x="10439" fg:w="41"/><text x="38.1356%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (37 samples, 0.13%)</title><rect x="37.9001%" y="309" width="0.1343%" height="15" fill="rgb(236,174,8)" fg:x="10443" fg:w="37"/><text x="38.1501%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts (19 samples, 0.07%)</title><rect x="37.9654%" y="293" width="0.0690%" height="15" fill="rgb(220,197,8)" fg:x="10461" fg:w="19"/><text x="38.2154%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.07%)</title><rect x="37.9691%" y="277" width="0.0653%" height="15" fill="rgb(240,108,37)" fg:x="10462" fg:w="18"/><text x="38.2191%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,621 samples, 9.51%)</title><rect x="28.5331%" y="421" width="9.5122%" height="15" fill="rgb(232,176,24)" fg:x="7862" fg:w="2621"/><text x="28.7831%" y="431.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,620 samples, 9.51%)</title><rect x="28.5367%" y="405" width="9.5086%" height="15" fill="rgb(243,35,29)" fg:x="7863" fg:w="2620"/><text x="28.7867%" y="415.50">core::iter::tr..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;alloc::vec::Vec&lt;char&gt;,alloc::string::String,(),unkr::transpose::internal_encrypt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::string::String,&lt;alloc::vec::Vec&lt;alloc::string::String&gt; as alloc::vec::spec_extend::SpecExtend&lt;alloc::string::String,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;alloc::vec::Vec&lt;char&gt;&gt;,unkr::transpose::internal_encrypt::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (3 samples, 0.01%)</title><rect x="38.0344%" y="389" width="0.0109%" height="15" fill="rgb(210,37,18)" fg:x="10480" fg:w="3"/><text x="38.2844%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::string::String,&lt;alloc::vec::Vec&lt;alloc::string::String&gt; as alloc::vec::spec_extend::SpecExtend&lt;alloc::string::String,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;alloc::vec::Vec&lt;char&gt;&gt;,unkr::transpose::internal_encrypt::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (3 samples, 0.01%)</title><rect x="38.0344%" y="373" width="0.0109%" height="15" fill="rgb(224,184,40)" fg:x="10480" fg:w="3"/><text x="38.2844%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,649 samples, 9.61%)</title><rect x="28.4460%" y="453" width="9.6138%" height="15" fill="rgb(236,39,29)" fg:x="7838" fg:w="2649"/><text x="28.6960%" y="463.50">&lt;alloc::vec::V..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,634 samples, 9.56%)</title><rect x="28.5004%" y="437" width="9.5594%" height="15" fill="rgb(232,48,39)" fg:x="7853" fg:w="2634"/><text x="28.7504%" y="447.50">core::iter::tr..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (4 samples, 0.01%)</title><rect x="38.0453%" y="421" width="0.0145%" height="15" fill="rgb(236,34,42)" fg:x="10483" fg:w="4"/><text x="38.2953%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="38.1179%" y="357" width="0.0181%" height="15" fill="rgb(243,106,37)" fg:x="10503" fg:w="5"/><text x="38.3679%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.01%)</title><rect x="38.1251%" y="341" width="0.0109%" height="15" fill="rgb(218,96,6)" fg:x="10505" fg:w="3"/><text x="38.3751%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.06%)</title><rect x="38.0925%" y="389" width="0.0581%" height="15" fill="rgb(235,130,12)" fg:x="10496" fg:w="16"/><text x="38.3425%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.05%)</title><rect x="38.0997%" y="373" width="0.0508%" height="15" fill="rgb(231,95,0)" fg:x="10498" fg:w="14"/><text x="38.3497%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="38.1360%" y="357" width="0.0145%" height="15" fill="rgb(228,12,23)" fg:x="10508" fg:w="4"/><text x="38.3860%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="38.1505%" y="389" width="0.0109%" height="15" fill="rgb(216,12,1)" fg:x="10512" fg:w="3"/><text x="38.4005%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,698 samples, 9.79%)</title><rect x="28.3734%" y="517" width="9.7917%" height="15" fill="rgb(219,59,3)" fg:x="7818" fg:w="2698"/><text x="28.6234%" y="527.50">core::iter::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,693 samples, 9.77%)</title><rect x="28.3915%" y="501" width="9.7735%" height="15" fill="rgb(215,208,46)" fg:x="7823" fg:w="2693"/><text x="28.6415%" y="511.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,684 samples, 9.74%)</title><rect x="28.4242%" y="485" width="9.7409%" height="15" fill="rgb(254,224,29)" fg:x="7832" fg:w="2684"/><text x="28.6742%" y="495.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,683 samples, 9.74%)</title><rect x="28.4278%" y="469" width="9.7372%" height="15" fill="rgb(232,14,29)" fg:x="7833" fg:w="2683"/><text x="28.6778%" y="479.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (28 samples, 0.10%)</title><rect x="38.0634%" y="453" width="0.1016%" height="15" fill="rgb(208,45,52)" fg:x="10488" fg:w="28"/><text x="38.3134%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.10%)</title><rect x="38.0634%" y="437" width="0.1016%" height="15" fill="rgb(234,191,28)" fg:x="10488" fg:w="28"/><text x="38.3134%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.10%)</title><rect x="38.0671%" y="421" width="0.0980%" height="15" fill="rgb(244,67,43)" fg:x="10489" fg:w="27"/><text x="38.3171%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.09%)</title><rect x="38.0707%" y="405" width="0.0944%" height="15" fill="rgb(236,189,24)" fg:x="10490" fg:w="26"/><text x="38.3207%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.03%)</title><rect x="38.2848%" y="501" width="0.0327%" height="15" fill="rgb(239,214,33)" fg:x="10549" fg:w="9"/><text x="38.5348%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (61 samples, 0.22%)</title><rect x="38.3574%" y="485" width="0.2214%" height="15" fill="rgb(226,176,41)" fg:x="10569" fg:w="61"/><text x="38.6074%" y="495.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (24 samples, 0.09%)</title><rect x="38.4917%" y="469" width="0.0871%" height="15" fill="rgb(248,47,8)" fg:x="10606" fg:w="24"/><text x="38.7417%" y="479.50"></text></g><g><title>core::char::from_u32_unchecked (23 samples, 0.08%)</title><rect x="38.4953%" y="453" width="0.0835%" height="15" fill="rgb(218,81,44)" fg:x="10607" fg:w="23"/><text x="38.7453%" y="463.50"></text></g><g><title>core::char::convert::from_u32_unchecked (23 samples, 0.08%)</title><rect x="38.4953%" y="437" width="0.0835%" height="15" fill="rgb(213,98,6)" fg:x="10607" fg:w="23"/><text x="38.7453%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="39.1812%" y="469" width="0.0218%" height="15" fill="rgb(222,85,22)" fg:x="10796" fg:w="6"/><text x="39.4312%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (41 samples, 0.15%)</title><rect x="39.3663%" y="437" width="0.1488%" height="15" fill="rgb(239,46,39)" fg:x="10847" fg:w="41"/><text x="39.6163%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (84 samples, 0.30%)</title><rect x="39.2938%" y="453" width="0.3049%" height="15" fill="rgb(237,12,29)" fg:x="10827" fg:w="84"/><text x="39.5438%" y="463.50"></text></g><g><title>core::ptr::null (23 samples, 0.08%)</title><rect x="39.5151%" y="437" width="0.0835%" height="15" fill="rgb(214,77,8)" fg:x="10888" fg:w="23"/><text x="39.7651%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (21 samples, 0.08%)</title><rect x="39.5224%" y="421" width="0.0762%" height="15" fill="rgb(217,168,37)" fg:x="10890" fg:w="21"/><text x="39.7724%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (43 samples, 0.16%)</title><rect x="39.6784%" y="437" width="0.1561%" height="15" fill="rgb(221,217,23)" fg:x="10933" fg:w="43"/><text x="39.9284%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (28 samples, 0.10%)</title><rect x="39.7329%" y="421" width="0.1016%" height="15" fill="rgb(243,229,36)" fg:x="10948" fg:w="28"/><text x="39.9829%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (4 samples, 0.01%)</title><rect x="39.8490%" y="421" width="0.0145%" height="15" fill="rgb(251,163,40)" fg:x="10980" fg:w="4"/><text x="40.0990%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (77 samples, 0.28%)</title><rect x="39.5986%" y="453" width="0.2795%" height="15" fill="rgb(237,222,12)" fg:x="10911" fg:w="77"/><text x="39.8486%" y="463.50"></text></g><g><title>core::ptr::null_mut (12 samples, 0.04%)</title><rect x="39.8345%" y="437" width="0.0436%" height="15" fill="rgb(248,132,6)" fg:x="10976" fg:w="12"/><text x="40.0845%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="39.8635%" y="421" width="0.0145%" height="15" fill="rgb(227,167,50)" fg:x="10984" fg:w="4"/><text x="40.1135%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.03%)</title><rect x="39.9180%" y="437" width="0.0254%" height="15" fill="rgb(242,84,37)" fg:x="10999" fg:w="7"/><text x="40.1680%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.02%)</title><rect x="39.9252%" y="421" width="0.0181%" height="15" fill="rgb(212,4,50)" fg:x="11001" fg:w="5"/><text x="40.1752%" y="431.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (450 samples, 1.63%)</title><rect x="38.3175%" y="501" width="1.6332%" height="15" fill="rgb(230,228,32)" fg:x="10558" fg:w="450"/><text x="38.5675%" y="511.50"></text></g><g><title>core::str::validations::next_code_point (378 samples, 1.37%)</title><rect x="38.5788%" y="485" width="1.3719%" height="15" fill="rgb(248,217,23)" fg:x="10630" fg:w="378"/><text x="38.8288%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (206 samples, 0.75%)</title><rect x="39.2030%" y="469" width="0.7476%" height="15" fill="rgb(238,197,32)" fg:x="10802" fg:w="206"/><text x="39.4530%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (20 samples, 0.07%)</title><rect x="39.8781%" y="453" width="0.0726%" height="15" fill="rgb(236,106,1)" fg:x="10988" fg:w="20"/><text x="40.1281%" y="463.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.09%)</title><rect x="41.8560%" y="485" width="0.0907%" height="15" fill="rgb(219,228,13)" fg:x="11533" fg:w="25"/><text x="42.1060%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (517 samples, 1.88%)</title><rect x="41.9467%" y="485" width="1.8763%" height="15" fill="rgb(238,30,35)" fg:x="11558" fg:w="517"/><text x="42.1967%" y="495.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (834 samples, 3.03%)</title><rect x="44.7630%" y="469" width="3.0268%" height="15" fill="rgb(236,70,23)" fg:x="12334" fg:w="834"/><text x="45.0130%" y="479.50">cor..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (436 samples, 1.58%)</title><rect x="46.2074%" y="453" width="1.5823%" height="15" fill="rgb(249,104,48)" fg:x="12732" fg:w="436"/><text x="46.4574%" y="463.50"></text></g><g><title>core::char::from_u32_unchecked (393 samples, 1.43%)</title><rect x="46.3635%" y="437" width="1.4263%" height="15" fill="rgb(254,117,50)" fg:x="12775" fg:w="393"/><text x="46.6135%" y="447.50"></text></g><g><title>core::char::convert::from_u32_unchecked (384 samples, 1.39%)</title><rect x="46.3962%" y="421" width="1.3936%" height="15" fill="rgb(223,152,4)" fg:x="12784" fg:w="384"/><text x="46.6462%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (228 samples, 0.83%)</title><rect x="54.3297%" y="453" width="0.8275%" height="15" fill="rgb(245,6,2)" fg:x="14970" fg:w="228"/><text x="54.5797%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (725 samples, 2.63%)</title><rect x="58.5505%" y="421" width="2.6312%" height="15" fill="rgb(249,150,24)" fg:x="16133" fg:w="725"/><text x="58.8005%" y="431.50">co..</text></g><g><title>core::ptr::invalid (7 samples, 0.03%)</title><rect x="61.5047%" y="405" width="0.0254%" height="15" fill="rgb(228,185,42)" fg:x="16947" fg:w="7"/><text x="61.7547%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1,263 samples, 4.58%)</title><rect x="57.2294%" y="437" width="4.5837%" height="15" fill="rgb(226,39,33)" fg:x="15769" fg:w="1263"/><text x="57.4794%" y="447.50">core:..</text></g><g><title>core::ptr::null (174 samples, 0.63%)</title><rect x="61.1817%" y="421" width="0.6315%" height="15" fill="rgb(221,166,19)" fg:x="16858" fg:w="174"/><text x="61.4317%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (78 samples, 0.28%)</title><rect x="61.5301%" y="405" width="0.2831%" height="15" fill="rgb(209,109,2)" fg:x="16954" fg:w="78"/><text x="61.7801%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1,181 samples, 4.29%)</title><rect x="63.9907%" y="421" width="4.2861%" height="15" fill="rgb(252,216,26)" fg:x="17632" fg:w="1181"/><text x="64.2407%" y="431.50">core:..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (869 samples, 3.15%)</title><rect x="65.1230%" y="405" width="3.1538%" height="15" fill="rgb(227,173,36)" fg:x="17944" fg:w="869"/><text x="65.3730%" y="415.50">cor..</text></g><g><title>core::ptr::invalid_mut (268 samples, 0.97%)</title><rect x="68.4910%" y="405" width="0.9726%" height="15" fill="rgb(209,90,7)" fg:x="18872" fg:w="268"/><text x="68.7410%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2,244 samples, 8.14%)</title><rect x="61.8132%" y="437" width="8.1440%" height="15" fill="rgb(250,194,11)" fg:x="17032" fg:w="2244"/><text x="62.0632%" y="447.50">core::ptr::..</text></g><g><title>core::ptr::null_mut (463 samples, 1.68%)</title><rect x="68.2768%" y="421" width="1.6803%" height="15" fill="rgb(220,72,50)" fg:x="18813" fg:w="463"/><text x="68.5268%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (136 samples, 0.49%)</title><rect x="69.4636%" y="405" width="0.4936%" height="15" fill="rgb(222,106,48)" fg:x="19140" fg:w="136"/><text x="69.7136%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (107 samples, 0.39%)</title><rect x="70.7846%" y="421" width="0.3883%" height="15" fill="rgb(216,220,45)" fg:x="19504" fg:w="107"/><text x="71.0346%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (103 samples, 0.37%)</title><rect x="70.7992%" y="405" width="0.3738%" height="15" fill="rgb(234,112,18)" fg:x="19508" fg:w="103"/><text x="71.0492%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (7,606 samples, 27.60%)</title><rect x="43.8267%" y="485" width="27.6040%" height="15" fill="rgb(206,179,9)" fg:x="12076" fg:w="7606"/><text x="44.0767%" y="495.50">&lt;core::str::iter::Chars as core::iter::trait..</text></g><g><title>core::str::validations::next_code_point (6,514 samples, 23.64%)</title><rect x="47.7898%" y="469" width="23.6409%" height="15" fill="rgb(215,115,40)" fg:x="13168" fg:w="6514"/><text x="48.0398%" y="479.50">core::str::validations::next_code_point</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,484 samples, 16.27%)</title><rect x="55.1571%" y="453" width="16.2735%" height="15" fill="rgb(222,69,34)" fg:x="15198" fg:w="4484"/><text x="55.4071%" y="463.50">&lt;core::slice::iter::Iter&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (406 samples, 1.47%)</title><rect x="69.9572%" y="437" width="1.4735%" height="15" fill="rgb(209,161,10)" fg:x="19276" fg:w="406"/><text x="70.2072%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (70 samples, 0.25%)</title><rect x="71.1766%" y="421" width="0.2540%" height="15" fill="rgb(217,6,38)" fg:x="19612" fg:w="70"/><text x="71.4266%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (352 samples, 1.28%)</title><rect x="76.9289%" y="453" width="1.2775%" height="15" fill="rgb(229,229,48)" fg:x="21197" fg:w="352"/><text x="77.1789%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (77 samples, 0.28%)</title><rect x="77.9270%" y="437" width="0.2795%" height="15" fill="rgb(225,21,28)" fg:x="21472" fg:w="77"/><text x="78.1770%" y="447.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (3 samples, 0.01%)</title><rect x="78.2101%" y="453" width="0.0109%" height="15" fill="rgb(206,33,13)" fg:x="21550" fg:w="3"/><text x="78.4601%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (126 samples, 0.46%)</title><rect x="78.2209%" y="453" width="0.4573%" height="15" fill="rgb(242,178,17)" fg:x="21553" fg:w="126"/><text x="78.4709%" y="463.50"></text></g><g><title>core::ptr::read (373 samples, 1.35%)</title><rect x="80.3404%" y="437" width="1.3537%" height="15" fill="rgb(220,162,5)" fg:x="22137" fg:w="373"/><text x="80.5904%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (79 samples, 0.29%)</title><rect x="81.4074%" y="421" width="0.2867%" height="15" fill="rgb(210,33,43)" fg:x="22431" fg:w="79"/><text x="81.6574%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (32 samples, 0.12%)</title><rect x="81.5780%" y="405" width="0.1161%" height="15" fill="rgb(216,116,54)" fg:x="22478" fg:w="32"/><text x="81.8280%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,929 samples, 10.63%)</title><rect x="71.4306%" y="485" width="10.6300%" height="15" fill="rgb(249,92,24)" fg:x="19682" fg:w="2929"/><text x="71.6806%" y="495.50">core::iter::rang..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,902 samples, 10.53%)</title><rect x="71.5286%" y="469" width="10.5320%" height="15" fill="rgb(231,189,14)" fg:x="19709" fg:w="2902"/><text x="71.7786%" y="479.50">&lt;core::ops::ran..</text></g><g><title>core::mem::replace (932 samples, 3.38%)</title><rect x="78.6782%" y="453" width="3.3824%" height="15" fill="rgb(230,8,41)" fg:x="21679" fg:w="932"/><text x="78.9282%" y="463.50">cor..</text></g><g><title>core::ptr::write (101 samples, 0.37%)</title><rect x="81.6941%" y="437" width="0.3666%" height="15" fill="rgb(249,7,27)" fg:x="22510" fg:w="101"/><text x="81.9441%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (14,046 samples, 50.98%)</title><rect x="39.9506%" y="501" width="50.9763%" height="15" fill="rgb(232,86,5)" fg:x="11008" fg:w="14046"/><text x="40.2006%" y="511.50">core::iter::traits::iterator::Iterator::advance_by</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2,443 samples, 8.87%)</title><rect x="82.0607%" y="485" width="8.8662%" height="15" fill="rgb(224,175,18)" fg:x="22611" fg:w="2443"/><text x="82.3107%" y="495.50">core::option:..</text></g><g><title>core::iter::traits::iterator::Iterator::nth (14,539 samples, 52.77%)</title><rect x="38.1723%" y="517" width="52.7655%" height="15" fill="rgb(220,129,12)" fg:x="10518" fg:w="14539"/><text x="38.4223%" y="527.50">core::iter::traits::iterator::Iterator::nth</text></g><g><title>core::result::Result&lt;T,E&gt;::ok (3 samples, 0.01%)</title><rect x="90.9269%" y="501" width="0.0109%" height="15" fill="rgb(210,19,36)" fg:x="25054" fg:w="3"/><text x="91.1769%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.02%)</title><rect x="90.9487%" y="469" width="0.0218%" height="15" fill="rgb(219,96,14)" fg:x="25060" fg:w="6"/><text x="91.1987%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="90.9523%" y="453" width="0.0181%" height="15" fill="rgb(249,106,1)" fg:x="25061" fg:w="5"/><text x="91.2023%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="90.9451%" y="485" width="0.0290%" height="15" fill="rgb(249,155,20)" fg:x="25059" fg:w="8"/><text x="91.1951%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="90.9741%" y="453" width="0.0181%" height="15" fill="rgb(244,168,9)" fg:x="25067" fg:w="5"/><text x="91.2241%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="90.9741%" y="437" width="0.0181%" height="15" fill="rgb(216,23,50)" fg:x="25067" fg:w="5"/><text x="91.2241%" y="447.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="90.9777%" y="421" width="0.0145%" height="15" fill="rgb(224,219,20)" fg:x="25068" fg:w="4"/><text x="91.2277%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.01%)</title><rect x="91.0031%" y="437" width="0.0109%" height="15" fill="rgb(222,156,15)" fg:x="25075" fg:w="3"/><text x="91.2531%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.03%)</title><rect x="91.0140%" y="437" width="0.0290%" height="15" fill="rgb(231,97,17)" fg:x="25078" fg:w="8"/><text x="91.2640%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8 samples, 0.03%)</title><rect x="91.0140%" y="421" width="0.0290%" height="15" fill="rgb(218,70,48)" fg:x="25078" fg:w="8"/><text x="91.2640%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (30 samples, 0.11%)</title><rect x="90.9378%" y="517" width="0.1089%" height="15" fill="rgb(212,196,52)" fg:x="25057" fg:w="30"/><text x="91.1878%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (29 samples, 0.11%)</title><rect x="90.9414%" y="501" width="0.1052%" height="15" fill="rgb(243,203,18)" fg:x="25058" fg:w="29"/><text x="91.1914%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.07%)</title><rect x="90.9741%" y="485" width="0.0726%" height="15" fill="rgb(252,125,41)" fg:x="25067" fg:w="20"/><text x="91.2241%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.07%)</title><rect x="90.9741%" y="469" width="0.0726%" height="15" fill="rgb(223,180,33)" fg:x="25067" fg:w="20"/><text x="91.2241%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.05%)</title><rect x="90.9922%" y="453" width="0.0544%" height="15" fill="rgb(254,159,46)" fg:x="25072" fg:w="15"/><text x="91.2422%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.02%)</title><rect x="91.0612%" y="485" width="0.0218%" height="15" fill="rgb(254,38,10)" fg:x="25091" fg:w="6"/><text x="91.3112%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="91.0648%" y="469" width="0.0181%" height="15" fill="rgb(208,217,32)" fg:x="25092" fg:w="5"/><text x="91.3148%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (27 samples, 0.10%)</title><rect x="91.1846%" y="405" width="0.0980%" height="15" fill="rgb(221,120,13)" fg:x="25125" fg:w="27"/><text x="91.4346%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (23 samples, 0.08%)</title><rect x="91.1991%" y="389" width="0.0835%" height="15" fill="rgb(246,54,52)" fg:x="25129" fg:w="23"/><text x="91.4491%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (4 samples, 0.01%)</title><rect x="91.2826%" y="389" width="0.0145%" height="15" fill="rgb(242,34,25)" fg:x="25152" fg:w="4"/><text x="91.5326%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (45 samples, 0.16%)</title><rect x="91.1374%" y="437" width="0.1633%" height="15" fill="rgb(247,209,9)" fg:x="25112" fg:w="45"/><text x="91.3874%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (41 samples, 0.15%)</title><rect x="91.1519%" y="421" width="0.1488%" height="15" fill="rgb(228,71,26)" fg:x="25116" fg:w="41"/><text x="91.4019%" y="431.50"></text></g><g><title>core::ptr::null_mut (5 samples, 0.02%)</title><rect x="91.2826%" y="405" width="0.0181%" height="15" fill="rgb(222,145,49)" fg:x="25152" fg:w="5"/><text x="91.5326%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.18%)</title><rect x="91.1301%" y="453" width="0.1778%" height="15" fill="rgb(218,121,17)" fg:x="25110" fg:w="49"/><text x="91.3801%" y="463.50"></text></g><g><title>cfree (30 samples, 0.11%)</title><rect x="91.3733%" y="389" width="0.1089%" height="15" fill="rgb(244,50,7)" fg:x="25177" fg:w="30"/><text x="91.6233%" y="399.50"></text></g><g><title>[libc.so.6] (25 samples, 0.09%)</title><rect x="91.3914%" y="373" width="0.0907%" height="15" fill="rgb(246,229,37)" fg:x="25182" fg:w="25"/><text x="91.6414%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.14%)</title><rect x="91.3479%" y="421" width="0.1379%" height="15" fill="rgb(225,18,5)" fg:x="25170" fg:w="38"/><text x="91.5979%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.12%)</title><rect x="91.3660%" y="405" width="0.1198%" height="15" fill="rgb(213,204,8)" fg:x="25175" fg:w="33"/><text x="91.6160%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (45 samples, 0.16%)</title><rect x="91.5657%" y="405" width="0.1633%" height="15" fill="rgb(238,103,6)" fg:x="25230" fg:w="45"/><text x="91.8157%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (23 samples, 0.08%)</title><rect x="91.6455%" y="389" width="0.0835%" height="15" fill="rgb(222,25,35)" fg:x="25252" fg:w="23"/><text x="91.8955%" y="399.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="91.7072%" y="373" width="0.0218%" height="15" fill="rgb(213,203,35)" fg:x="25269" fg:w="6"/><text x="91.9572%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="91.7108%" y="357" width="0.0181%" height="15" fill="rgb(221,79,53)" fg:x="25270" fg:w="5"/><text x="91.9608%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (36 samples, 0.13%)</title><rect x="91.7290%" y="405" width="0.1307%" height="15" fill="rgb(243,200,35)" fg:x="25275" fg:w="36"/><text x="91.9790%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (36 samples, 0.13%)</title><rect x="91.7290%" y="389" width="0.1307%" height="15" fill="rgb(248,60,25)" fg:x="25275" fg:w="36"/><text x="91.9790%" y="399.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (3 samples, 0.01%)</title><rect x="91.8596%" y="405" width="0.0109%" height="15" fill="rgb(227,53,46)" fg:x="25311" fg:w="3"/><text x="92.1096%" y="415.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="91.8596%" y="389" width="0.0109%" height="15" fill="rgb(216,120,32)" fg:x="25311" fg:w="3"/><text x="92.1096%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;char&gt;]&gt; (227 samples, 0.82%)</title><rect x="91.0830%" y="485" width="0.8238%" height="15" fill="rgb(220,134,1)" fg:x="25097" fg:w="227"/><text x="91.3330%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (219 samples, 0.79%)</title><rect x="91.1120%" y="469" width="0.7948%" height="15" fill="rgb(237,168,5)" fg:x="25105" fg:w="219"/><text x="91.3620%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (165 samples, 0.60%)</title><rect x="91.3080%" y="453" width="0.5988%" height="15" fill="rgb(231,100,33)" fg:x="25159" fg:w="165"/><text x="91.5580%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.59%)</title><rect x="91.3189%" y="437" width="0.5879%" height="15" fill="rgb(236,177,47)" fg:x="25162" fg:w="162"/><text x="91.5689%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (116 samples, 0.42%)</title><rect x="91.4858%" y="421" width="0.4210%" height="15" fill="rgb(235,7,49)" fg:x="25208" fg:w="116"/><text x="91.7358%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (10 samples, 0.04%)</title><rect x="91.8705%" y="405" width="0.0363%" height="15" fill="rgb(232,119,22)" fg:x="25314" fg:w="10"/><text x="92.1205%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (235 samples, 0.85%)</title><rect x="91.0576%" y="501" width="0.8529%" height="15" fill="rgb(254,73,53)" fg:x="25090" fg:w="235"/><text x="91.3076%" y="511.50"></text></g><g><title>cfree (40 samples, 0.15%)</title><rect x="91.9249%" y="437" width="0.1452%" height="15" fill="rgb(251,35,20)" fg:x="25329" fg:w="40"/><text x="92.1749%" y="447.50"></text></g><g><title>[libc.so.6] (38 samples, 0.14%)</title><rect x="91.9322%" y="421" width="0.1379%" height="15" fill="rgb(241,119,20)" fg:x="25331" fg:w="38"/><text x="92.1822%" y="431.50"></text></g><g><title>[libc.so.6] (34 samples, 0.12%)</title><rect x="91.9467%" y="405" width="0.1234%" height="15" fill="rgb(207,102,14)" fg:x="25335" fg:w="34"/><text x="92.1967%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="92.0592%" y="389" width="0.0109%" height="15" fill="rgb(248,201,50)" fg:x="25366" fg:w="3"/><text x="92.3092%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.15%)</title><rect x="91.9249%" y="469" width="0.1524%" height="15" fill="rgb(222,185,44)" fg:x="25329" fg:w="42"/><text x="92.1749%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.15%)</title><rect x="91.9249%" y="453" width="0.1524%" height="15" fill="rgb(218,107,18)" fg:x="25329" fg:w="42"/><text x="92.1749%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (294 samples, 1.07%)</title><rect x="91.0467%" y="517" width="1.0670%" height="15" fill="rgb(237,177,39)" fg:x="25087" fg:w="294"/><text x="91.2967%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;char&gt;&gt;&gt; (56 samples, 0.20%)</title><rect x="91.9104%" y="501" width="0.2032%" height="15" fill="rgb(246,69,6)" fg:x="25325" fg:w="56"/><text x="92.1604%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.20%)</title><rect x="91.9104%" y="485" width="0.2032%" height="15" fill="rgb(234,208,37)" fg:x="25325" fg:w="56"/><text x="92.1604%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (10 samples, 0.04%)</title><rect x="92.0774%" y="469" width="0.0363%" height="15" fill="rgb(225,4,6)" fg:x="25371" fg:w="10"/><text x="92.3274%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3 samples, 0.01%)</title><rect x="92.1137%" y="517" width="0.0109%" height="15" fill="rgb(233,45,0)" fg:x="25381" fg:w="3"/><text x="92.3637%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.02%)</title><rect x="92.1246%" y="517" width="0.0181%" height="15" fill="rgb(226,136,5)" fg:x="25384" fg:w="5"/><text x="92.3746%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="92.1246%" y="501" width="0.0181%" height="15" fill="rgb(211,91,47)" fg:x="25384" fg:w="5"/><text x="92.3746%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.02%)</title><rect x="92.1246%" y="485" width="0.0181%" height="15" fill="rgb(242,88,51)" fg:x="25384" fg:w="5"/><text x="92.3746%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="92.1246%" y="469" width="0.0181%" height="15" fill="rgb(230,91,28)" fg:x="25384" fg:w="5"/><text x="92.3746%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (40 samples, 0.15%)</title><rect x="92.5710%" y="453" width="0.1452%" height="15" fill="rgb(254,186,29)" fg:x="25507" fg:w="40"/><text x="92.8210%" y="463.50"></text></g><g><title>core::ptr::invalid (52 samples, 0.19%)</title><rect x="92.7161%" y="437" width="0.1887%" height="15" fill="rgb(238,6,4)" fg:x="25547" fg:w="52"/><text x="92.9661%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (133 samples, 0.48%)</title><rect x="92.4476%" y="469" width="0.4827%" height="15" fill="rgb(221,151,16)" fg:x="25473" fg:w="133"/><text x="92.6976%" y="479.50"></text></g><g><title>core::ptr::null (59 samples, 0.21%)</title><rect x="92.7161%" y="453" width="0.2141%" height="15" fill="rgb(251,143,52)" fg:x="25547" fg:w="59"/><text x="92.9661%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.03%)</title><rect x="92.9048%" y="437" width="0.0254%" height="15" fill="rgb(206,90,15)" fg:x="25599" fg:w="7"/><text x="93.1548%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (185 samples, 0.67%)</title><rect x="92.2770%" y="501" width="0.6714%" height="15" fill="rgb(218,35,8)" fg:x="25426" fg:w="185"/><text x="92.5270%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (180 samples, 0.65%)</title><rect x="92.2951%" y="485" width="0.6533%" height="15" fill="rgb(239,215,6)" fg:x="25431" fg:w="180"/><text x="92.5451%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (5 samples, 0.02%)</title><rect x="92.9302%" y="469" width="0.0181%" height="15" fill="rgb(245,116,39)" fg:x="25606" fg:w="5"/><text x="93.1802%" y="479.50"></text></g><g><title>unkr::core::loop_decrypt (24,831 samples, 90.12%)</title><rect x="2.8671%" y="565" width="90.1176%" height="15" fill="rgb(242,65,28)" fg:x="790" fg:w="24831"/><text x="3.1171%" y="575.50">unkr::core::loop_decrypt</text></g><g><title>unkr::transpose::decrypt (19,962 samples, 72.45%)</title><rect x="20.5379%" y="549" width="72.4468%" height="15" fill="rgb(252,132,53)" fg:x="5659" fg:w="19962"/><text x="20.7879%" y="559.50">unkr::transpose::decrypt</text></g><g><title>unkr::transpose::internal_encrypt (19,540 samples, 70.92%)</title><rect x="22.0694%" y="533" width="70.9153%" height="15" fill="rgb(224,159,50)" fg:x="6081" fg:w="19540"/><text x="22.3194%" y="543.50">unkr::transpose::internal_encrypt</text></g><g><title>core::str::&lt;impl str&gt;::chars (232 samples, 0.84%)</title><rect x="92.1427%" y="517" width="0.8420%" height="15" fill="rgb(224,93,4)" fg:x="25389" fg:w="232"/><text x="92.3927%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (10 samples, 0.04%)</title><rect x="92.9484%" y="501" width="0.0363%" height="15" fill="rgb(208,81,34)" fg:x="25611" fg:w="10"/><text x="93.1984%" y="511.50"></text></g><g><title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (5 samples, 0.02%)</title><rect x="93.1843%" y="469" width="0.0181%" height="15" fill="rgb(233,92,54)" fg:x="25676" fg:w="5"/><text x="93.4343%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (12 samples, 0.04%)</title><rect x="93.2641%" y="437" width="0.0436%" height="15" fill="rgb(237,21,14)" fg:x="25698" fg:w="12"/><text x="93.5141%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="93.2714%" y="421" width="0.0363%" height="15" fill="rgb(249,128,51)" fg:x="25700" fg:w="10"/><text x="93.5214%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (20 samples, 0.07%)</title><rect x="93.3258%" y="421" width="0.0726%" height="15" fill="rgb(223,129,24)" fg:x="25715" fg:w="20"/><text x="93.5758%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.07%)</title><rect x="93.3331%" y="405" width="0.0653%" height="15" fill="rgb(231,168,25)" fg:x="25717" fg:w="18"/><text x="93.5831%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (31 samples, 0.11%)</title><rect x="93.3077%" y="437" width="0.1125%" height="15" fill="rgb(224,39,20)" fg:x="25710" fg:w="31"/><text x="93.5577%" y="447.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.02%)</title><rect x="93.3984%" y="421" width="0.0218%" height="15" fill="rgb(225,152,53)" fg:x="25735" fg:w="6"/><text x="93.6484%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="93.4057%" y="405" width="0.0145%" height="15" fill="rgb(252,17,24)" fg:x="25737" fg:w="4"/><text x="93.6557%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.20%)</title><rect x="93.2315%" y="453" width="0.2032%" height="15" fill="rgb(250,114,30)" fg:x="25689" fg:w="56"/><text x="93.4815%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4 samples, 0.01%)</title><rect x="93.4202%" y="437" width="0.0145%" height="15" fill="rgb(229,5,4)" fg:x="25741" fg:w="4"/><text x="93.6702%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="93.6379%" y="341" width="0.0145%" height="15" fill="rgb(225,176,49)" fg:x="25801" fg:w="4"/><text x="93.8879%" y="351.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.01%)</title><rect x="93.6416%" y="325" width="0.0109%" height="15" fill="rgb(224,221,49)" fg:x="25802" fg:w="3"/><text x="93.8916%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (34 samples, 0.12%)</title><rect x="93.6815%" y="325" width="0.1234%" height="15" fill="rgb(253,169,27)" fg:x="25813" fg:w="34"/><text x="93.9315%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (23 samples, 0.08%)</title><rect x="93.7214%" y="309" width="0.0835%" height="15" fill="rgb(211,206,16)" fg:x="25824" fg:w="23"/><text x="93.9714%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.03%)</title><rect x="93.8049%" y="309" width="0.0327%" height="15" fill="rgb(244,87,35)" fg:x="25847" fg:w="9"/><text x="94.0549%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (60 samples, 0.22%)</title><rect x="93.6343%" y="357" width="0.2178%" height="15" fill="rgb(246,28,10)" fg:x="25800" fg:w="60"/><text x="93.8843%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (55 samples, 0.20%)</title><rect x="93.6525%" y="341" width="0.1996%" height="15" fill="rgb(229,12,44)" fg:x="25805" fg:w="55"/><text x="93.9025%" y="351.50"></text></g><g><title>core::ptr::null_mut (13 samples, 0.05%)</title><rect x="93.8049%" y="325" width="0.0472%" height="15" fill="rgb(210,145,37)" fg:x="25847" fg:w="13"/><text x="94.0549%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="93.8376%" y="309" width="0.0145%" height="15" fill="rgb(227,112,52)" fg:x="25856" fg:w="4"/><text x="94.0876%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (67 samples, 0.24%)</title><rect x="93.6198%" y="373" width="0.2432%" height="15" fill="rgb(238,155,34)" fg:x="25796" fg:w="67"/><text x="93.8698%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.01%)</title><rect x="93.8521%" y="357" width="0.0109%" height="15" fill="rgb(239,226,36)" fg:x="25860" fg:w="3"/><text x="94.1021%" y="367.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (78 samples, 0.28%)</title><rect x="93.5980%" y="405" width="0.2831%" height="15" fill="rgb(230,16,23)" fg:x="25790" fg:w="78"/><text x="93.8480%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (78 samples, 0.28%)</title><rect x="93.5980%" y="389" width="0.2831%" height="15" fill="rgb(236,171,36)" fg:x="25790" fg:w="78"/><text x="93.8480%" y="399.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (5 samples, 0.02%)</title><rect x="93.8630%" y="373" width="0.0181%" height="15" fill="rgb(221,22,14)" fg:x="25863" fg:w="5"/><text x="94.1130%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts (14 samples, 0.05%)</title><rect x="93.8884%" y="405" width="0.0508%" height="15" fill="rgb(242,43,11)" fg:x="25870" fg:w="14"/><text x="94.1384%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts (12 samples, 0.04%)</title><rect x="93.8956%" y="389" width="0.0436%" height="15" fill="rgb(232,69,23)" fg:x="25872" fg:w="12"/><text x="94.1456%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (10 samples, 0.04%)</title><rect x="93.9029%" y="373" width="0.0363%" height="15" fill="rgb(216,180,54)" fg:x="25874" fg:w="10"/><text x="94.1529%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (208 samples, 0.75%)</title><rect x="93.2097%" y="469" width="0.7549%" height="15" fill="rgb(216,5,24)" fg:x="25683" fg:w="208"/><text x="93.4597%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (146 samples, 0.53%)</title><rect x="93.4347%" y="453" width="0.5299%" height="15" fill="rgb(225,89,9)" fg:x="25745" fg:w="146"/><text x="93.6847%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (126 samples, 0.46%)</title><rect x="93.5073%" y="437" width="0.4573%" height="15" fill="rgb(243,75,33)" fg:x="25765" fg:w="126"/><text x="93.7573%" y="447.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (111 samples, 0.40%)</title><rect x="93.5617%" y="421" width="0.4028%" height="15" fill="rgb(247,141,45)" fg:x="25780" fg:w="111"/><text x="93.8117%" y="431.50"></text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (7 samples, 0.03%)</title><rect x="93.9392%" y="405" width="0.0254%" height="15" fill="rgb(232,177,36)" fg:x="25884" fg:w="7"/><text x="94.1892%" y="415.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (3 samples, 0.01%)</title><rect x="93.9537%" y="389" width="0.0109%" height="15" fill="rgb(219,125,36)" fg:x="25888" fg:w="3"/><text x="94.2037%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="94.0009%" y="437" width="0.0181%" height="15" fill="rgb(227,94,9)" fg:x="25901" fg:w="5"/><text x="94.2509%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.03%)</title><rect x="93.9936%" y="453" width="0.0327%" height="15" fill="rgb(240,34,52)" fg:x="25899" fg:w="9"/><text x="94.2436%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.01%)</title><rect x="94.0263%" y="453" width="0.0109%" height="15" fill="rgb(216,45,12)" fg:x="25908" fg:w="3"/><text x="94.2763%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="94.0263%" y="437" width="0.0109%" height="15" fill="rgb(246,21,19)" fg:x="25908" fg:w="3"/><text x="94.2763%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.07%)</title><rect x="93.9718%" y="469" width="0.0690%" height="15" fill="rgb(213,98,42)" fg:x="25893" fg:w="19"/><text x="94.2218%" y="479.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (9 samples, 0.03%)</title><rect x="94.0408%" y="469" width="0.0327%" height="15" fill="rgb(250,136,47)" fg:x="25912" fg:w="9"/><text x="94.2908%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (9 samples, 0.03%)</title><rect x="94.0408%" y="453" width="0.0327%" height="15" fill="rgb(251,124,27)" fg:x="25912" fg:w="9"/><text x="94.2908%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.03%)</title><rect x="94.0444%" y="437" width="0.0290%" height="15" fill="rgb(229,180,14)" fg:x="25913" fg:w="8"/><text x="94.2944%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (8 samples, 0.03%)</title><rect x="94.0444%" y="421" width="0.0290%" height="15" fill="rgb(245,216,25)" fg:x="25913" fg:w="8"/><text x="94.2944%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="94.0444%" y="405" width="0.0290%" height="15" fill="rgb(251,43,5)" fg:x="25913" fg:w="8"/><text x="94.2944%" y="415.50"></text></g><g><title>core::ptr::null_mut (5 samples, 0.02%)</title><rect x="94.0553%" y="389" width="0.0181%" height="15" fill="rgb(250,128,24)" fg:x="25916" fg:w="5"/><text x="94.3053%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="94.0626%" y="373" width="0.0109%" height="15" fill="rgb(217,117,27)" fg:x="25918" fg:w="3"/><text x="94.3126%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="94.0916%" y="389" width="0.0109%" height="15" fill="rgb(245,147,4)" fg:x="25926" fg:w="3"/><text x="94.3416%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="94.0916%" y="373" width="0.0109%" height="15" fill="rgb(242,201,35)" fg:x="25926" fg:w="3"/><text x="94.3416%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.01%)</title><rect x="94.0916%" y="421" width="0.0145%" height="15" fill="rgb(218,181,1)" fg:x="25926" fg:w="4"/><text x="94.3416%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.01%)</title><rect x="94.0916%" y="405" width="0.0145%" height="15" fill="rgb(222,6,29)" fg:x="25926" fg:w="4"/><text x="94.3416%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.08%)</title><rect x="94.0880%" y="437" width="0.0762%" height="15" fill="rgb(208,186,3)" fg:x="25925" fg:w="21"/><text x="94.3380%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.06%)</title><rect x="94.1061%" y="421" width="0.0581%" height="15" fill="rgb(216,36,26)" fg:x="25930" fg:w="16"/><text x="94.3561%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.05%)</title><rect x="94.1170%" y="405" width="0.0472%" height="15" fill="rgb(248,201,23)" fg:x="25933" fg:w="13"/><text x="94.3670%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (6 samples, 0.02%)</title><rect x="94.1424%" y="389" width="0.0218%" height="15" fill="rgb(251,170,31)" fg:x="25940" fg:w="6"/><text x="94.3924%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.09%)</title><rect x="94.0771%" y="453" width="0.0944%" height="15" fill="rgb(207,110,25)" fg:x="25922" fg:w="26"/><text x="94.3271%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (4 samples, 0.01%)</title><rect x="94.1896%" y="421" width="0.0145%" height="15" fill="rgb(250,54,15)" fg:x="25953" fg:w="4"/><text x="94.4396%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (37 samples, 0.13%)</title><rect x="94.0735%" y="469" width="0.1343%" height="15" fill="rgb(227,68,33)" fg:x="25921" fg:w="37"/><text x="94.3235%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (10 samples, 0.04%)</title><rect x="94.1714%" y="453" width="0.0363%" height="15" fill="rgb(238,34,41)" fg:x="25948" fg:w="10"/><text x="94.4214%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="94.1714%" y="437" width="0.0363%" height="15" fill="rgb(220,11,15)" fg:x="25948" fg:w="10"/><text x="94.4214%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (9 samples, 0.03%)</title><rect x="94.2077%" y="469" width="0.0327%" height="15" fill="rgb(246,111,35)" fg:x="25958" fg:w="9"/><text x="94.4577%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.03%)</title><rect x="94.2114%" y="453" width="0.0290%" height="15" fill="rgb(209,88,53)" fg:x="25959" fg:w="8"/><text x="94.4614%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="94.2114%" y="437" width="0.0290%" height="15" fill="rgb(231,185,47)" fg:x="25959" fg:w="8"/><text x="94.4614%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="94.2150%" y="421" width="0.0254%" height="15" fill="rgb(233,154,1)" fg:x="25960" fg:w="7"/><text x="94.4650%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="94.2223%" y="405" width="0.0181%" height="15" fill="rgb(225,15,46)" fg:x="25962" fg:w="5"/><text x="94.4723%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="94.3057%" y="341" width="0.0109%" height="15" fill="rgb(211,135,41)" fg:x="25985" fg:w="3"/><text x="94.5557%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="94.3021%" y="373" width="0.0218%" height="15" fill="rgb(208,54,0)" fg:x="25984" fg:w="6"/><text x="94.5521%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="94.3057%" y="357" width="0.0181%" height="15" fill="rgb(244,136,14)" fg:x="25985" fg:w="5"/><text x="94.5557%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.06%)</title><rect x="94.2731%" y="405" width="0.0617%" height="15" fill="rgb(241,56,14)" fg:x="25976" fg:w="17"/><text x="94.5231%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.05%)</title><rect x="94.2840%" y="389" width="0.0508%" height="15" fill="rgb(205,80,24)" fg:x="25979" fg:w="14"/><text x="94.5340%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="94.3239%" y="373" width="0.0109%" height="15" fill="rgb(220,57,4)" fg:x="25990" fg:w="3"/><text x="94.5739%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.03%)</title><rect x="94.3348%" y="405" width="0.0327%" height="15" fill="rgb(226,193,50)" fg:x="25993" fg:w="9"/><text x="94.5848%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8 samples, 0.03%)</title><rect x="94.3384%" y="389" width="0.0290%" height="15" fill="rgb(231,168,22)" fg:x="25994" fg:w="8"/><text x="94.5884%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (41 samples, 0.15%)</title><rect x="94.2404%" y="469" width="0.1488%" height="15" fill="rgb(254,215,14)" fg:x="25967" fg:w="41"/><text x="94.4904%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (41 samples, 0.15%)</title><rect x="94.2404%" y="453" width="0.1488%" height="15" fill="rgb(211,115,16)" fg:x="25967" fg:w="41"/><text x="94.4904%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40 samples, 0.15%)</title><rect x="94.2440%" y="437" width="0.1452%" height="15" fill="rgb(236,210,16)" fg:x="25968" fg:w="40"/><text x="94.4940%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (40 samples, 0.15%)</title><rect x="94.2440%" y="421" width="0.1452%" height="15" fill="rgb(221,94,12)" fg:x="25968" fg:w="40"/><text x="94.4940%" y="431.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (3 samples, 0.01%)</title><rect x="94.3783%" y="405" width="0.0109%" height="15" fill="rgb(235,218,49)" fg:x="26005" fg:w="3"/><text x="94.6283%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (7 samples, 0.03%)</title><rect x="94.3928%" y="469" width="0.0254%" height="15" fill="rgb(217,114,14)" fg:x="26009" fg:w="7"/><text x="94.6428%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (3 samples, 0.01%)</title><rect x="94.4073%" y="453" width="0.0109%" height="15" fill="rgb(216,145,22)" fg:x="26013" fg:w="3"/><text x="94.6573%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (16 samples, 0.06%)</title><rect x="94.7558%" y="373" width="0.0581%" height="15" fill="rgb(217,112,39)" fg:x="26109" fg:w="16"/><text x="95.0058%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (20 samples, 0.07%)</title><rect x="94.7485%" y="389" width="0.0726%" height="15" fill="rgb(225,85,32)" fg:x="26107" fg:w="20"/><text x="94.9985%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (23 samples, 0.08%)</title><rect x="94.8646%" y="373" width="0.0835%" height="15" fill="rgb(245,209,47)" fg:x="26139" fg:w="23"/><text x="95.1146%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (17 samples, 0.06%)</title><rect x="94.8864%" y="357" width="0.0617%" height="15" fill="rgb(218,220,15)" fg:x="26145" fg:w="17"/><text x="95.1364%" y="367.50"></text></g><g><title>core::ptr::invalid_mut (5 samples, 0.02%)</title><rect x="94.9481%" y="357" width="0.0181%" height="15" fill="rgb(222,202,31)" fg:x="26162" fg:w="5"/><text x="95.1981%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (43 samples, 0.16%)</title><rect x="94.8211%" y="389" width="0.1561%" height="15" fill="rgb(243,203,4)" fg:x="26127" fg:w="43"/><text x="95.0711%" y="399.50"></text></g><g><title>core::ptr::null_mut (8 samples, 0.03%)</title><rect x="94.9481%" y="373" width="0.0290%" height="15" fill="rgb(237,92,17)" fg:x="26162" fg:w="8"/><text x="95.1981%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="94.9662%" y="357" width="0.0109%" height="15" fill="rgb(231,119,7)" fg:x="26167" fg:w="3"/><text x="95.2162%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.01%)</title><rect x="94.9989%" y="373" width="0.0109%" height="15" fill="rgb(237,82,41)" fg:x="26176" fg:w="3"/><text x="95.2489%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.01%)</title><rect x="94.9989%" y="357" width="0.0109%" height="15" fill="rgb(226,81,48)" fg:x="26176" fg:w="3"/><text x="95.2489%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.38%)</title><rect x="94.6396%" y="405" width="0.3774%" height="15" fill="rgb(234,70,51)" fg:x="26077" fg:w="104"/><text x="94.8896%" y="415.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (11 samples, 0.04%)</title><rect x="94.9771%" y="389" width="0.0399%" height="15" fill="rgb(251,86,4)" fg:x="26170" fg:w="11"/><text x="95.2271%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (36 samples, 0.13%)</title><rect x="95.1296%" y="293" width="0.1307%" height="15" fill="rgb(244,144,28)" fg:x="26212" fg:w="36"/><text x="95.3796%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (19 samples, 0.07%)</title><rect x="95.1913%" y="277" width="0.0690%" height="15" fill="rgb(232,161,39)" fg:x="26229" fg:w="19"/><text x="95.4413%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (3 samples, 0.01%)</title><rect x="95.2638%" y="277" width="0.0109%" height="15" fill="rgb(247,34,51)" fg:x="26249" fg:w="3"/><text x="95.5138%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (56 samples, 0.20%)</title><rect x="95.0860%" y="325" width="0.2032%" height="15" fill="rgb(225,132,2)" fg:x="26200" fg:w="56"/><text x="95.3360%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (54 samples, 0.20%)</title><rect x="95.0933%" y="309" width="0.1960%" height="15" fill="rgb(209,159,44)" fg:x="26202" fg:w="54"/><text x="95.3433%" y="319.50"></text></g><g><title>core::ptr::null_mut (8 samples, 0.03%)</title><rect x="95.2602%" y="293" width="0.0290%" height="15" fill="rgb(251,214,1)" fg:x="26248" fg:w="8"/><text x="95.5102%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="95.2747%" y="277" width="0.0145%" height="15" fill="rgb(247,84,47)" fg:x="26252" fg:w="4"/><text x="95.5247%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (67 samples, 0.24%)</title><rect x="95.0824%" y="341" width="0.2432%" height="15" fill="rgb(240,111,43)" fg:x="26199" fg:w="67"/><text x="95.3324%" y="351.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.04%)</title><rect x="95.2893%" y="325" width="0.0363%" height="15" fill="rgb(215,214,35)" fg:x="26256" fg:w="10"/><text x="95.5393%" y="335.50"></text></g><g><title>core::ptr::slice_from_raw_parts (10 samples, 0.04%)</title><rect x="95.2893%" y="309" width="0.0363%" height="15" fill="rgb(248,207,23)" fg:x="26256" fg:w="10"/><text x="95.5393%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (10 samples, 0.04%)</title><rect x="95.2893%" y="293" width="0.0363%" height="15" fill="rgb(214,186,4)" fg:x="26256" fg:w="10"/><text x="95.5393%" y="303.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (73 samples, 0.26%)</title><rect x="95.0751%" y="373" width="0.2649%" height="15" fill="rgb(220,133,22)" fg:x="26197" fg:w="73"/><text x="95.3251%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (73 samples, 0.26%)</title><rect x="95.0751%" y="357" width="0.2649%" height="15" fill="rgb(239,134,19)" fg:x="26197" fg:w="73"/><text x="95.3251%" y="367.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (4 samples, 0.01%)</title><rect x="95.3255%" y="341" width="0.0145%" height="15" fill="rgb(250,140,9)" fg:x="26266" fg:w="4"/><text x="95.5755%" y="351.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}}::{{closure}} (80 samples, 0.29%)</title><rect x="95.0606%" y="389" width="0.2903%" height="15" fill="rgb(225,59,14)" fg:x="26193" fg:w="80"/><text x="95.3106%" y="399.50"></text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (3 samples, 0.01%)</title><rect x="95.3401%" y="373" width="0.0109%" height="15" fill="rgb(214,152,51)" fg:x="26270" fg:w="3"/><text x="95.5901%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (280 samples, 1.02%)</title><rect x="94.4328%" y="437" width="1.0162%" height="15" fill="rgb(251,227,43)" fg:x="26020" fg:w="280"/><text x="94.6828%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (277 samples, 1.01%)</title><rect x="94.4436%" y="421" width="1.0053%" height="15" fill="rgb(241,96,17)" fg:x="26023" fg:w="277"/><text x="94.6936%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (119 samples, 0.43%)</title><rect x="95.0171%" y="405" width="0.4319%" height="15" fill="rgb(234,198,43)" fg:x="26181" fg:w="119"/><text x="95.2671%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (27 samples, 0.10%)</title><rect x="95.3509%" y="389" width="0.0980%" height="15" fill="rgb(220,108,29)" fg:x="26273" fg:w="27"/><text x="95.6009%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (25 samples, 0.09%)</title><rect x="95.3582%" y="373" width="0.0907%" height="15" fill="rgb(226,163,33)" fg:x="26275" fg:w="25"/><text x="95.6082%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (16 samples, 0.06%)</title><rect x="95.3909%" y="357" width="0.0581%" height="15" fill="rgb(205,194,45)" fg:x="26284" fg:w="16"/><text x="95.6409%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (293 samples, 1.06%)</title><rect x="94.4182%" y="469" width="1.0634%" height="15" fill="rgb(206,143,44)" fg:x="26016" fg:w="293"/><text x="94.6682%" y="479.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (291 samples, 1.06%)</title><rect x="94.4255%" y="453" width="1.0561%" height="15" fill="rgb(236,136,36)" fg:x="26018" fg:w="291"/><text x="94.6755%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (9 samples, 0.03%)</title><rect x="95.4489%" y="437" width="0.0327%" height="15" fill="rgb(249,172,42)" fg:x="26300" fg:w="9"/><text x="95.6989%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="95.4489%" y="421" width="0.0327%" height="15" fill="rgb(216,139,23)" fg:x="26300" fg:w="9"/><text x="95.6989%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.03%)</title><rect x="95.4526%" y="405" width="0.0290%" height="15" fill="rgb(207,166,20)" fg:x="26301" fg:w="8"/><text x="95.7026%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="95.4562%" y="389" width="0.0254%" height="15" fill="rgb(210,209,22)" fg:x="26302" fg:w="7"/><text x="95.7062%" y="399.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="95.5469%" y="437" width="0.0109%" height="15" fill="rgb(232,118,20)" fg:x="26327" fg:w="3"/><text x="95.7969%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="95.5469%" y="453" width="0.0181%" height="15" fill="rgb(238,113,42)" fg:x="26327" fg:w="5"/><text x="95.7969%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (26 samples, 0.09%)</title><rect x="95.4816%" y="469" width="0.0944%" height="15" fill="rgb(231,42,5)" fg:x="26309" fg:w="26"/><text x="95.7316%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (3 samples, 0.01%)</title><rect x="95.5651%" y="453" width="0.0109%" height="15" fill="rgb(243,166,24)" fg:x="26332" fg:w="3"/><text x="95.8151%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (10 samples, 0.04%)</title><rect x="95.5760%" y="469" width="0.0363%" height="15" fill="rgb(237,226,12)" fg:x="26335" fg:w="10"/><text x="95.8260%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (9 samples, 0.03%)</title><rect x="95.5796%" y="453" width="0.0327%" height="15" fill="rgb(229,133,24)" fg:x="26336" fg:w="9"/><text x="95.8296%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (8 samples, 0.03%)</title><rect x="95.5832%" y="437" width="0.0290%" height="15" fill="rgb(238,33,43)" fg:x="26337" fg:w="8"/><text x="95.8332%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="95.6340%" y="421" width="0.0145%" height="15" fill="rgb(227,59,38)" fg:x="26351" fg:w="4"/><text x="95.8840%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (13 samples, 0.05%)</title><rect x="95.6123%" y="469" width="0.0472%" height="15" fill="rgb(230,97,0)" fg:x="26345" fg:w="13"/><text x="95.8623%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (13 samples, 0.05%)</title><rect x="95.6123%" y="453" width="0.0472%" height="15" fill="rgb(250,173,50)" fg:x="26345" fg:w="13"/><text x="95.8623%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.04%)</title><rect x="95.6195%" y="437" width="0.0399%" height="15" fill="rgb(240,15,50)" fg:x="26347" fg:w="11"/><text x="95.8695%" y="447.50"></text></g><g><title>core::ptr::null (3 samples, 0.01%)</title><rect x="95.6485%" y="421" width="0.0109%" height="15" fill="rgb(221,93,22)" fg:x="26355" fg:w="3"/><text x="95.8985%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (7 samples, 0.03%)</title><rect x="95.6594%" y="469" width="0.0254%" height="15" fill="rgb(245,180,53)" fg:x="26358" fg:w="7"/><text x="95.9094%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.01%)</title><rect x="95.9752%" y="437" width="0.0145%" height="15" fill="rgb(231,88,51)" fg:x="26445" fg:w="4"/><text x="96.2252%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.01%)</title><rect x="95.9788%" y="421" width="0.0109%" height="15" fill="rgb(240,58,21)" fg:x="26446" fg:w="3"/><text x="96.2288%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (17 samples, 0.06%)</title><rect x="96.0224%" y="405" width="0.0617%" height="15" fill="rgb(237,21,10)" fg:x="26458" fg:w="17"/><text x="96.2724%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (111 samples, 0.40%)</title><rect x="95.6848%" y="469" width="0.4028%" height="15" fill="rgb(218,43,11)" fg:x="26365" fg:w="111"/><text x="95.9348%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (88 samples, 0.32%)</title><rect x="95.7683%" y="453" width="0.3194%" height="15" fill="rgb(218,221,29)" fg:x="26388" fg:w="88"/><text x="96.0183%" y="463.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (27 samples, 0.10%)</title><rect x="95.9897%" y="437" width="0.0980%" height="15" fill="rgb(214,118,42)" fg:x="26449" fg:w="27"/><text x="96.2397%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (20 samples, 0.07%)</title><rect x="96.0151%" y="421" width="0.0726%" height="15" fill="rgb(251,200,26)" fg:x="26456" fg:w="20"/><text x="96.2651%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.02%)</title><rect x="96.0877%" y="469" width="0.0181%" height="15" fill="rgb(237,101,39)" fg:x="26476" fg:w="5"/><text x="96.3377%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="96.0913%" y="453" width="0.0145%" height="15" fill="rgb(251,117,11)" fg:x="26477" fg:w="4"/><text x="96.3413%" y="463.50"></text></g><g><title>unkr::core::process_new_str (861 samples, 3.12%)</title><rect x="92.9847%" y="565" width="3.1248%" height="15" fill="rgb(216,223,23)" fg:x="25621" fg:w="861"/><text x="93.2347%" y="575.50">unk..</text></g><g><title>unkr::candidates::find_and_print_candidates (861 samples, 3.12%)</title><rect x="92.9847%" y="549" width="3.1248%" height="15" fill="rgb(251,54,12)" fg:x="25621" fg:w="861"/><text x="93.2347%" y="559.50">unk..</text></g><g><title>unkr::candidates::find_candidates (861 samples, 3.12%)</title><rect x="92.9847%" y="533" width="3.1248%" height="15" fill="rgb(254,176,54)" fg:x="25621" fg:w="861"/><text x="93.2347%" y="543.50">unk..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (861 samples, 3.12%)</title><rect x="92.9847%" y="517" width="3.1248%" height="15" fill="rgb(210,32,8)" fg:x="25621" fg:w="861"/><text x="93.2347%" y="527.50">all..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (861 samples, 3.12%)</title><rect x="92.9847%" y="501" width="3.1248%" height="15" fill="rgb(235,52,38)" fg:x="25621" fg:w="861"/><text x="93.2347%" y="511.50">all..</text></g><g><title>alloc::str::join_generic_copy (861 samples, 3.12%)</title><rect x="92.9847%" y="485" width="3.1248%" height="15" fill="rgb(231,4,44)" fg:x="25621" fg:w="861"/><text x="93.2347%" y="495.50">all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="96.1458%" y="501" width="0.0327%" height="15" fill="rgb(249,2,32)" fg:x="26492" fg:w="9"/><text x="96.3958%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.03%)</title><rect x="96.1458%" y="485" width="0.0327%" height="15" fill="rgb(224,65,26)" fg:x="26492" fg:w="9"/><text x="96.3958%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.02%)</title><rect x="96.1603%" y="469" width="0.0181%" height="15" fill="rgb(250,73,40)" fg:x="26496" fg:w="5"/><text x="96.4103%" y="479.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (5 samples, 0.02%)</title><rect x="96.1603%" y="453" width="0.0181%" height="15" fill="rgb(253,177,16)" fg:x="26496" fg:w="5"/><text x="96.4103%" y="463.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (3 samples, 0.01%)</title><rect x="96.1675%" y="437" width="0.0109%" height="15" fill="rgb(217,32,34)" fg:x="26498" fg:w="3"/><text x="96.4175%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (3 samples, 0.01%)</title><rect x="96.1675%" y="421" width="0.0109%" height="15" fill="rgb(212,7,10)" fg:x="26498" fg:w="3"/><text x="96.4175%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="96.1675%" y="405" width="0.0109%" height="15" fill="rgb(245,89,8)" fg:x="26498" fg:w="3"/><text x="96.4175%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.01%)</title><rect x="96.1675%" y="389" width="0.0109%" height="15" fill="rgb(237,16,53)" fg:x="26498" fg:w="3"/><text x="96.4175%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.01%)</title><rect x="96.1675%" y="373" width="0.0109%" height="15" fill="rgb(250,204,30)" fg:x="26498" fg:w="3"/><text x="96.4175%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="96.1893%" y="501" width="0.0181%" height="15" fill="rgb(208,77,27)" fg:x="26504" fg:w="5"/><text x="96.4393%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="96.1893%" y="485" width="0.0181%" height="15" fill="rgb(250,204,28)" fg:x="26504" fg:w="5"/><text x="96.4393%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="96.1893%" y="469" width="0.0181%" height="15" fill="rgb(244,63,21)" fg:x="26504" fg:w="5"/><text x="96.4393%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="96.1893%" y="453" width="0.0181%" height="15" fill="rgb(236,85,44)" fg:x="26504" fg:w="5"/><text x="96.4393%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="96.2329%" y="437" width="0.0181%" height="15" fill="rgb(215,98,4)" fg:x="26516" fg:w="5"/><text x="96.4829%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.01%)</title><rect x="96.2365%" y="421" width="0.0145%" height="15" fill="rgb(235,38,11)" fg:x="26517" fg:w="4"/><text x="96.4865%" y="431.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (9 samples, 0.03%)</title><rect x="96.2546%" y="405" width="0.0327%" height="15" fill="rgb(254,186,25)" fg:x="26522" fg:w="9"/><text x="96.5046%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (8 samples, 0.03%)</title><rect x="96.2583%" y="389" width="0.0290%" height="15" fill="rgb(225,55,31)" fg:x="26523" fg:w="8"/><text x="96.5083%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.03%)</title><rect x="96.2583%" y="373" width="0.0290%" height="15" fill="rgb(211,15,21)" fg:x="26523" fg:w="8"/><text x="96.5083%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.03%)</title><rect x="96.2619%" y="357" width="0.0254%" height="15" fill="rgb(215,187,41)" fg:x="26524" fg:w="7"/><text x="96.5119%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.02%)</title><rect x="96.2655%" y="341" width="0.0218%" height="15" fill="rgb(248,69,32)" fg:x="26525" fg:w="6"/><text x="96.5155%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="96.2691%" y="325" width="0.0181%" height="15" fill="rgb(252,102,52)" fg:x="26526" fg:w="5"/><text x="96.5191%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="96.2728%" y="309" width="0.0145%" height="15" fill="rgb(253,140,32)" fg:x="26527" fg:w="4"/><text x="96.5228%" y="319.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}}::{{closure}} (10 samples, 0.04%)</title><rect x="96.2546%" y="421" width="0.0363%" height="15" fill="rgb(216,56,42)" fg:x="26522" fg:w="10"/><text x="96.5046%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.09%)</title><rect x="96.2111%" y="469" width="0.0907%" height="15" fill="rgb(216,184,14)" fg:x="26510" fg:w="25"/><text x="96.4611%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.09%)</title><rect x="96.2111%" y="453" width="0.0907%" height="15" fill="rgb(237,187,27)" fg:x="26510" fg:w="25"/><text x="96.4611%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 0.05%)</title><rect x="96.2510%" y="437" width="0.0508%" height="15" fill="rgb(219,65,3)" fg:x="26521" fg:w="14"/><text x="96.5010%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.01%)</title><rect x="96.2909%" y="421" width="0.0109%" height="15" fill="rgb(245,83,25)" fg:x="26532" fg:w="3"/><text x="96.5409%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.01%)</title><rect x="96.2909%" y="405" width="0.0109%" height="15" fill="rgb(214,205,45)" fg:x="26532" fg:w="3"/><text x="96.5409%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.01%)</title><rect x="96.2909%" y="389" width="0.0109%" height="15" fill="rgb(241,20,18)" fg:x="26532" fg:w="3"/><text x="96.5409%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (26 samples, 0.09%)</title><rect x="96.2111%" y="501" width="0.0944%" height="15" fill="rgb(232,163,23)" fg:x="26510" fg:w="26"/><text x="96.4611%" y="511.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (26 samples, 0.09%)</title><rect x="96.2111%" y="485" width="0.0944%" height="15" fill="rgb(214,5,46)" fg:x="26510" fg:w="26"/><text x="96.4611%" y="495.50"></text></g><g><title>unkr::join::decrypt (64 samples, 0.23%)</title><rect x="96.1095%" y="565" width="0.2323%" height="15" fill="rgb(229,78,17)" fg:x="26482" fg:w="64"/><text x="96.3595%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (64 samples, 0.23%)</title><rect x="96.1095%" y="549" width="0.2323%" height="15" fill="rgb(248,89,10)" fg:x="26482" fg:w="64"/><text x="96.3595%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (64 samples, 0.23%)</title><rect x="96.1095%" y="533" width="0.2323%" height="15" fill="rgb(248,54,15)" fg:x="26482" fg:w="64"/><text x="96.3595%" y="543.50"></text></g><g><title>alloc::str::join_generic_copy (64 samples, 0.23%)</title><rect x="96.1095%" y="517" width="0.2323%" height="15" fill="rgb(223,116,6)" fg:x="26482" fg:w="64"/><text x="96.3595%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (8 samples, 0.03%)</title><rect x="96.3127%" y="501" width="0.0290%" height="15" fill="rgb(205,125,38)" fg:x="26538" fg:w="8"/><text x="96.5627%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (7 samples, 0.03%)</title><rect x="96.3163%" y="485" width="0.0254%" height="15" fill="rgb(251,78,38)" fg:x="26539" fg:w="7"/><text x="96.5663%" y="495.50"></text></g><g><title>unkr::reverse::decrypt (6 samples, 0.02%)</title><rect x="96.3417%" y="565" width="0.0218%" height="15" fill="rgb(253,78,28)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="96.3417%" y="549" width="0.0218%" height="15" fill="rgb(209,120,3)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="96.3417%" y="533" width="0.0218%" height="15" fill="rgb(238,229,9)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="96.3417%" y="517" width="0.0218%" height="15" fill="rgb(253,159,18)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="96.3417%" y="501" width="0.0218%" height="15" fill="rgb(244,42,34)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="96.3417%" y="485" width="0.0218%" height="15" fill="rgb(224,8,7)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.02%)</title><rect x="96.3417%" y="469" width="0.0218%" height="15" fill="rgb(210,201,45)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="96.3417%" y="453" width="0.0218%" height="15" fill="rgb(252,185,21)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.02%)</title><rect x="96.3417%" y="437" width="0.0218%" height="15" fill="rgb(223,131,1)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.02%)</title><rect x="96.3417%" y="421" width="0.0218%" height="15" fill="rgb(245,141,16)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="431.50"></text></g><g><title>unkr::reverse::decrypt::{{closure}} (6 samples, 0.02%)</title><rect x="96.3417%" y="405" width="0.0218%" height="15" fill="rgb(229,55,45)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="96.3417%" y="389" width="0.0218%" height="15" fill="rgb(208,92,15)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="96.3417%" y="373" width="0.0218%" height="15" fill="rgb(234,185,47)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="96.3417%" y="357" width="0.0218%" height="15" fill="rgb(253,104,50)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.02%)</title><rect x="96.3417%" y="341" width="0.0218%" height="15" fill="rgb(205,70,7)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="96.3417%" y="325" width="0.0218%" height="15" fill="rgb(240,178,43)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="335.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (6 samples, 0.02%)</title><rect x="96.3417%" y="309" width="0.0218%" height="15" fill="rgb(214,112,2)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.02%)</title><rect x="96.3417%" y="293" width="0.0218%" height="15" fill="rgb(206,46,17)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (6 samples, 0.02%)</title><rect x="96.3417%" y="277" width="0.0218%" height="15" fill="rgb(225,220,16)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="287.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.02%)</title><rect x="96.3417%" y="261" width="0.0218%" height="15" fill="rgb(238,65,40)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.02%)</title><rect x="96.3417%" y="245" width="0.0218%" height="15" fill="rgb(230,151,21)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.02%)</title><rect x="96.3417%" y="229" width="0.0218%" height="15" fill="rgb(218,58,49)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="96.3417%" y="213" width="0.0218%" height="15" fill="rgb(219,179,14)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="96.3417%" y="197" width="0.0218%" height="15" fill="rgb(223,72,1)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="96.3417%" y="181" width="0.0218%" height="15" fill="rgb(238,126,10)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="96.3417%" y="165" width="0.0218%" height="15" fill="rgb(224,206,38)" fg:x="26546" fg:w="6"/><text x="96.5917%" y="175.50"></text></g><g><title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (3 samples, 0.01%)</title><rect x="96.5050%" y="501" width="0.0109%" height="15" fill="rgb(212,201,54)" fg:x="26591" fg:w="3"/><text x="96.7550%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="96.5450%" y="453" width="0.0363%" height="15" fill="rgb(218,154,48)" fg:x="26602" fg:w="10"/><text x="96.7950%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (16 samples, 0.06%)</title><rect x="96.5341%" y="469" width="0.0581%" height="15" fill="rgb(232,93,24)" fg:x="26599" fg:w="16"/><text x="96.7841%" y="479.50"></text></g><g><title>core::ptr::null (3 samples, 0.01%)</title><rect x="96.5813%" y="453" width="0.0109%" height="15" fill="rgb(245,30,21)" fg:x="26612" fg:w="3"/><text x="96.8313%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.01%)</title><rect x="96.5813%" y="437" width="0.0109%" height="15" fill="rgb(242,148,29)" fg:x="26612" fg:w="3"/><text x="96.8313%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="96.6030%" y="453" width="0.0363%" height="15" fill="rgb(244,153,54)" fg:x="26618" fg:w="10"/><text x="96.8530%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.03%)</title><rect x="96.6067%" y="437" width="0.0327%" height="15" fill="rgb(252,87,22)" fg:x="26619" fg:w="9"/><text x="96.8567%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.05%)</title><rect x="96.5921%" y="469" width="0.0544%" height="15" fill="rgb(210,51,29)" fg:x="26615" fg:w="15"/><text x="96.8421%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.13%)</title><rect x="96.5268%" y="485" width="0.1270%" height="15" fill="rgb(242,136,47)" fg:x="26597" fg:w="35"/><text x="96.7768%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (17 samples, 0.06%)</title><rect x="96.7518%" y="357" width="0.0617%" height="15" fill="rgb(238,68,4)" fg:x="26659" fg:w="17"/><text x="97.0018%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="96.7772%" y="341" width="0.0363%" height="15" fill="rgb(242,161,30)" fg:x="26666" fg:w="10"/><text x="97.0272%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (27 samples, 0.10%)</title><rect x="96.7228%" y="389" width="0.0980%" height="15" fill="rgb(218,58,44)" fg:x="26651" fg:w="27"/><text x="96.9728%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (26 samples, 0.09%)</title><rect x="96.7264%" y="373" width="0.0944%" height="15" fill="rgb(252,125,32)" fg:x="26652" fg:w="26"/><text x="96.9764%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.10%)</title><rect x="96.7228%" y="405" width="0.1016%" height="15" fill="rgb(219,178,0)" fg:x="26651" fg:w="28"/><text x="96.9728%" y="415.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (35 samples, 0.13%)</title><rect x="96.7192%" y="437" width="0.1270%" height="15" fill="rgb(213,152,7)" fg:x="26650" fg:w="35"/><text x="96.9692%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (35 samples, 0.13%)</title><rect x="96.7192%" y="421" width="0.1270%" height="15" fill="rgb(249,109,34)" fg:x="26650" fg:w="35"/><text x="96.9692%" y="431.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (6 samples, 0.02%)</title><rect x="96.8244%" y="405" width="0.0218%" height="15" fill="rgb(232,96,21)" fg:x="26679" fg:w="6"/><text x="97.0744%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (4 samples, 0.01%)</title><rect x="96.8498%" y="437" width="0.0145%" height="15" fill="rgb(228,27,39)" fg:x="26686" fg:w="4"/><text x="97.0998%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.01%)</title><rect x="96.8643%" y="437" width="0.0109%" height="15" fill="rgb(211,182,52)" fg:x="26690" fg:w="3"/><text x="97.1143%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="96.8643%" y="421" width="0.0109%" height="15" fill="rgb(234,178,38)" fg:x="26690" fg:w="3"/><text x="97.1143%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.37%)</title><rect x="96.5159%" y="501" width="0.3738%" height="15" fill="rgb(221,111,3)" fg:x="26594" fg:w="103"/><text x="96.7659%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.24%)</title><rect x="96.6538%" y="485" width="0.2359%" height="15" fill="rgb(228,175,21)" fg:x="26632" fg:w="65"/><text x="96.9038%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (53 samples, 0.19%)</title><rect x="96.6974%" y="469" width="0.1923%" height="15" fill="rgb(228,174,43)" fg:x="26644" fg:w="53"/><text x="96.9474%" y="479.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (51 samples, 0.19%)</title><rect x="96.7047%" y="453" width="0.1851%" height="15" fill="rgb(211,191,0)" fg:x="26646" fg:w="51"/><text x="96.9547%" y="463.50"></text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (4 samples, 0.01%)</title><rect x="96.8752%" y="437" width="0.0145%" height="15" fill="rgb(253,117,3)" fg:x="26693" fg:w="4"/><text x="97.1252%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (15 samples, 0.05%)</title><rect x="96.8897%" y="501" width="0.0544%" height="15" fill="rgb(241,127,19)" fg:x="26697" fg:w="15"/><text x="97.1397%" y="511.50"></text></g><g><title>core::slice::iter::size_from_ptr (3 samples, 0.01%)</title><rect x="96.9333%" y="485" width="0.0109%" height="15" fill="rgb(218,103,12)" fg:x="26709" fg:w="3"/><text x="97.1833%" y="495.50"></text></g><g><title>core::mem::size_of (3 samples, 0.01%)</title><rect x="96.9333%" y="469" width="0.0109%" height="15" fill="rgb(236,214,43)" fg:x="26709" fg:w="3"/><text x="97.1833%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="96.9841%" y="469" width="0.0109%" height="15" fill="rgb(244,144,19)" fg:x="26723" fg:w="3"/><text x="97.2341%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.03%)</title><rect x="96.9696%" y="485" width="0.0290%" height="15" fill="rgb(246,188,10)" fg:x="26719" fg:w="8"/><text x="97.2196%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="97.0059%" y="469" width="0.0145%" height="15" fill="rgb(212,193,33)" fg:x="26729" fg:w="4"/><text x="97.2559%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="97.0095%" y="453" width="0.0109%" height="15" fill="rgb(241,51,29)" fg:x="26730" fg:w="3"/><text x="97.2595%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.03%)</title><rect x="96.9986%" y="485" width="0.0254%" height="15" fill="rgb(211,58,19)" fg:x="26727" fg:w="7"/><text x="97.2486%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.09%)</title><rect x="96.9442%" y="501" width="0.0871%" height="15" fill="rgb(229,111,26)" fg:x="26712" fg:w="24"/><text x="97.1942%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="97.0712%" y="421" width="0.0218%" height="15" fill="rgb(213,115,40)" fg:x="26747" fg:w="6"/><text x="97.3212%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="97.0785%" y="405" width="0.0145%" height="15" fill="rgb(209,56,44)" fg:x="26749" fg:w="4"/><text x="97.3285%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (6 samples, 0.02%)</title><rect x="97.0930%" y="405" width="0.0218%" height="15" fill="rgb(230,108,32)" fg:x="26753" fg:w="6"/><text x="97.3430%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.09%)</title><rect x="97.0349%" y="469" width="0.0944%" height="15" fill="rgb(216,165,31)" fg:x="26737" fg:w="26"/><text x="97.2849%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (25 samples, 0.09%)</title><rect x="97.0385%" y="453" width="0.0907%" height="15" fill="rgb(218,122,21)" fg:x="26738" fg:w="25"/><text x="97.2885%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (22 samples, 0.08%)</title><rect x="97.0494%" y="437" width="0.0798%" height="15" fill="rgb(223,224,47)" fg:x="26741" fg:w="22"/><text x="97.2994%" y="447.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.04%)</title><rect x="97.0930%" y="421" width="0.0363%" height="15" fill="rgb(238,102,44)" fg:x="26753" fg:w="10"/><text x="97.3430%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="97.1148%" y="405" width="0.0145%" height="15" fill="rgb(236,46,40)" fg:x="26759" fg:w="4"/><text x="97.3648%" y="415.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (28 samples, 0.10%)</title><rect x="97.0313%" y="501" width="0.1016%" height="15" fill="rgb(247,202,50)" fg:x="26736" fg:w="28"/><text x="97.2813%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (28 samples, 0.10%)</title><rect x="97.0313%" y="485" width="0.1016%" height="15" fill="rgb(209,99,20)" fg:x="26736" fg:w="28"/><text x="97.2813%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="97.1583%" y="421" width="0.0109%" height="15" fill="rgb(252,27,34)" fg:x="26771" fg:w="3"/><text x="97.4083%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.04%)</title><rect x="97.1474%" y="453" width="0.0363%" height="15" fill="rgb(215,206,23)" fg:x="26768" fg:w="10"/><text x="97.3974%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.03%)</title><rect x="97.1510%" y="437" width="0.0327%" height="15" fill="rgb(212,135,36)" fg:x="26769" fg:w="9"/><text x="97.4010%" y="447.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.01%)</title><rect x="97.1692%" y="421" width="0.0145%" height="15" fill="rgb(240,189,1)" fg:x="26774" fg:w="4"/><text x="97.4192%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.11%)</title><rect x="97.1474%" y="469" width="0.1089%" height="15" fill="rgb(242,56,20)" fg:x="26768" fg:w="30"/><text x="97.3974%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 0.07%)</title><rect x="97.1837%" y="453" width="0.0726%" height="15" fill="rgb(247,132,33)" fg:x="26778" fg:w="20"/><text x="97.4337%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.07%)</title><rect x="97.1837%" y="437" width="0.0726%" height="15" fill="rgb(208,149,11)" fg:x="26778" fg:w="20"/><text x="97.4337%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (14 samples, 0.05%)</title><rect x="97.2055%" y="421" width="0.0508%" height="15" fill="rgb(211,33,11)" fg:x="26784" fg:w="14"/><text x="97.4555%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.16%)</title><rect x="97.1438%" y="485" width="0.1633%" height="15" fill="rgb(221,29,38)" fg:x="26767" fg:w="45"/><text x="97.3938%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (14 samples, 0.05%)</title><rect x="97.2563%" y="469" width="0.0508%" height="15" fill="rgb(206,182,49)" fg:x="26798" fg:w="14"/><text x="97.5063%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (11 samples, 0.04%)</title><rect x="97.2672%" y="453" width="0.0399%" height="15" fill="rgb(216,140,1)" fg:x="26801" fg:w="11"/><text x="97.5172%" y="463.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.02%)</title><rect x="97.2853%" y="437" width="0.0218%" height="15" fill="rgb(232,57,40)" fg:x="26806" fg:w="6"/><text x="97.5353%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.02%)</title><rect x="97.2890%" y="421" width="0.0181%" height="15" fill="rgb(224,186,18)" fg:x="26807" fg:w="5"/><text x="97.5390%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="97.2926%" y="405" width="0.0145%" height="15" fill="rgb(215,121,11)" fg:x="26808" fg:w="4"/><text x="97.5426%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="97.3325%" y="437" width="0.0109%" height="15" fill="rgb(245,147,10)" fg:x="26819" fg:w="3"/><text x="97.5825%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.02%)</title><rect x="97.3289%" y="453" width="0.0181%" height="15" fill="rgb(238,153,13)" fg:x="26818" fg:w="5"/><text x="97.5789%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (62 samples, 0.23%)</title><rect x="97.1329%" y="501" width="0.2250%" height="15" fill="rgb(233,108,0)" fg:x="26764" fg:w="62"/><text x="97.3829%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (14 samples, 0.05%)</title><rect x="97.3071%" y="485" width="0.0508%" height="15" fill="rgb(212,157,17)" fg:x="26812" fg:w="14"/><text x="97.5571%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (13 samples, 0.05%)</title><rect x="97.3107%" y="469" width="0.0472%" height="15" fill="rgb(225,213,38)" fg:x="26813" fg:w="13"/><text x="97.5607%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="97.3797%" y="453" width="0.0254%" height="15" fill="rgb(248,16,11)" fg:x="26832" fg:w="7"/><text x="97.6297%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="97.3833%" y="437" width="0.0218%" height="15" fill="rgb(241,33,4)" fg:x="26833" fg:w="6"/><text x="97.6333%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.04%)</title><rect x="97.3688%" y="485" width="0.0399%" height="15" fill="rgb(222,26,43)" fg:x="26829" fg:w="11"/><text x="97.6188%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.04%)</title><rect x="97.3688%" y="469" width="0.0399%" height="15" fill="rgb(243,29,36)" fg:x="26829" fg:w="11"/><text x="97.6188%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (13 samples, 0.05%)</title><rect x="97.3652%" y="501" width="0.0472%" height="15" fill="rgb(241,9,27)" fg:x="26828" fg:w="13"/><text x="97.6152%" y="511.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="97.4849%" y="405" width="0.0145%" height="15" fill="rgb(205,117,26)" fg:x="26861" fg:w="4"/><text x="97.7349%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="97.5067%" y="373" width="0.0254%" height="15" fill="rgb(209,80,39)" fg:x="26867" fg:w="7"/><text x="97.7567%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="97.5140%" y="357" width="0.0181%" height="15" fill="rgb(239,155,6)" fg:x="26869" fg:w="5"/><text x="97.7640%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (13 samples, 0.05%)</title><rect x="97.4995%" y="405" width="0.0472%" height="15" fill="rgb(212,104,12)" fg:x="26865" fg:w="13"/><text x="97.7495%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.05%)</title><rect x="97.4995%" y="389" width="0.0472%" height="15" fill="rgb(234,204,3)" fg:x="26865" fg:w="13"/><text x="97.7495%" y="399.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.01%)</title><rect x="97.5321%" y="373" width="0.0145%" height="15" fill="rgb(251,218,7)" fg:x="26874" fg:w="4"/><text x="97.7821%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="97.5357%" y="357" width="0.0109%" height="15" fill="rgb(221,81,32)" fg:x="26875" fg:w="3"/><text x="97.7857%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.13%)</title><rect x="97.4341%" y="437" width="0.1307%" height="15" fill="rgb(214,152,26)" fg:x="26847" fg:w="36"/><text x="97.6841%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.11%)</title><rect x="97.4523%" y="421" width="0.1125%" height="15" fill="rgb(223,22,3)" fg:x="26852" fg:w="31"/><text x="97.7023%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (5 samples, 0.02%)</title><rect x="97.5466%" y="405" width="0.0181%" height="15" fill="rgb(207,174,7)" fg:x="26878" fg:w="5"/><text x="97.7966%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.02%)</title><rect x="97.5648%" y="437" width="0.0218%" height="15" fill="rgb(224,19,52)" fg:x="26883" fg:w="6"/><text x="97.8148%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.02%)</title><rect x="97.5648%" y="421" width="0.0218%" height="15" fill="rgb(228,24,14)" fg:x="26883" fg:w="6"/><text x="97.8148%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (3 samples, 0.01%)</title><rect x="97.5902%" y="437" width="0.0109%" height="15" fill="rgb(230,153,43)" fg:x="26890" fg:w="3"/><text x="97.8402%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (54 samples, 0.20%)</title><rect x="97.4124%" y="501" width="0.1960%" height="15" fill="rgb(231,106,12)" fg:x="26841" fg:w="54"/><text x="97.6624%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (54 samples, 0.20%)</title><rect x="97.4124%" y="485" width="0.1960%" height="15" fill="rgb(215,92,2)" fg:x="26841" fg:w="54"/><text x="97.6624%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (54 samples, 0.20%)</title><rect x="97.4124%" y="469" width="0.1960%" height="15" fill="rgb(249,143,25)" fg:x="26841" fg:w="54"/><text x="97.6624%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (54 samples, 0.20%)</title><rect x="97.4124%" y="453" width="0.1960%" height="15" fill="rgb(252,7,35)" fg:x="26841" fg:w="54"/><text x="97.6624%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (10 samples, 0.04%)</title><rect x="97.6120%" y="501" width="0.0363%" height="15" fill="rgb(216,69,40)" fg:x="26896" fg:w="10"/><text x="97.8620%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (5 samples, 0.02%)</title><rect x="97.6301%" y="485" width="0.0181%" height="15" fill="rgb(240,36,33)" fg:x="26901" fg:w="5"/><text x="97.8801%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="97.9059%" y="405" width="0.0218%" height="15" fill="rgb(231,128,14)" fg:x="26977" fg:w="6"/><text x="98.1559%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.03%)</title><rect x="97.9059%" y="421" width="0.0327%" height="15" fill="rgb(245,143,14)" fg:x="26977" fg:w="9"/><text x="98.1559%" y="431.50"></text></g><g><title>core::ptr::null (3 samples, 0.01%)</title><rect x="97.9277%" y="405" width="0.0109%" height="15" fill="rgb(222,130,28)" fg:x="26983" fg:w="3"/><text x="98.1777%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (15 samples, 0.05%)</title><rect x="97.9604%" y="405" width="0.0544%" height="15" fill="rgb(212,10,48)" fg:x="26992" fg:w="15"/><text x="98.2104%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (11 samples, 0.04%)</title><rect x="97.9749%" y="389" width="0.0399%" height="15" fill="rgb(254,118,45)" fg:x="26996" fg:w="11"/><text x="98.2249%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (29 samples, 0.11%)</title><rect x="97.9386%" y="421" width="0.1052%" height="15" fill="rgb(228,6,45)" fg:x="26986" fg:w="29"/><text x="98.1886%" y="431.50"></text></g><g><title>core::ptr::null_mut (8 samples, 0.03%)</title><rect x="98.0148%" y="405" width="0.0290%" height="15" fill="rgb(241,18,35)" fg:x="27007" fg:w="8"/><text x="98.2648%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.03%)</title><rect x="98.0148%" y="389" width="0.0290%" height="15" fill="rgb(227,214,53)" fg:x="27007" fg:w="8"/><text x="98.2648%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.20%)</title><rect x="97.8551%" y="437" width="0.2032%" height="15" fill="rgb(224,107,51)" fg:x="26963" fg:w="56"/><text x="98.1051%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4 samples, 0.01%)</title><rect x="98.0438%" y="421" width="0.0145%" height="15" fill="rgb(248,60,28)" fg:x="27015" fg:w="4"/><text x="98.2938%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (15 samples, 0.05%)</title><rect x="98.1890%" y="325" width="0.0544%" height="15" fill="rgb(249,101,23)" fg:x="27055" fg:w="15"/><text x="98.4390%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="98.2217%" y="309" width="0.0218%" height="15" fill="rgb(228,51,19)" fg:x="27064" fg:w="6"/><text x="98.4717%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (36 samples, 0.13%)</title><rect x="98.1382%" y="357" width="0.1307%" height="15" fill="rgb(213,20,6)" fg:x="27041" fg:w="36"/><text x="98.3882%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (34 samples, 0.12%)</title><rect x="98.1455%" y="341" width="0.1234%" height="15" fill="rgb(212,124,10)" fg:x="27043" fg:w="34"/><text x="98.3955%" y="351.50"></text></g><g><title>core::ptr::null_mut (7 samples, 0.03%)</title><rect x="98.2434%" y="325" width="0.0254%" height="15" fill="rgb(248,3,40)" fg:x="27070" fg:w="7"/><text x="98.4934%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="98.2543%" y="309" width="0.0145%" height="15" fill="rgb(223,178,23)" fg:x="27073" fg:w="4"/><text x="98.5043%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.16%)</title><rect x="98.1309%" y="373" width="0.1561%" height="15" fill="rgb(240,132,45)" fg:x="27039" fg:w="43"/><text x="98.3809%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.02%)</title><rect x="98.2689%" y="357" width="0.0181%" height="15" fill="rgb(245,164,36)" fg:x="27077" fg:w="5"/><text x="98.5189%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="98.2725%" y="341" width="0.0145%" height="15" fill="rgb(231,188,53)" fg:x="27078" fg:w="4"/><text x="98.5225%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="98.2725%" y="325" width="0.0145%" height="15" fill="rgb(237,198,39)" fg:x="27078" fg:w="4"/><text x="98.5225%" y="335.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (46 samples, 0.17%)</title><rect x="98.1237%" y="405" width="0.1669%" height="15" fill="rgb(223,120,35)" fg:x="27037" fg:w="46"/><text x="98.3737%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (45 samples, 0.16%)</title><rect x="98.1273%" y="389" width="0.1633%" height="15" fill="rgb(253,107,49)" fg:x="27038" fg:w="45"/><text x="98.3773%" y="399.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}}::{{closure}} (54 samples, 0.20%)</title><rect x="98.1128%" y="421" width="0.1960%" height="15" fill="rgb(216,44,31)" fg:x="27034" fg:w="54"/><text x="98.3628%" y="431.50"></text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (5 samples, 0.02%)</title><rect x="98.2906%" y="405" width="0.0181%" height="15" fill="rgb(253,87,21)" fg:x="27083" fg:w="5"/><text x="98.5406%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (194 samples, 0.70%)</title><rect x="97.6737%" y="469" width="0.7041%" height="15" fill="rgb(226,18,2)" fg:x="26913" fg:w="194"/><text x="97.9237%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (185 samples, 0.67%)</title><rect x="97.7063%" y="453" width="0.6714%" height="15" fill="rgb(216,8,46)" fg:x="26922" fg:w="185"/><text x="97.9563%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (88 samples, 0.32%)</title><rect x="98.0584%" y="437" width="0.3194%" height="15" fill="rgb(226,140,39)" fg:x="27019" fg:w="88"/><text x="98.3084%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19 samples, 0.07%)</title><rect x="98.3088%" y="421" width="0.0690%" height="15" fill="rgb(221,194,54)" fg:x="27088" fg:w="19"/><text x="98.5588%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (16 samples, 0.06%)</title><rect x="98.3197%" y="405" width="0.0581%" height="15" fill="rgb(213,92,11)" fg:x="27091" fg:w="16"/><text x="98.5697%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (9 samples, 0.03%)</title><rect x="98.3451%" y="389" width="0.0327%" height="15" fill="rgb(229,162,46)" fg:x="27098" fg:w="9"/><text x="98.5951%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (213 samples, 0.77%)</title><rect x="97.6483%" y="501" width="0.7730%" height="15" fill="rgb(214,111,36)" fg:x="26906" fg:w="213"/><text x="97.8983%" y="511.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (210 samples, 0.76%)</title><rect x="97.6591%" y="485" width="0.7621%" height="15" fill="rgb(207,6,21)" fg:x="26909" fg:w="210"/><text x="97.9091%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.04%)</title><rect x="98.3814%" y="469" width="0.0399%" height="15" fill="rgb(213,127,38)" fg:x="27108" fg:w="11"/><text x="98.6314%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="98.3850%" y="453" width="0.0363%" height="15" fill="rgb(238,118,32)" fg:x="27109" fg:w="10"/><text x="98.6350%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (6 samples, 0.02%)</title><rect x="98.3995%" y="437" width="0.0218%" height="15" fill="rgb(240,139,39)" fg:x="27113" fg:w="6"/><text x="98.6495%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="98.4104%" y="421" width="0.0109%" height="15" fill="rgb(235,10,37)" fg:x="27116" fg:w="3"/><text x="98.6604%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.05%)</title><rect x="98.4249%" y="501" width="0.0508%" height="15" fill="rgb(249,171,38)" fg:x="27120" fg:w="14"/><text x="98.6749%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.04%)</title><rect x="98.5193%" y="453" width="0.0363%" height="15" fill="rgb(242,144,32)" fg:x="27146" fg:w="10"/><text x="98.7693%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.03%)</title><rect x="98.5302%" y="437" width="0.0254%" height="15" fill="rgb(217,117,21)" fg:x="27149" fg:w="7"/><text x="98.7802%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (27 samples, 0.10%)</title><rect x="98.4757%" y="501" width="0.0980%" height="15" fill="rgb(249,87,1)" fg:x="27134" fg:w="27"/><text x="98.7257%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (25 samples, 0.09%)</title><rect x="98.4830%" y="485" width="0.0907%" height="15" fill="rgb(248,196,48)" fg:x="27136" fg:w="25"/><text x="98.7330%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (21 samples, 0.08%)</title><rect x="98.4975%" y="469" width="0.0762%" height="15" fill="rgb(251,206,33)" fg:x="27140" fg:w="21"/><text x="98.7475%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.01%)</title><rect x="98.5592%" y="453" width="0.0145%" height="15" fill="rgb(232,141,28)" fg:x="27157" fg:w="4"/><text x="98.8092%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (15 samples, 0.05%)</title><rect x="98.5737%" y="501" width="0.0544%" height="15" fill="rgb(209,167,14)" fg:x="27161" fg:w="15"/><text x="98.8237%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (15 samples, 0.05%)</title><rect x="98.5737%" y="485" width="0.0544%" height="15" fill="rgb(225,11,50)" fg:x="27161" fg:w="15"/><text x="98.8237%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.04%)</title><rect x="98.5882%" y="469" width="0.0399%" height="15" fill="rgb(209,50,20)" fg:x="27165" fg:w="11"/><text x="98.8382%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="98.5991%" y="453" width="0.0290%" height="15" fill="rgb(212,17,46)" fg:x="27168" fg:w="8"/><text x="98.8491%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (4 samples, 0.01%)</title><rect x="98.6281%" y="501" width="0.0145%" height="15" fill="rgb(216,101,39)" fg:x="27176" fg:w="4"/><text x="98.8781%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.01%)</title><rect x="98.7624%" y="469" width="0.0109%" height="15" fill="rgb(212,228,48)" fg:x="27213" fg:w="3"/><text x="99.0124%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (7 samples, 0.03%)</title><rect x="98.7915%" y="437" width="0.0254%" height="15" fill="rgb(250,6,50)" fg:x="27221" fg:w="7"/><text x="99.0415%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (51 samples, 0.19%)</title><rect x="98.6427%" y="501" width="0.1851%" height="15" fill="rgb(250,160,48)" fg:x="27180" fg:w="51"/><text x="98.8927%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (45 samples, 0.16%)</title><rect x="98.6644%" y="485" width="0.1633%" height="15" fill="rgb(244,216,33)" fg:x="27186" fg:w="45"/><text x="98.9144%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (14 samples, 0.05%)</title><rect x="98.7769%" y="469" width="0.0508%" height="15" fill="rgb(207,157,5)" fg:x="27217" fg:w="14"/><text x="99.0269%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (10 samples, 0.04%)</title><rect x="98.7915%" y="453" width="0.0363%" height="15" fill="rgb(228,199,8)" fg:x="27221" fg:w="10"/><text x="99.0415%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (3 samples, 0.01%)</title><rect x="98.8169%" y="437" width="0.0109%" height="15" fill="rgb(227,80,20)" fg:x="27228" fg:w="3"/><text x="99.0669%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.02%)</title><rect x="98.8278%" y="501" width="0.0218%" height="15" fill="rgb(222,9,33)" fg:x="27231" fg:w="6"/><text x="99.0778%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.02%)</title><rect x="98.8314%" y="485" width="0.0181%" height="15" fill="rgb(239,44,28)" fg:x="27232" fg:w="5"/><text x="99.0814%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.02%)</title><rect x="98.8314%" y="469" width="0.0181%" height="15" fill="rgb(249,187,43)" fg:x="27232" fg:w="5"/><text x="99.0814%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (687 samples, 2.49%)</title><rect x="96.3635%" y="549" width="2.4933%" height="15" fill="rgb(216,141,28)" fg:x="26552" fg:w="687"/><text x="96.6135%" y="559.50">al..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (687 samples, 2.49%)</title><rect x="96.3635%" y="533" width="2.4933%" height="15" fill="rgb(230,154,53)" fg:x="26552" fg:w="687"/><text x="96.6135%" y="543.50">al..</text></g><g><title>alloc::str::join_generic_copy (687 samples, 2.49%)</title><rect x="96.3635%" y="517" width="2.4933%" height="15" fill="rgb(227,82,4)" fg:x="26552" fg:w="687"/><text x="96.6135%" y="527.50">al..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.01%)</title><rect x="98.9221%" y="165" width="0.0109%" height="15" fill="rgb(220,107,16)" fg:x="27257" fg:w="3"/><text x="99.1721%" y="175.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.16%)</title><rect x="98.9330%" y="165" width="0.1561%" height="15" fill="rgb(207,187,2)" fg:x="27260" fg:w="43"/><text x="99.1830%" y="175.50"></text></g><g><title>malloc (37 samples, 0.13%)</title><rect x="98.9548%" y="149" width="0.1343%" height="15" fill="rgb(210,162,52)" fg:x="27266" fg:w="37"/><text x="99.2048%" y="159.50"></text></g><g><title>[libc.so.6] (28 samples, 0.10%)</title><rect x="98.9874%" y="133" width="0.1016%" height="15" fill="rgb(217,216,49)" fg:x="27275" fg:w="28"/><text x="99.2374%" y="143.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="99.0745%" y="117" width="0.0145%" height="15" fill="rgb(218,146,49)" fg:x="27299" fg:w="4"/><text x="99.3245%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="99.1580%" y="133" width="0.0508%" height="15" fill="rgb(216,55,40)" fg:x="27322" fg:w="14"/><text x="99.4080%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (11 samples, 0.04%)</title><rect x="99.1689%" y="117" width="0.0399%" height="15" fill="rgb(208,196,21)" fg:x="27325" fg:w="11"/><text x="99.4189%" y="127.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (38 samples, 0.14%)</title><rect x="99.0927%" y="165" width="0.1379%" height="15" fill="rgb(242,117,42)" fg:x="27304" fg:w="38"/><text x="99.3427%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (30 samples, 0.11%)</title><rect x="99.1217%" y="149" width="0.1089%" height="15" fill="rgb(210,11,23)" fg:x="27312" fg:w="30"/><text x="99.3717%" y="159.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.02%)</title><rect x="99.2088%" y="133" width="0.0218%" height="15" fill="rgb(217,110,2)" fg:x="27336" fg:w="6"/><text x="99.4588%" y="143.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.01%)</title><rect x="99.2197%" y="117" width="0.0109%" height="15" fill="rgb(229,77,54)" fg:x="27339" fg:w="3"/><text x="99.4697%" y="127.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.01%)</title><rect x="99.2415%" y="149" width="0.0109%" height="15" fill="rgb(218,53,16)" fg:x="27345" fg:w="3"/><text x="99.4915%" y="159.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (115 samples, 0.42%)</title><rect x="98.8568%" y="373" width="0.4174%" height="15" fill="rgb(215,38,13)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (115 samples, 0.42%)</title><rect x="98.8568%" y="357" width="0.4174%" height="15" fill="rgb(235,42,18)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (115 samples, 0.42%)</title><rect x="98.8568%" y="341" width="0.4174%" height="15" fill="rgb(219,66,54)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (115 samples, 0.42%)</title><rect x="98.8568%" y="325" width="0.4174%" height="15" fill="rgb(222,205,4)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (115 samples, 0.42%)</title><rect x="98.8568%" y="309" width="0.4174%" height="15" fill="rgb(227,213,46)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (115 samples, 0.42%)</title><rect x="98.8568%" y="293" width="0.4174%" height="15" fill="rgb(250,145,42)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (115 samples, 0.42%)</title><rect x="98.8568%" y="277" width="0.4174%" height="15" fill="rgb(219,15,2)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (115 samples, 0.42%)</title><rect x="98.8568%" y="261" width="0.4174%" height="15" fill="rgb(231,181,52)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (115 samples, 0.42%)</title><rect x="98.8568%" y="245" width="0.4174%" height="15" fill="rgb(235,1,42)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (115 samples, 0.42%)</title><rect x="98.8568%" y="229" width="0.4174%" height="15" fill="rgb(249,88,27)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (115 samples, 0.42%)</title><rect x="98.8568%" y="213" width="0.4174%" height="15" fill="rgb(235,145,16)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (115 samples, 0.42%)</title><rect x="98.8568%" y="197" width="0.4174%" height="15" fill="rgb(237,114,19)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (115 samples, 0.42%)</title><rect x="98.8568%" y="181" width="0.4174%" height="15" fill="rgb(238,51,50)" fg:x="27239" fg:w="115"/><text x="99.1068%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (12 samples, 0.04%)</title><rect x="99.2306%" y="165" width="0.0436%" height="15" fill="rgb(205,194,25)" fg:x="27342" fg:w="12"/><text x="99.4806%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.02%)</title><rect x="99.2524%" y="149" width="0.0218%" height="15" fill="rgb(215,203,17)" fg:x="27348" fg:w="6"/><text x="99.5024%" y="159.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="99.3685%" y="165" width="0.0109%" height="15" fill="rgb(233,112,49)" fg:x="27380" fg:w="3"/><text x="99.6185%" y="175.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.07%)</title><rect x="99.3613%" y="181" width="0.0726%" height="15" fill="rgb(241,130,26)" fg:x="27378" fg:w="20"/><text x="99.6113%" y="191.50"></text></g><g><title>malloc (14 samples, 0.05%)</title><rect x="99.3830%" y="165" width="0.0508%" height="15" fill="rgb(252,223,19)" fg:x="27384" fg:w="14"/><text x="99.6330%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (19 samples, 0.07%)</title><rect x="99.4738%" y="149" width="0.0690%" height="15" fill="rgb(211,95,25)" fg:x="27409" fg:w="19"/><text x="99.7238%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (12 samples, 0.04%)</title><rect x="99.4992%" y="133" width="0.0436%" height="15" fill="rgb(251,182,27)" fg:x="27416" fg:w="12"/><text x="99.7492%" y="143.50"></text></g><g><title>core::ptr::invalid_mut (3 samples, 0.01%)</title><rect x="99.5427%" y="133" width="0.0109%" height="15" fill="rgb(238,24,4)" fg:x="27428" fg:w="3"/><text x="99.7927%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (32 samples, 0.12%)</title><rect x="99.4411%" y="181" width="0.1161%" height="15" fill="rgb(224,220,25)" fg:x="27400" fg:w="32"/><text x="99.6911%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (25 samples, 0.09%)</title><rect x="99.4665%" y="165" width="0.0907%" height="15" fill="rgb(239,133,26)" fg:x="27407" fg:w="25"/><text x="99.7165%" y="175.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.01%)</title><rect x="99.5427%" y="149" width="0.0145%" height="15" fill="rgb(211,94,48)" fg:x="27428" fg:w="4"/><text x="99.7927%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (7 samples, 0.03%)</title><rect x="99.5790%" y="149" width="0.0254%" height="15" fill="rgb(239,87,6)" fg:x="27438" fg:w="7"/><text x="99.8290%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.32%)</title><rect x="99.2996%" y="213" width="0.3157%" height="15" fill="rgb(227,62,0)" fg:x="27361" fg:w="87"/><text x="99.5496%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.30%)</title><rect x="99.3141%" y="197" width="0.3012%" height="15" fill="rgb(211,226,4)" fg:x="27365" fg:w="83"/><text x="99.5641%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (16 samples, 0.06%)</title><rect x="99.5572%" y="181" width="0.0581%" height="15" fill="rgb(253,38,52)" fg:x="27432" fg:w="16"/><text x="99.8072%" y="191.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (13 samples, 0.05%)</title><rect x="99.5681%" y="165" width="0.0472%" height="15" fill="rgb(229,126,40)" fg:x="27435" fg:w="13"/><text x="99.8181%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (3 samples, 0.01%)</title><rect x="99.6044%" y="149" width="0.0109%" height="15" fill="rgb(229,165,44)" fg:x="27445" fg:w="3"/><text x="99.8544%" y="159.50"></text></g><g><title>unkr::core::loop_decrypt (26,713 samples, 96.95%)</title><rect x="2.8671%" y="597" width="96.9478%" height="15" fill="rgb(247,95,47)" fg:x="790" fg:w="26713"/><text x="3.1171%" y="607.50">unkr::core::loop_decrypt</text></g><g><title>unkr::core::loop_decrypt (26,713 samples, 96.95%)</title><rect x="2.8671%" y="581" width="96.9478%" height="15" fill="rgb(216,140,30)" fg:x="790" fg:w="26713"/><text x="3.1171%" y="591.50">unkr::core::loop_decrypt</text></g><g><title>unkr::transpose::decrypt (951 samples, 3.45%)</title><rect x="96.3635%" y="565" width="3.4514%" height="15" fill="rgb(246,214,8)" fg:x="26552" fg:w="951"/><text x="96.6135%" y="575.50">unk..</text></g><g><title>unkr::transpose::internal_encrypt (264 samples, 0.96%)</title><rect x="98.8568%" y="549" width="0.9581%" height="15" fill="rgb(227,224,15)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (264 samples, 0.96%)</title><rect x="98.8568%" y="533" width="0.9581%" height="15" fill="rgb(233,175,4)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (264 samples, 0.96%)</title><rect x="98.8568%" y="517" width="0.9581%" height="15" fill="rgb(221,66,45)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (264 samples, 0.96%)</title><rect x="98.8568%" y="501" width="0.9581%" height="15" fill="rgb(221,178,18)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (264 samples, 0.96%)</title><rect x="98.8568%" y="485" width="0.9581%" height="15" fill="rgb(213,81,29)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (264 samples, 0.96%)</title><rect x="98.8568%" y="469" width="0.9581%" height="15" fill="rgb(220,89,49)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (264 samples, 0.96%)</title><rect x="98.8568%" y="453" width="0.9581%" height="15" fill="rgb(227,60,33)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (264 samples, 0.96%)</title><rect x="98.8568%" y="437" width="0.9581%" height="15" fill="rgb(205,113,12)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (264 samples, 0.96%)</title><rect x="98.8568%" y="421" width="0.9581%" height="15" fill="rgb(211,32,1)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (264 samples, 0.96%)</title><rect x="98.8568%" y="405" width="0.9581%" height="15" fill="rgb(246,2,12)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="415.50"></text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (264 samples, 0.96%)</title><rect x="98.8568%" y="389" width="0.9581%" height="15" fill="rgb(243,37,27)" fg:x="27239" fg:w="264"/><text x="99.1068%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (149 samples, 0.54%)</title><rect x="99.2742%" y="373" width="0.5408%" height="15" fill="rgb(248,211,31)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;char&gt;&gt;::from_iter (149 samples, 0.54%)</title><rect x="99.2742%" y="357" width="0.5408%" height="15" fill="rgb(242,146,47)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;char&gt;&gt;::extend (149 samples, 0.54%)</title><rect x="99.2742%" y="341" width="0.5408%" height="15" fill="rgb(206,70,20)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (149 samples, 0.54%)</title><rect x="99.2742%" y="325" width="0.5408%" height="15" fill="rgb(215,10,51)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="335.50"></text></g><g><title>alloc::string::String::reserve (149 samples, 0.54%)</title><rect x="99.2742%" y="309" width="0.5408%" height="15" fill="rgb(243,178,53)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (149 samples, 0.54%)</title><rect x="99.2742%" y="293" width="0.5408%" height="15" fill="rgb(233,221,20)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (149 samples, 0.54%)</title><rect x="99.2742%" y="277" width="0.5408%" height="15" fill="rgb(218,95,35)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (149 samples, 0.54%)</title><rect x="99.2742%" y="261" width="0.5408%" height="15" fill="rgb(229,13,5)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (149 samples, 0.54%)</title><rect x="99.2742%" y="245" width="0.5408%" height="15" fill="rgb(252,164,30)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (149 samples, 0.54%)</title><rect x="99.2742%" y="229" width="0.5408%" height="15" fill="rgb(232,68,36)" fg:x="27354" fg:w="149"/><text x="99.5242%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 samples, 0.19%)</title><rect x="99.6226%" y="213" width="0.1923%" height="15" fill="rgb(219,59,54)" fg:x="27450" fg:w="53"/><text x="99.8726%" y="223.50"></text></g><g><title>alloc::string::String::reserve (3 samples, 0.01%)</title><rect x="99.8258%" y="293" width="0.0109%" height="15" fill="rgb(250,92,33)" fg:x="27506" fg:w="3"/><text x="100.0758%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="99.8258%" y="277" width="0.0109%" height="15" fill="rgb(229,162,54)" fg:x="27506" fg:w="3"/><text x="100.0758%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="99.8258%" y="261" width="0.0109%" height="15" fill="rgb(244,114,52)" fg:x="27506" fg:w="3"/><text x="100.0758%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="99.8258%" y="245" width="0.0109%" height="15" fill="rgb(212,211,43)" fg:x="27506" fg:w="3"/><text x="100.0758%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="99.8258%" y="229" width="0.0109%" height="15" fill="rgb(226,147,8)" fg:x="27506" fg:w="3"/><text x="100.0758%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.01%)</title><rect x="99.8367%" y="213" width="0.0109%" height="15" fill="rgb(226,23,13)" fg:x="27509" fg:w="3"/><text x="100.0867%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="99.8548%" y="197" width="0.0218%" height="15" fill="rgb(240,63,4)" fg:x="27514" fg:w="6"/><text x="100.1048%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="99.8585%" y="181" width="0.0181%" height="15" fill="rgb(221,1,32)" fg:x="27515" fg:w="5"/><text x="100.1085%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.05%)</title><rect x="99.8367%" y="229" width="0.0472%" height="15" fill="rgb(242,117,10)" fg:x="27509" fg:w="13"/><text x="100.0867%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.04%)</title><rect x="99.8476%" y="213" width="0.0363%" height="15" fill="rgb(249,172,44)" fg:x="27512" fg:w="10"/><text x="100.0976%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.01%)</title><rect x="99.8911%" y="149" width="0.0109%" height="15" fill="rgb(244,46,45)" fg:x="27524" fg:w="3"/><text x="100.1411%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.08%)</title><rect x="99.8258%" y="357" width="0.0798%" height="15" fill="rgb(206,43,17)" fg:x="27506" fg:w="22"/><text x="100.0758%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;char&gt;&gt;::from_iter (22 samples, 0.08%)</title><rect x="99.8258%" y="341" width="0.0798%" height="15" fill="rgb(239,218,39)" fg:x="27506" fg:w="22"/><text x="100.0758%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;char&gt;&gt;::extend (22 samples, 0.08%)</title><rect x="99.8258%" y="325" width="0.0798%" height="15" fill="rgb(208,169,54)" fg:x="27506" fg:w="22"/><text x="100.0758%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (22 samples, 0.08%)</title><rect x="99.8258%" y="309" width="0.0798%" height="15" fill="rgb(247,25,42)" fg:x="27506" fg:w="22"/><text x="100.0758%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 0.07%)</title><rect x="99.8367%" y="293" width="0.0690%" height="15" fill="rgb(226,23,31)" fg:x="27509" fg:w="19"/><text x="100.0867%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.07%)</title><rect x="99.8367%" y="277" width="0.0690%" height="15" fill="rgb(247,16,28)" fg:x="27509" fg:w="19"/><text x="100.0867%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.07%)</title><rect x="99.8367%" y="261" width="0.0690%" height="15" fill="rgb(231,147,38)" fg:x="27509" fg:w="19"/><text x="100.0867%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (19 samples, 0.07%)</title><rect x="99.8367%" y="245" width="0.0690%" height="15" fill="rgb(253,81,48)" fg:x="27509" fg:w="19"/><text x="100.0867%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.02%)</title><rect x="99.8839%" y="229" width="0.0218%" height="15" fill="rgb(249,222,43)" fg:x="27522" fg:w="6"/><text x="100.1339%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.02%)</title><rect x="99.8839%" y="213" width="0.0218%" height="15" fill="rgb(221,3,27)" fg:x="27522" fg:w="6"/><text x="100.1339%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (6 samples, 0.02%)</title><rect x="99.8839%" y="197" width="0.0218%" height="15" fill="rgb(228,180,5)" fg:x="27522" fg:w="6"/><text x="100.1339%" y="207.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.02%)</title><rect x="99.8839%" y="181" width="0.0218%" height="15" fill="rgb(227,131,42)" fg:x="27522" fg:w="6"/><text x="100.1339%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="99.8875%" y="165" width="0.0181%" height="15" fill="rgb(212,3,39)" fg:x="27523" fg:w="5"/><text x="100.1375%" y="175.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.01%)</title><rect x="99.9056%" y="261" width="0.0109%" height="15" fill="rgb(226,45,5)" fg:x="27528" fg:w="3"/><text x="100.1556%" y="271.50"></text></g><g><title>core::str::validations::next_code_point_reverse (3 samples, 0.01%)</title><rect x="99.9056%" y="245" width="0.0109%" height="15" fill="rgb(215,167,45)" fg:x="27528" fg:w="3"/><text x="100.1556%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.01%)</title><rect x="99.9056%" y="229" width="0.0109%" height="15" fill="rgb(250,218,53)" fg:x="27528" fg:w="3"/><text x="100.1556%" y="239.50"></text></g><g><title>[unknown] (27,244 samples, 98.87%)</title><rect x="1.0452%" y="613" width="98.8749%" height="15" fill="rgb(207,140,0)" fg:x="288" fg:w="27244"/><text x="1.2952%" y="623.50">[unknown]</text></g><g><title>unkr::core::threaded_function (29 samples, 0.11%)</title><rect x="99.8149%" y="597" width="0.1052%" height="15" fill="rgb(238,133,51)" fg:x="27503" fg:w="29"/><text x="100.0649%" y="607.50"></text></g><g><title>unkr::core::loop_decrypt (29 samples, 0.11%)</title><rect x="99.8149%" y="581" width="0.1052%" height="15" fill="rgb(218,203,53)" fg:x="27503" fg:w="29"/><text x="100.0649%" y="591.50"></text></g><g><title>unkr::core::loop_decrypt (29 samples, 0.11%)</title><rect x="99.8149%" y="565" width="0.1052%" height="15" fill="rgb(226,184,25)" fg:x="27503" fg:w="29"/><text x="100.0649%" y="575.50"></text></g><g><title>unkr::transpose::decrypt (28 samples, 0.10%)</title><rect x="99.8185%" y="549" width="0.1016%" height="15" fill="rgb(231,121,21)" fg:x="27504" fg:w="28"/><text x="100.0685%" y="559.50"></text></g><g><title>unkr::transpose::internal_encrypt (28 samples, 0.10%)</title><rect x="99.8185%" y="533" width="0.1016%" height="15" fill="rgb(251,14,34)" fg:x="27504" fg:w="28"/><text x="100.0685%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.09%)</title><rect x="99.8258%" y="517" width="0.0944%" height="15" fill="rgb(249,193,11)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.09%)</title><rect x="99.8258%" y="501" width="0.0944%" height="15" fill="rgb(220,172,37)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.09%)</title><rect x="99.8258%" y="485" width="0.0944%" height="15" fill="rgb(231,229,43)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.09%)</title><rect x="99.8258%" y="469" width="0.0944%" height="15" fill="rgb(250,161,5)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.09%)</title><rect x="99.8258%" y="453" width="0.0944%" height="15" fill="rgb(218,225,18)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.09%)</title><rect x="99.8258%" y="437" width="0.0944%" height="15" fill="rgb(245,45,42)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.09%)</title><rect x="99.8258%" y="421" width="0.0944%" height="15" fill="rgb(211,115,1)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.09%)</title><rect x="99.8258%" y="405" width="0.0944%" height="15" fill="rgb(248,133,52)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (26 samples, 0.09%)</title><rect x="99.8258%" y="389" width="0.0944%" height="15" fill="rgb(238,100,21)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="399.50"></text></g><g><title>unkr::transpose::internal_encrypt::{{closure}} (26 samples, 0.09%)</title><rect x="99.8258%" y="373" width="0.0944%" height="15" fill="rgb(247,144,11)" fg:x="27506" fg:w="26"/><text x="100.0758%" y="383.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end (4 samples, 0.01%)</title><rect x="99.9056%" y="357" width="0.0145%" height="15" fill="rgb(206,164,16)" fg:x="27528" fg:w="4"/><text x="100.1556%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (4 samples, 0.01%)</title><rect x="99.9056%" y="341" width="0.0145%" height="15" fill="rgb(222,34,3)" fg:x="27528" fg:w="4"/><text x="100.1556%" y="351.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (4 samples, 0.01%)</title><rect x="99.9056%" y="325" width="0.0145%" height="15" fill="rgb(248,82,4)" fg:x="27528" fg:w="4"/><text x="100.1556%" y="335.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (4 samples, 0.01%)</title><rect x="99.9056%" y="309" width="0.0145%" height="15" fill="rgb(228,81,46)" fg:x="27528" fg:w="4"/><text x="100.1556%" y="319.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (4 samples, 0.01%)</title><rect x="99.9056%" y="293" width="0.0145%" height="15" fill="rgb(227,67,47)" fg:x="27528" fg:w="4"/><text x="100.1556%" y="303.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 0.01%)</title><rect x="99.9056%" y="277" width="0.0145%" height="15" fill="rgb(215,93,53)" fg:x="27528" fg:w="4"/><text x="100.1556%" y="287.50"></text></g><g><title>std::io::stdio::_eprint (5 samples, 0.02%)</title><rect x="99.9238%" y="277" width="0.0181%" height="15" fill="rgb(248,194,39)" fg:x="27533" fg:w="5"/><text x="100.1738%" y="287.50"></text></g><g><title>std::io::stdio::print_to (5 samples, 0.02%)</title><rect x="99.9238%" y="261" width="0.0181%" height="15" fill="rgb(215,5,19)" fg:x="27533" fg:w="5"/><text x="100.1738%" y="271.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (5 samples, 0.02%)</title><rect x="99.9238%" y="245" width="0.0181%" height="15" fill="rgb(226,215,51)" fg:x="27533" fg:w="5"/><text x="100.1738%" y="255.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (5 samples, 0.02%)</title><rect x="99.9238%" y="229" width="0.0181%" height="15" fill="rgb(225,56,26)" fg:x="27533" fg:w="5"/><text x="100.1738%" y="239.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (6 samples, 0.02%)</title><rect x="99.9419%" y="277" width="0.0218%" height="15" fill="rgb(222,75,29)" fg:x="27538" fg:w="6"/><text x="100.1919%" y="287.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::recv (6 samples, 0.02%)</title><rect x="99.9419%" y="261" width="0.0218%" height="15" fill="rgb(236,139,6)" fg:x="27538" fg:w="6"/><text x="100.1919%" y="271.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (5 samples, 0.02%)</title><rect x="99.9456%" y="245" width="0.0181%" height="15" fill="rgb(223,137,36)" fg:x="27539" fg:w="5"/><text x="100.1956%" y="255.50"></text></g><g><title>std::thread::park (4 samples, 0.01%)</title><rect x="99.9492%" y="229" width="0.0145%" height="15" fill="rgb(226,99,2)" fg:x="27540" fg:w="4"/><text x="100.1992%" y="239.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (3 samples, 0.01%)</title><rect x="99.9528%" y="213" width="0.0109%" height="15" fill="rgb(206,133,23)" fg:x="27541" fg:w="3"/><text x="100.2028%" y="223.50"></text></g><g><title>_dl_allocate_tls (6 samples, 0.02%)</title><rect x="99.9746%" y="181" width="0.0218%" height="15" fill="rgb(243,173,15)" fg:x="27547" fg:w="6"/><text x="100.2246%" y="191.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="99.9746%" y="165" width="0.0218%" height="15" fill="rgb(228,69,28)" fg:x="27547" fg:w="6"/><text x="100.2246%" y="175.50"></text></g><g><title>__libc_calloc (4 samples, 0.01%)</title><rect x="99.9819%" y="149" width="0.0145%" height="15" fill="rgb(212,51,22)" fg:x="27549" fg:w="4"/><text x="100.2319%" y="159.50"></text></g><g><title>all (27,554 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(227,113,0)" fg:x="0" fg:w="27554"/><text x="0.2500%" y="655.50"></text></g><g><title>unkr (27,512 samples, 99.85%)</title><rect x="0.1524%" y="629" width="99.8476%" height="15" fill="rgb(252,84,27)" fg:x="42" fg:w="27512"/><text x="0.4024%" y="639.50">unkr</text></g><g><title>_start (22 samples, 0.08%)</title><rect x="99.9202%" y="613" width="0.0798%" height="15" fill="rgb(223,145,39)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="623.50"></text></g><g><title>__libc_start_main (22 samples, 0.08%)</title><rect x="99.9202%" y="597" width="0.0798%" height="15" fill="rgb(239,219,30)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="607.50"></text></g><g><title>[libc.so.6] (22 samples, 0.08%)</title><rect x="99.9202%" y="581" width="0.0798%" height="15" fill="rgb(224,196,39)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="591.50"></text></g><g><title>main (22 samples, 0.08%)</title><rect x="99.9202%" y="565" width="0.0798%" height="15" fill="rgb(205,35,43)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="575.50"></text></g><g><title>std::rt::lang_start (22 samples, 0.08%)</title><rect x="99.9202%" y="549" width="0.0798%" height="15" fill="rgb(228,201,21)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="559.50"></text></g><g><title>std::rt::lang_start_internal (22 samples, 0.08%)</title><rect x="99.9202%" y="533" width="0.0798%" height="15" fill="rgb(237,118,16)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="543.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.08%)</title><rect x="99.9202%" y="517" width="0.0798%" height="15" fill="rgb(241,17,19)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="527.50"></text></g><g><title>std::panicking::try (22 samples, 0.08%)</title><rect x="99.9202%" y="501" width="0.0798%" height="15" fill="rgb(214,10,25)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="511.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.08%)</title><rect x="99.9202%" y="485" width="0.0798%" height="15" fill="rgb(238,37,29)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="495.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (22 samples, 0.08%)</title><rect x="99.9202%" y="469" width="0.0798%" height="15" fill="rgb(253,83,25)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="479.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.08%)</title><rect x="99.9202%" y="453" width="0.0798%" height="15" fill="rgb(234,192,12)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="463.50"></text></g><g><title>std::panicking::try (22 samples, 0.08%)</title><rect x="99.9202%" y="437" width="0.0798%" height="15" fill="rgb(241,216,45)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="447.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.08%)</title><rect x="99.9202%" y="421" width="0.0798%" height="15" fill="rgb(242,22,33)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (22 samples, 0.08%)</title><rect x="99.9202%" y="405" width="0.0798%" height="15" fill="rgb(231,105,49)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="415.50"></text></g><g><title>std::rt::lang_start::{{closure}} (22 samples, 0.08%)</title><rect x="99.9202%" y="389" width="0.0798%" height="15" fill="rgb(218,204,15)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="399.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 0.08%)</title><rect x="99.9202%" y="373" width="0.0798%" height="15" fill="rgb(235,138,41)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.08%)</title><rect x="99.9202%" y="357" width="0.0798%" height="15" fill="rgb(246,0,9)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="367.50"></text></g><g><title>unkr::main (22 samples, 0.08%)</title><rect x="99.9202%" y="341" width="0.0798%" height="15" fill="rgb(210,74,4)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="351.50"></text></g><g><title>unkr::core::brute_force_decrypt (22 samples, 0.08%)</title><rect x="99.9202%" y="325" width="0.0798%" height="15" fill="rgb(250,60,41)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="335.50"></text></g><g><title>unkr::core::brute_force_strings (22 samples, 0.08%)</title><rect x="99.9202%" y="309" width="0.0798%" height="15" fill="rgb(220,115,12)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="319.50"></text></g><g><title>unkr::core::internal_brute_force_decrypt (22 samples, 0.08%)</title><rect x="99.9202%" y="293" width="0.0798%" height="15" fill="rgb(237,100,13)" fg:x="27532" fg:w="22"/><text x="100.1702%" y="303.50"></text></g><g><title>std::thread::spawn (10 samples, 0.04%)</title><rect x="99.9637%" y="277" width="0.0363%" height="15" fill="rgb(213,55,26)" fg:x="27544" fg:w="10"/><text x="100.2137%" y="287.50"></text></g><g><title>std::thread::Builder::spawn (10 samples, 0.04%)</title><rect x="99.9637%" y="261" width="0.0363%" height="15" fill="rgb(216,17,4)" fg:x="27544" fg:w="10"/><text x="100.2137%" y="271.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (10 samples, 0.04%)</title><rect x="99.9637%" y="245" width="0.0363%" height="15" fill="rgb(220,153,47)" fg:x="27544" fg:w="10"/><text x="100.2137%" y="255.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (10 samples, 0.04%)</title><rect x="99.9637%" y="229" width="0.0363%" height="15" fill="rgb(215,131,9)" fg:x="27544" fg:w="10"/><text x="100.2137%" y="239.50"></text></g><g><title>std::sys::unix::thread::Thread::new (10 samples, 0.04%)</title><rect x="99.9637%" y="213" width="0.0363%" height="15" fill="rgb(233,46,42)" fg:x="27544" fg:w="10"/><text x="100.2137%" y="223.50"></text></g><g><title>pthread_create (10 samples, 0.04%)</title><rect x="99.9637%" y="197" width="0.0363%" height="15" fill="rgb(226,86,7)" fg:x="27544" fg:w="10"/><text x="100.2137%" y="207.50"></text></g></svg></svg>